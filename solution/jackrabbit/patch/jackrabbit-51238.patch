diff --git a/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/value/BaseValue.java b/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/value/BaseValue.java
index 5f14c4c..cc0ea26 100644
--- a/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/value/BaseValue.java
+++ b/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/value/BaseValue.java
@@ -51,12 +51,6 @@ public abstract class BaseValue implements Value {
 
     protected static final String DEFAULT_ENCODING = "UTF-8";
 
-    private static final short STATE_UNDEFINED = 0;
-    private static final short STATE_VALUE_CONSUMED = 1;
-    private static final short STATE_STREAM_CONSUMED = 2;
-
-    private short state = STATE_UNDEFINED;
-
     protected final int type;
 
     protected InputStream stream = null;
@@ -71,39 +65,6 @@ public abstract class BaseValue implements Value {
     }
 
     /**
-     * Checks if the non-stream value of this instance has already been
-     * consumed (if any getter methods except <code>{@link #getStream()}</code> and
-     * <code>{@link #getType()}</code> have been previously called at least once) and
-     * sets the state to <code>STATE_STREAM_CONSUMED</code>.
-     *
-     * @throws IllegalStateException if any getter methods other than
-     *                               <code>getStream()</code> and
-     *                               <code>getType()</code> have been
-     *                               previously called at least once.
-     */
-    protected void setStreamConsumed() throws IllegalStateException {
-        if (state == STATE_VALUE_CONSUMED) {
-            throw new IllegalStateException("non-stream value has already been consumed");
-        }
-        state = STATE_STREAM_CONSUMED;
-    }
-
-    /**
-     * Checks if the stream value of this instance has already been
-     * consumed (if {@link #getStream()} has been previously called
-     * at least once) and sets the state to <code>STATE_VALUE_CONSUMED</code>.
-     *
-     * @throws IllegalStateException if <code>getStream()</code> has been
-     *                               previously called at least once.
-     */
-    protected void setValueConsumed() throws IllegalStateException {
-        if (state == STATE_STREAM_CONSUMED) {
-            throw new IllegalStateException("stream value has already been consumed");
-        }
-        state = STATE_VALUE_CONSUMED;
-    }
-
-    /**
      * Returns the internal string representation of this value without modifying
      * the value state.
      *
@@ -130,8 +91,6 @@ public abstract class BaseValue implements Value {
     public Calendar getDate()
             throws ValueFormatException, IllegalStateException,
             RepositoryException {
-        setValueConsumed();
-
         Calendar cal = ISO8601.parse(getInternalString());
         if (cal == null) {
             throw new ValueFormatException("not a valid date format");
@@ -146,8 +105,6 @@ public abstract class BaseValue implements Value {
     public long getLong()
             throws ValueFormatException, IllegalStateException,
             RepositoryException {
-        setValueConsumed();
-
         try {
             return Long.parseLong(getInternalString());
         } catch (NumberFormatException e) {
@@ -161,9 +118,7 @@ public abstract class BaseValue implements Value {
     public boolean getBoolean()
             throws ValueFormatException, IllegalStateException,
             RepositoryException {
-        setValueConsumed();
-
-        return Boolean.valueOf(getInternalString()).booleanValue();
+        return Boolean.valueOf(getInternalString());
     }
 
     /**
@@ -172,8 +127,6 @@ public abstract class BaseValue implements Value {
     public double getDouble()
             throws ValueFormatException, IllegalStateException,
             RepositoryException {
-        setValueConsumed();
-
         try {
             return Double.parseDouble(getInternalString());
         } catch (NumberFormatException e) {
@@ -187,8 +140,6 @@ public abstract class BaseValue implements Value {
     public BigDecimal getDecimal()
             throws ValueFormatException, IllegalStateException,
             RepositoryException {
-        setValueConsumed();
-
         try {
             return new BigDecimal(getInternalString());
         } catch (NumberFormatException e) {
@@ -201,8 +152,6 @@ public abstract class BaseValue implements Value {
      */
     public InputStream getStream()
             throws IllegalStateException, RepositoryException {
-        setStreamConsumed();
-
         if (stream != null) {
             return stream;
         }
@@ -240,8 +189,6 @@ public abstract class BaseValue implements Value {
     public String getString()
             throws ValueFormatException, IllegalStateException,
             RepositoryException {
-        setValueConsumed();
-
         return getInternalString();
     }
 }
