diff --git a/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/config/SecurityConfigTest.java b/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/config/SecurityConfigTest.java
index d794c44..5922ac9 100644
--- a/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/config/SecurityConfigTest.java
+++ b/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/config/SecurityConfigTest.java
@@ -18,6 +18,7 @@ package org.apache.jackrabbit.core.config;
 
 import org.apache.jackrabbit.core.DefaultSecurityManager;
 import org.apache.jackrabbit.core.security.DefaultAccessManager;
+import org.apache.jackrabbit.core.security.user.UserManagerImpl;
 import org.apache.jackrabbit.core.security.authentication.DefaultLoginModule;
 import org.apache.jackrabbit.core.security.simple.SimpleAccessManager;
 import org.apache.jackrabbit.core.security.simple.SimpleSecurityManager;
@@ -88,6 +89,8 @@ public class SecurityConfigTest extends AbstractJCRTest {
         assertNull(smc.getWorkspaceAccessConfig());
         assertEquals("security", smc.getWorkspaceName());
 
+        assertNull(smc.getUserManagerConfig());
+
         AccessManagerConfig amc = config.getAccessManagerConfig();
         assertNotNull(amc);
         assertTrue(amc.newInstance() instanceof DefaultAccessManager);
@@ -102,6 +105,24 @@ public class SecurityConfigTest extends AbstractJCRTest {
         assertEquals("org.apache.jackrabbit.TestPrincipalProvider", options.getProperty("principalProvider"));
     }
 
+    public void testConfig3() throws ConfigurationException {
+        Element xml = parseXML(new InputSource(new StringReader(CONFIG_3)), true);
+        SecurityConfig config = parser.parseSecurityConfig(xml);
+
+        SecurityManagerConfig smc = config.getSecurityManagerConfig();
+
+        assertNotNull(smc.getUserManagerConfig());
+        BeanConfig umc = smc.getUserManagerConfig();
+
+        Properties params = umc.getParameters();
+        assertNotNull(params);
+
+        assertFalse(params.containsKey(UserManagerImpl.PARAM_COMPATIBILE_JR16));
+        assertTrue(Boolean.parseBoolean(params.getProperty(UserManagerImpl.PARAM_AUTO_EXPAND_TREE)));
+        assertEquals(4, Integer.parseInt(params.getProperty(UserManagerImpl.PARAM_DEFAULT_DEPTH)));
+        assertEquals(2000, Long.parseLong(params.getProperty(UserManagerImpl.PARAM_AUTO_EXPAND_SIZE)));
+    }
+
     public void testInvalidConfig() {
         List invalid = new ArrayList();
         invalid.add(new InputSource(new StringReader(INVALID_CONFIG_1)));
@@ -160,6 +181,24 @@ public class SecurityConfigTest extends AbstractJCRTest {
             "        </LoginModule>\n" +
             "    </Security>";
 
+    private static final String CONFIG_3 =
+            "    <Security appName=\"Jackrabbit\">" +
+            "        <SecurityManager class=\"org.apache.jackrabbit.core.DefaultSecurityManager\" workspaceName=\"security\">" +
+            "           <UserManager class=\"\">" +
+            "           <param name=\"defaultDepth\" value=\"4\"/>" +
+            "           <param name=\"autoExpandTree\" value=\"true\"/>" +
+            "           <param name=\"autoExpandSize\" value=\"2000\"/>" +
+            "           </UserManager>" +
+            "        </SecurityManager>" +
+            "        <AccessManager class=\"org.apache.jackrabbit.core.security.DefaultAccessManager\">" +
+            "        </AccessManager>" +
+            "        <LoginModule class=\"org.apache.jackrabbit.core.security.authentication.DefaultLoginModule\">" +
+            "           <param name=\"anonymousId\" value=\"anonymous\"/>" +
+            "           <param name=\"adminId\" value=\"admin\"/>" +
+            "           <param name=\"principalProvider\" value=\"org.apache.jackrabbit.TestPrincipalProvider\"/>" +
+            "        </LoginModule>\n" +
+            "    </Security>";
+
     private static final String INVALID_CONFIG_1 =
             "    <Security appName=\"Jackrabbit\">" +
             "        <SecurityManager class=\"org.apache.jackrabbit.core.security.simple.SimpleSecurityManager\"></SecurityManager>" +
