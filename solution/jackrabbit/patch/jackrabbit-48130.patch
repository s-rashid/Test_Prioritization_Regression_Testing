diff --git a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/DoublePropertyTest.java b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/DoublePropertyTest.java
index d598f7a..fa0fa74 100644
--- a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/DoublePropertyTest.java
+++ b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/DoublePropertyTest.java
@@ -172,20 +172,43 @@ public class DoublePropertyTest extends AbstractPropertyTest {
     }
 
     /**
-     * tests failure of conversion from Double type to Reference type
+     * Tests failure of conversion from Double type to Reference, WeakReference or Path type.
      */
-    public void testAsReference() throws RepositoryException {
+    public void testGetNode() throws RepositoryException {
         if (!multiple) {
             try {
                 prop.getNode();
-                fail("Conversion from a Double value to a Reference value " +
+                fail("Conversion from a Double value to a Reference or Path value " +
+                        "should throw a ValueFormatException.");
+            } catch (ValueFormatException e) {
+                // success.
+            }
+        } else {
+            try {
+                prop.getNode();
+                fail("Property.getNode() called on a multivalue property " +
                         "should throw a ValueFormatException.");
             } catch (ValueFormatException vfe) {
                 //ok
             }
+        }
+    }
+
+    /**
+     * Tests failure of conversion from Double type to Path type.
+     */
+    public void testGetProperty() throws RepositoryException {
+        if (!multiple) {
+            try {
+                prop.getProperty();
+                fail("Conversion from a Double value to a Path value " +
+                        "should throw a ValueFormatException.");
+            } catch (ValueFormatException e) {
+                // success.
+            }
         } else {
             try {
-                prop.getNode();
+                prop.getProperty();
                 fail("Property.getNode() called on a multivalue property " +
                         "should throw a ValueFormatException.");
             } catch (ValueFormatException vfe) {
