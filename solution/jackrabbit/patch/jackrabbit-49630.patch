diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/fs/local/HandleMonitor.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/fs/local/HandleMonitor.java
index 2339407..c6a6577 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/fs/local/HandleMonitor.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/fs/local/HandleMonitor.java
@@ -26,7 +26,6 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.util.HashMap;
 import java.util.HashSet;
-import java.util.Iterator;
 
 /**
  * This Class implements a very simple open handle monitor for the local
@@ -44,7 +43,7 @@ public class HandleMonitor {
     /**
      * the map of open handles (key=File, value=Handle)
      */
-    private HashMap openHandles = new HashMap();
+    private HashMap<File, Handle> openHandles = new HashMap<File, Handle>();
 
     /**
      * Opens a file and returns an InputStream
@@ -82,7 +81,7 @@ public class HandleMonitor {
      * @return
      */
     private Handle getHandle(File file) {
-        Handle handle = (Handle) openHandles.get(file);
+        Handle handle = openHandles.get(file);
         if (handle == null) {
             handle = new Handle(file);
             openHandles.put(file, handle);
@@ -95,10 +94,8 @@ public class HandleMonitor {
      */
     public void dump() {
         log.info("Number of open files: " + openHandles.size());
-        Iterator iter = openHandles.keySet().iterator();
-        while (iter.hasNext()) {
-            File file = (File) iter.next();
-            Handle handle = (Handle) openHandles.get(file);
+        for (File file : openHandles.keySet()) {
+            Handle handle = openHandles.get(file);
             handle.dump();
         }
     }
@@ -108,7 +105,7 @@ public class HandleMonitor {
      * @param file
      */
     public void dump(File file) {
-        Handle handle = (Handle) openHandles.get(file);
+        Handle handle = openHandles.get(file);
         if (handle != null) {
             handle.dump(true);
         }
@@ -127,7 +124,7 @@ public class HandleMonitor {
         /**
          * all open streams of this handle
          */
-        private HashSet streams = new HashSet();
+        private HashSet<Handle.MonitoredInputStream> streams = new HashSet<Handle.MonitoredInputStream>();
 
         /**
          * Creates a new handle for a file
@@ -172,9 +169,7 @@ public class HandleMonitor {
         private void dump(boolean detailed) {
             if (detailed) {
                 log.info("- " + file.getPath() + ", " + streams.size());
-                Iterator iter = streams.iterator();
-                while (iter.hasNext()) {
-                    Handle.MonitoredInputStream in = (Handle.MonitoredInputStream) iter.next();
+                for (Handle.MonitoredInputStream in : streams) {
                     in.dump();
                 }
             } else {
