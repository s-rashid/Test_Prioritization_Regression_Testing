diff --git a/contrib/spi/client/src/test/java/org/apache/jackrabbit/jcr2spi/version/LabelTest.java b/contrib/spi/client/src/test/java/org/apache/jackrabbit/jcr2spi/version/LabelTest.java
deleted file mode 100644
index e1dd00a..0000000
--- a/contrib/spi/client/src/test/java/org/apache/jackrabbit/jcr2spi/version/LabelTest.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.jackrabbit.jcr2spi.version;
-
-import org.apache.jackrabbit.test.api.version.VersionLabelTest;
-
-import java.util.Arrays;
-import java.util.List;
-import javax.jcr.RepositoryException;
-import javax.jcr.version.Version;
-
-public class LabelTest extends VersionLabelTest {
-
-    public void testRemovedLabel2() throws RepositoryException {
-        vHistory.addVersionLabel(rootVersion.getName(), versionLabel, false);
-        vHistory.removeVersionLabel(versionLabel);
-
-        List labels = Arrays.asList(vHistory.getVersionLabels());
-        assertFalse("VersionHistory.getVersionLabels() must not return a removed label.",labels.contains(versionLabel));
-    }
-
-    public void testRemovedLabel3() throws RepositoryException {
-        vHistory.addVersionLabel(rootVersion.getName(), versionLabel, false);
-        vHistory.removeVersionLabel(versionLabel);
-
-        List labels = Arrays.asList(vHistory.getVersionLabels(rootVersion));
-        assertFalse("VersionHistory.getVersionLabels(Version) must not return a removed label.",labels.contains(versionLabel));
-    }
-
-    public void testMoveLabel2() throws RepositoryException {
-        vHistory.addVersionLabel(rootVersion.getName(), versionLabel, false);
-
-        versionableNode.checkout();
-        Version v = versionableNode.checkin();
-        vHistory.addVersionLabel(v.getName(), versionLabel, true);
-
-        List labels = Arrays.asList(vHistory.getVersionLabels(v));
-        assertTrue(labels.contains(versionLabel));
-    }
-
-    public void testMoveLabel3() throws RepositoryException {
-        versionableNode.checkout();
-        Version v = versionableNode.checkin();
-
-        vHistory.addVersionLabel(rootVersion.getName(), versionLabel, false);
-        vHistory.addVersionLabel(v.getName(), versionLabel, true);
-
-        List labels = Arrays.asList(vHistory.getVersionLabels(rootVersion));
-        assertFalse(labels.contains(versionLabel));
-    }
-
-    public void testMoveLabel4() throws RepositoryException {
-        versionableNode.checkout();
-        Version v = versionableNode.checkin();
-
-        vHistory.addVersionLabel(rootVersion.getName(), versionLabel, false);
-        vHistory.addVersionLabel(v.getName(), versionLabel, true);
-
-        Version v2 = vHistory.getVersionByLabel(versionLabel);
-        assertTrue(v2.isSame(v));
-    }
-}
