diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/cluster/ClusterSession.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/cluster/ClusterSession.java
index 648294a..b371d8d 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/cluster/ClusterSession.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/cluster/ClusterSession.java
@@ -16,18 +16,24 @@
  */
 package org.apache.jackrabbit.core.cluster;
 
-import org.xml.sax.ContentHandler;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.util.Map;
 
-import javax.jcr.Session;
-import javax.jcr.Repository;
-import javax.jcr.Workspace;
 import javax.jcr.Credentials;
-import javax.jcr.Node;
 import javax.jcr.Item;
-import javax.jcr.ValueFactory;
+import javax.jcr.Node;
+import javax.jcr.Property;
+import javax.jcr.Repository;
+import javax.jcr.RepositoryException;
+import javax.jcr.Session;
 import javax.jcr.UnsupportedRepositoryOperationException;
-import java.io.InputStream;
-import java.io.OutputStream;
+import javax.jcr.ValueFactory;
+import javax.jcr.Workspace;
+import javax.jcr.retention.RetentionManager;
+import javax.jcr.security.AccessControlManager;
+
+import org.xml.sax.ContentHandler;
 
 /**
  * Represents the session that has made some changes on another node in the
@@ -289,4 +295,50 @@ class ClusterSession implements Session {
     public int hashCode() {
         return userId.hashCode();
     }
+
+    public AccessControlManager getAccessControlManager()
+            throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public Node getNode(String path) throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public Node getNodeByIdentifier(String identifier)
+            throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public Property getProperty(String arg0) throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public RetentionManager getRetentionManager()
+            throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public boolean hasCapability(String arg0, Object arg1, Map arg2)
+            throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public boolean hasPermission(String arg0, String arg1)
+            throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public boolean nodeExists(String path) throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public boolean propertyExists(String path) throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    public void removeItem(String path) throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
 }
