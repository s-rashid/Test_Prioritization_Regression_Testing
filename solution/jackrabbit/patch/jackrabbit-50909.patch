diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/AbstractQueryHandler.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/AbstractQueryHandler.java
index a9bdab2..cd9f676 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/AbstractQueryHandler.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/AbstractQueryHandler.java
@@ -16,13 +16,14 @@
  */
 package org.apache.jackrabbit.core.query;
 
-import org.apache.jackrabbit.core.NodeIdIterator;
+import org.apache.jackrabbit.core.id.NodeId;
 import org.apache.jackrabbit.core.state.NodeStateIterator;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import javax.jcr.RepositoryException;
 import java.io.IOException;
+import java.util.Iterator;
 
 /**
  * Implements default behaviour for some methods of {@link QueryHandler}.
@@ -95,10 +96,10 @@ public abstract class AbstractQueryHandler implements QueryHandler {
      * @throws RepositoryException if an error occurs while indexing a node.
      * @throws IOException if an error occurs while updating the index.
      */
-    public synchronized void updateNodes(NodeIdIterator remove, NodeStateIterator add)
+    public synchronized void updateNodes(Iterator<NodeId> remove, NodeStateIterator add)
             throws RepositoryException, IOException {
         while (remove.hasNext()) {
-            deleteNode(remove.nextNodeId());
+            deleteNode(remove.next());
         }
         while (add.hasNext()) {
             addNode(add.nextNodeState());
