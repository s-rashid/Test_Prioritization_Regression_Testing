diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/simple/SimpleLoginModule.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/simple/SimpleLoginModule.java
index 06c6d41..0db9ed5 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/simple/SimpleLoginModule.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/simple/SimpleLoginModule.java
@@ -18,6 +18,7 @@ package org.apache.jackrabbit.core.security.simple;
 
 import org.apache.jackrabbit.core.security.authentication.AbstractLoginModule;
 import org.apache.jackrabbit.core.security.authentication.Authentication;
+import org.apache.jackrabbit.core.security.principal.PrincipalProvider;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -64,4 +65,27 @@ public class SimpleLoginModule extends AbstractLoginModule {
             }
         };
     }
+
+    /**
+     * Uses the configured {@link PrincipalProvider} to retrieve the principal.
+     * It takes the {@link PrincipalProvider#getPrincipal(String)} for the User-ID
+     * resolved by  {@link #getUserID(Credentials)}, assuming that
+     * User-ID and the corresponding principal name are always identical.
+     *
+     * @param credentials
+     * @return principal or <code>null</code> if the principal provider does
+     * not contain a user-principal with the given userID/principal name.
+     *
+     * @see AbstractLoginModule#getPrincipal(Credentials) 
+     */
+    protected Principal getPrincipal(Credentials credentials) {
+        String userId = getUserID(credentials);
+        Principal principal = principalProvider.getPrincipal(userId);
+        if (principal == null || principal instanceof Group) {
+            // no matching user principal
+            return null;
+        } else {
+            return principal;
+        }
+    }
 }
\ No newline at end of file
