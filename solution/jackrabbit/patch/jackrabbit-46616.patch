diff --git a/jackrabbit-text-extractors/src/main/java/org/apache/jackrabbit/extractor/DefaultTextExtractor.java b/jackrabbit-text-extractors/src/main/java/org/apache/jackrabbit/extractor/DefaultTextExtractor.java
index 5d257d9..2f0d753 100644
--- a/jackrabbit-text-extractors/src/main/java/org/apache/jackrabbit/extractor/DefaultTextExtractor.java
+++ b/jackrabbit-text-extractors/src/main/java/org/apache/jackrabbit/extractor/DefaultTextExtractor.java
@@ -21,6 +21,7 @@ import java.io.InputStream;
 import java.io.Reader;
 import java.util.Set;
 
+import org.apache.tika.config.TikaConfig;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.parser.AutoDetectParser;
 import org.apache.tika.parser.Parser;
@@ -42,8 +43,32 @@ public class DefaultTextExtractor implements TextExtractor {
     private static final String[] TYPES;
 
     static {
-        AutoDetectParser parser = new AutoDetectParser();
+        // The default Tika configuration refers to Apache POI libraries that
+        // are compiled for Java 5, and can thus not be loaded in Java 1.4.
+        // This makes it impossible to load the default Tika configuration
+        // (see TIKA-217 for background), and so we need to use the following
+        // workaround to instantiate the Tika AutoDetectParser without the
+        // POI classes (and thus support for MS Office formats) when running
+        // on Java 1.4.
+        AutoDetectParser parser;
+        if ("1.4".equals(System.getProperty("java.specification.version"))) {
+            InputStream stream =
+                DefaultTextExtractor.class.getResourceAsStream("tika-config-jdk14.xml");
+            try {
+                try {
+                    parser = new AutoDetectParser(new TikaConfig(stream));
+                } finally {
+                    stream.close();
+                }
+            } catch (Exception e) {
+                throw new RuntimeException(
+                        "Unable to load Tika configuration", e);
+            }
+        } else {
+            parser = new AutoDetectParser();
+        }
         PARSER = parser;
+
         Set types = parser.getParsers().keySet();
         TYPES = (String[]) types.toArray(new String[types.size()]);
     }
