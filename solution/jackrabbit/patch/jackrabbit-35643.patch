diff --git a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/query/SQLJoinTest.java b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/query/SQLJoinTest.java
index 2abdad9..7a1ec59 100644
--- a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/query/SQLJoinTest.java
+++ b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/query/SQLJoinTest.java
@@ -43,14 +43,24 @@ public class SQLJoinTest extends AbstractQueryTest {
      */
     public void testJoin() throws RepositoryException {
         Node n1 = testRootNode.addNode(nodeName1, testNodeType);
-        if (needsMixin(n1, mixReferenceable)) {
-            n1.addMixin(mixReferenceable);
+        String testMixin = mixReferenceable;
+        if (needsMixin(n1, testMixin)) {
+            n1.addMixin(testMixin);
         }
-        testRootNode.addNode(nodeName2, testNodeType);
+        else {
+            testMixin = mixVersionable;
+            if (needsMixin(n1, testMixin)) {
+                n1.addMixin(testMixin);
+            }
+        }
+
+        Node n2 = testRootNode.addNode(nodeName2, testNodeType);
         testRootNode.save();
 
+        assertFalse("Node at " + n2.getPath() + " should not have mixin " + testMixin, n2.isNodeType(testMixin));
+
         StringBuffer query = new StringBuffer("SELECT * FROM ");
-        query.append(testNodeType).append(", ").append(mixReferenceable);
+        query.append(testNodeType).append(", ").append(testMixin);
         query.append(" WHERE ");
         query.append(testNodeType).append(".").append(jcrPath);
         query.append(" = ");
@@ -66,14 +76,24 @@ public class SQLJoinTest extends AbstractQueryTest {
      */
     public void testJoinNtBase() throws RepositoryException {
         Node n1 = testRootNode.addNode(nodeName1, testNodeType);
-        if (needsMixin(n1, mixReferenceable)) {
-            n1.addMixin(mixReferenceable);
+        String testMixin = mixReferenceable;
+        if (needsMixin(n1, testMixin)) {
+            n1.addMixin(testMixin);
+        }
+        else {
+            testMixin = mixVersionable;
+            if (needsMixin(n1, testMixin)) {
+                n1.addMixin(testMixin);
+            }
         }
-        testRootNode.addNode(nodeName2, testNodeType);
+
+        Node n2 = testRootNode.addNode(nodeName2, testNodeType);
         testRootNode.save();
 
+        assertFalse("Node at " + n2.getPath() + " should not have mixin " + testMixin, n2.isNodeType(testMixin));
+
         StringBuffer query = new StringBuffer("SELECT * FROM ");
-        query.append(ntBase).append(", ").append(mixReferenceable);
+        query.append(ntBase).append(", ").append(testMixin);
         query.append(" WHERE ");
         query.append(testNodeType).append(".").append(jcrPath);
         query.append(" = ");
