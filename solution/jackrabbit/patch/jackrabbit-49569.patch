diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/JackrabbitSecurityManager.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/JackrabbitSecurityManager.java
index d90a815..d222b34 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/JackrabbitSecurityManager.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/JackrabbitSecurityManager.java
@@ -24,7 +24,6 @@ import javax.jcr.Credentials;
 import javax.jcr.Repository;
 import javax.jcr.RepositoryException;
 import javax.jcr.Session;
-import javax.jcr.UnsupportedRepositoryOperationException;
 import javax.security.auth.Subject;
 
 /**
@@ -32,7 +31,7 @@ import javax.security.auth.Subject;
  */
 public interface JackrabbitSecurityManager {
 
-    public void init(Repository repository, Session systemSession) throws RepositoryException;
+    void init(Repository repository, Session systemSession) throws RepositoryException;
 
     /**
      * Disposes those parts of this security manager that are related to the
@@ -40,12 +39,12 @@ public interface JackrabbitSecurityManager {
      *
      * @param workspaceName Name of the workspace that is being disposed.
      */
-    public void dispose(String workspaceName);
+    void dispose(String workspaceName);
 
     /**
      * Disposes this security manager instance and cleans all internal caches.
      */
-    public void close();
+    void close();
 
     /**
      * Returns a new <code>AuthContext</code> for the specified credentials and
@@ -57,7 +56,7 @@ public interface JackrabbitSecurityManager {
      * and <code>subject</code>.
      * @throws RepositoryException
      */
-    public AuthContext getAuthContext(Credentials creds, Subject subject) throws RepositoryException;
+    AuthContext getAuthContext(Credentials creds, Subject subject) throws RepositoryException;
 
     /**
      * Retrieve the <code>AccessManager</code> for the given <code>session</code>.
@@ -67,7 +66,7 @@ public interface JackrabbitSecurityManager {
      * @return <code>AccessManager</code> for the specified <code>session</code>.
      * @throws RepositoryException
      */
-    public AccessManager getAccessManager(Session session, AMContext amContext) throws RepositoryException;
+    AccessManager getAccessManager(Session session, AMContext amContext) throws RepositoryException;
 
     /**
      * Retrieve the principal manager for the given <code>session</code>.
@@ -78,7 +77,7 @@ public interface JackrabbitSecurityManager {
      * is not supported.
      * @throws RepositoryException if an error occurs
      */
-    public PrincipalManager getPrincipalManager(Session session) throws RepositoryException;
+    PrincipalManager getPrincipalManager(Session session) throws RepositoryException;
 
     /**
      * Returns the user manager for the specified <code>session</code>.
@@ -89,7 +88,7 @@ public interface JackrabbitSecurityManager {
      * not supported.
      * @throws RepositoryException
      */
-    public UserManager getUserManager(Session session) throws RepositoryException;
+    UserManager getUserManager(Session session) throws RepositoryException;
 
     /**
      * Retrieve the id to be displayed upon {@link Session#getUserID()} for
@@ -99,5 +98,5 @@ public interface JackrabbitSecurityManager {
      * @return userID to be displayed upon {@link Session#getUserID()}.
      * @throws RepositoryException
      */
-    public String getUserID(Subject subject) throws RepositoryException;
+    String getUserID(Subject subject) throws RepositoryException;
 }
