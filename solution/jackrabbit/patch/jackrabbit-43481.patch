diff --git a/jackrabbit-spi2jcr/src/main/java/org/apache/jackrabbit/spi2jcr/RepositoryServiceImpl.java b/jackrabbit-spi2jcr/src/main/java/org/apache/jackrabbit/spi2jcr/RepositoryServiceImpl.java
index ec32eac..622003e 100644
--- a/jackrabbit-spi2jcr/src/main/java/org/apache/jackrabbit/spi2jcr/RepositoryServiceImpl.java
+++ b/jackrabbit-spi2jcr/src/main/java/org/apache/jackrabbit/spi2jcr/RepositoryServiceImpl.java
@@ -272,17 +272,6 @@ public class RepositoryServiceImpl implements RepositoryService {
     /**
      * {@inheritDoc}
      */
-    public NodeId getRootId(SessionInfo sessionInfo)
-            throws RepositoryException {
-
-        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
-        return idFactory.createNodeId(sInfo.getSession().getRootNode(),
-                sInfo.getNamePathResolver());
-    }
-
-    /**
-     * {@inheritDoc}
-     */
     public QNodeDefinition getNodeDefinition(SessionInfo sessionInfo,
                                              NodeId nodeId)
             throws RepositoryException {
@@ -315,26 +304,6 @@ public class RepositoryServiceImpl implements RepositoryService {
     /**
      * {@inheritDoc}
      */
-    public boolean exists(SessionInfo sessionInfo, ItemId itemId)
-            throws RepositoryException {
-        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
-        try {
-            if (itemId.denotesNode()) {
-                getNode((NodeId) itemId, sInfo);
-            } else {
-                getProperty((PropertyId) itemId, sInfo);
-            }
-        } catch (ItemNotFoundException e) {
-            return false;
-        } catch (PathNotFoundException e) {
-            return false;
-        }
-        return true;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
     public NodeInfo getNodeInfo(SessionInfo sessionInfo, NodeId nodeId)
             throws ItemNotFoundException, RepositoryException {
         SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
@@ -684,7 +653,7 @@ public class RepositoryServiceImpl implements RepositoryService {
         executeWithLocalEvents(new Callable() {
             public Object run() throws RepositoryException {
                 Version v = (Version) getNode(versionId, sInfo);
-                if (exists(sessionInfo, nodeId)) {
+                if (hasNode(sessionInfo, nodeId)) {
                     Node n = getNode(nodeId, sInfo);
                     n.restore(v, removeExisting);
                 } else {
@@ -700,7 +669,7 @@ public class RepositoryServiceImpl implements RepositoryService {
                         while (degree < path.getLength()) {
                             Path ancestorPath = path.getAncestor(degree);
                             NodeId parentId = idFactory.createNodeId(nodeId.getUniqueID(), ancestorPath);
-                            if (exists(sessionInfo, parentId)) {
+                            if (hasNode(sessionInfo, parentId)) {
                                 n = getNode(parentId, sInfo);
                                 relPath = ancestorPath.computeRelativePath(path);
                             }
@@ -718,6 +687,18 @@ public class RepositoryServiceImpl implements RepositoryService {
         }, sInfo);
     }
 
+    private boolean hasNode(SessionInfo sessionInfo, NodeId nodeId) throws RepositoryException {
+        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
+        try {
+            getNode(nodeId, sInfo);
+        } catch (ItemNotFoundException e) {
+            return false;
+        } catch (PathNotFoundException e) {
+            return false;
+        }
+        return true;
+    }
+
     /**
      * {@inheritDoc}
      */
