diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/fs/db/OracleFileSystem.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/fs/db/OracleFileSystem.java
index 4c1c22e..7ec662d 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/fs/db/OracleFileSystem.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/fs/db/OracleFileSystem.java
@@ -81,7 +81,7 @@ public class OracleFileSystem extends DbFileSystem {
      */
     private static Logger log = LoggerFactory.getLogger(OracleFileSystem.class);
 
-    private Class blobClass;
+    private Class< ? > blobClass;
     private Integer durationSessionConstant;
     private Integer modeReadWriteConstant;
 
@@ -574,7 +574,7 @@ public class OracleFileSystem extends DbFileSystem {
         open.invoke(blob, new Object[]{modeReadWriteConstant});
         Method getBinaryOutputStream =
                 blobClass.getMethod("getBinaryOutputStream", new Class[0]);
-        OutputStream out = (OutputStream) getBinaryOutputStream.invoke(blob, null);
+        OutputStream out = (OutputStream) getBinaryOutputStream.invoke(blob);
         try {
             IOUtils.copy(in, out);
         } finally {
@@ -585,7 +585,7 @@ public class OracleFileSystem extends DbFileSystem {
             out.close();
         }
         Method close = blobClass.getMethod("close", new Class[0]);
-        close.invoke(blob, null);
+        close.invoke(blob);
         return (Blob) blob;
     }
 
@@ -595,6 +595,6 @@ public class OracleFileSystem extends DbFileSystem {
     protected void freeTemporaryBlob(Object blob) throws Exception {
         // blob.freeTemporary();
         Method freeTemporary = blobClass.getMethod("freeTemporary", new Class[0]);
-        freeTemporary.invoke(blob, null);
+        freeTemporary.invoke(blob);
     }
 }
