diff --git a/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/xml/SessionImporter.java b/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/xml/SessionImporter.java
index 82cd1a4..c71462b 100644
--- a/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/xml/SessionImporter.java
+++ b/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/xml/SessionImporter.java
@@ -453,19 +453,14 @@ public class SessionImporter implements Importer, SessionListener {
             Operation an = AddNode.create(parent, nodeInfo.getName(), ntName, nodeInfo.getUUID());
             stateMgr.execute(an);
             // retrieve id of state that has been created during execution of AddNode
-            NodeState childState;
-            List cne = parent.getNodeEntry().getNodeEntries(nodeInfo.getName());
-            if (def.allowsSameNameSiblings()) {
-                // TODO TOBEFIXED find proper solution. problem with same-name-siblings
-                childState = ((NodeEntry)cne.get(cne.size()-1)).getNodeState();
-            } else {
-                childState = ((NodeEntry)cne.get(0)).getNodeState();
-            }
+            NodeState childState = (NodeState) ((AddNode) an).getAddedStates().get(0);
 
             // and set mixin types
-            // TODO: missing validation
-            Operation sm = SetMixin.create(childState, nodeInfo.getMixinNames());
-            stateMgr.execute(sm);
+            Name[] mixinNames = nodeInfo.getMixinNames();
+            if (mixinNames != null && mixinNames.length > 0) {
+                Operation sm = SetMixin.create(childState, nodeInfo.getMixinNames());
+                stateMgr.execute(sm);
+            }
             return childState;
         }
     }
