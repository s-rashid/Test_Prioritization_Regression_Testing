diff --git a/jackrabbit-spi/src/main/java/org/apache/jackrabbit/spi/SessionInfo.java b/jackrabbit-spi/src/main/java/org/apache/jackrabbit/spi/SessionInfo.java
index d72b856..f14fe36 100644
--- a/jackrabbit-spi/src/main/java/org/apache/jackrabbit/spi/SessionInfo.java
+++ b/jackrabbit-spi/src/main/java/org/apache/jackrabbit/spi/SessionInfo.java
@@ -16,6 +16,10 @@
  */
 package org.apache.jackrabbit.spi;
 
+import javax.jcr.UnsupportedRepositoryOperationException;
+import javax.jcr.RepositoryException;
+import javax.jcr.lock.LockException;
+
 /**
  * <code>SessionInfo</code> is created upon
  * {@link RepositoryService#obtain(javax.jcr.Credentials, String)} or
@@ -51,8 +55,10 @@ public interface SessionInfo {
      * Returns the lock tokens present on this <code>SessionInfo</code>.
      *
      * @return lock tokens present on this <code>SessionInfo</code>.
+     * @throws UnsupportedRepositoryOperationException If locking is not supported.
+     * @throws RepositoryException If another error occurs.
      */
-    public String[] getLockTokens();
+    public String[] getLockTokens() throws UnsupportedRepositoryOperationException, RepositoryException;
 
     /**
      * Add the given lock token to this <code>SessionInfo</code>. The token will
@@ -60,8 +66,12 @@ public interface SessionInfo {
      * lock identified by the given token.
      *
      * @param lockToken to be added.
+     * @param lockToken
+     * @throws UnsupportedRepositoryOperationException If locking is not supported.
+     * @throws LockException If the token cannot be added.
+     * @throws RepositoryException If another error occurs.
      */
-    public void addLockToken(String lockToken);
+    public void addLockToken(String lockToken) throws UnsupportedRepositoryOperationException, LockException, RepositoryException;
 
     /**
      * Removes the given lock token from this <code>SessionInfo</code>.
@@ -72,6 +82,9 @@ public interface SessionInfo {
      * with LockException provided the lock hasn't been released.
      *
      * @param lockToken to be removed.
+     * @throws UnsupportedRepositoryOperationException If locking is not supported.
+     * @throws LockException If the token cannot be removed.
+     * @throws RepositoryException If another error occurs.
      */
-    public void removeLockToken(String lockToken);
+    public void removeLockToken(String lockToken) throws UnsupportedRepositoryOperationException, LockException, RepositoryException;
 }
