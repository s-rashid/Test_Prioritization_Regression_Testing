diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/value/ValueFactoryImpl.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/value/ValueFactoryImpl.java
index 787a4d8..61cc73a 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/value/ValueFactoryImpl.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/value/ValueFactoryImpl.java
@@ -16,7 +16,6 @@
  */
 package org.apache.jackrabbit.core.value;
 
-import org.apache.jackrabbit.core.SessionImpl;
 import org.apache.jackrabbit.core.data.DataIdentifier;
 import org.apache.jackrabbit.core.data.DataStore;
 import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
@@ -57,23 +56,6 @@ public class ValueFactoryImpl extends ValueFactoryQImpl {
         this.store = store;
     }
 
-    /**
-     * Constructs a new <code>ValueFactoryQImpl</code>. If possible,
-     * an existing value factory is reused.
-     * @deprecated
-     * If possible this method should not be used, instead the value factory
-     * should be retrieved from the session.
-     *
-     * @param resolver <code>NamePathResolver</code>
-     */
-    public static ValueFactoryQImpl getInstance(NamePathResolver resolver) {
-        if (resolver instanceof SessionImpl) {
-            return (ValueFactoryImpl) ((SessionImpl) resolver).getValueFactory();
-        } else {
-            return new ValueFactoryImpl(resolver, null);
-        }
-    }
-
     public Value createValue(QValue qvalue) {
         if (qvalue instanceof InternalValue && PropertyType.BINARY == qvalue.getType()) {
             try {
