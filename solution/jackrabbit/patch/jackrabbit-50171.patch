diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/lock/XALockManager.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/lock/XALockManager.java
index 18fcb64..1091bbf 100755
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/lock/XALockManager.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/lock/XALockManager.java
@@ -80,7 +80,7 @@ public class XALockManager implements LockManager, InternalXAResource {
             info = lockMgr.internalLock(node, isDeep, isSessionScoped, timoutHint, ownerInfo);
         }
         lockMgr.writeLockProperties(node, info.lockOwner, info.deep);
-        return new XALock(this, info, node);
+        return new XALockImpl(this, info, node);
     }
 
     /**
@@ -98,7 +98,7 @@ public class XALockManager implements LockManager, InternalXAResource {
         }
         SessionImpl session = (SessionImpl) node.getSession();
         NodeImpl holder = (NodeImpl) session.getItemManager().getItem(info.getId());
-        return new XALock(this, info, holder);
+        return new XALockImpl(this, info, holder);
     }
 
     /**
@@ -112,12 +112,12 @@ public class XALockManager implements LockManager, InternalXAResource {
             infos = lockMgr.getLockInfos(session);
         }
 
-        XALock[] locks = new XALock[infos.length];
+        XALockImpl[] locks = new XALockImpl[infos.length];
 
         for (int i = 0; i < infos.length; i++) {
             AbstractLockInfo info = infos[i];
             NodeImpl holder = (NodeImpl) session.getItemManager().getItem(info.getId());
-            locks[i] = new XALock(this, info, holder);
+            locks[i] = new XALockImpl(this, info, holder);
         }
         return locks;
     }
@@ -150,75 +150,83 @@ public class XALockManager implements LockManager, InternalXAResource {
     /**
      * {@inheritDoc}
      */
-    public boolean isLockHolder(Session session, NodeImpl node)
-            throws RepositoryException {
+    public boolean isLocked(NodeImpl node) throws RepositoryException {
         AbstractLockInfo info;
         if (isInXA()) {
             info = xaEnv.getLockInfo(node);
         } else {
             info = lockMgr.getLockInfo(node.getNodeId());
         }
-        return info != null && info.getId().equals(node.getId())
-                && info.getLockHolder() == session;
+        return info != null;
     }
 
     /**
      * {@inheritDoc}
      */
-    public boolean isLocked(NodeImpl node) throws RepositoryException {
+    public void checkLock(NodeImpl node) throws LockException, RepositoryException {
         AbstractLockInfo info;
         if (isInXA()) {
             info = xaEnv.getLockInfo(node);
+            if (info != null && !info.isLockHolder(node.getSession())) {
+                throw new LockException("Node locked.");
+            }
         } else {
-            info = lockMgr.getLockInfo(node.getNodeId());
+        	lockMgr.checkLock(node);
         }
-        return info != null;
     }
 
     /**
      * {@inheritDoc}
      */
-    public void checkLock(NodeImpl node) throws LockException, RepositoryException {
-        AbstractLockInfo info;
+    public void checkLock(Path path, Session session)
+            throws LockException, RepositoryException {
+
         if (isInXA()) {
-            info = xaEnv.getLockInfo(node);
+	        SessionImpl sessionImpl = (SessionImpl) session;
+	        checkLock(sessionImpl.getItemManager().getNode(path));
         } else {
-            info = lockMgr.getLockInfo(node.getNodeId());
-        }
-        if (info != null && info.getLockHolder() != node.getSession()) {
-            throw new LockException("Node locked.");
+        	lockMgr.checkLock(path, session);
         }
     }
-
+    
     /**
      * {@inheritDoc}
      */
-    public void checkLock(Path path, Session session)
-            throws LockException, RepositoryException {
+    public void checkUnlock(Session session, NodeImpl node)
+    		throws LockException, RepositoryException {
 
-        SessionImpl sessionImpl = (SessionImpl) session;
-        checkLock(sessionImpl.getItemManager().getNode(path));
+        if (isInXA()) {
+            AbstractLockInfo info = xaEnv.getLockInfo(node);
+            if (info == null || !info.getId().equals(node.getId())) {
+    	        throw new LockException("Node not locked: " + node);
+            }
+    	    if (!info.isLockHolder(session)) {
+    	        throw new LockException("Node not locked by session: " + node);
+    	    }
+        } else {
+        	lockMgr.checkUnlock(session, node);
+        }
     }
 
     /**
      * {@inheritDoc}
      */
-    public void lockTokenAdded(SessionImpl session, String lt) throws RepositoryException {
+    public void addLockToken(SessionImpl session, String lt) throws RepositoryException {
         if (isInXA()) {
             xaEnv.addLockToken(session, lt);
         } else {
-            lockMgr.lockTokenAdded(session, lt);
+            lockMgr.addLockToken(session, lt);
         }
     }
 
     /**
      * {@inheritDoc}
      */
-    public void lockTokenRemoved(SessionImpl session, String lt) throws RepositoryException {
+    public void removeLockToken(SessionImpl session, String lt) throws RepositoryException {
         if (isInXA()) {
             xaEnv.removeLockToken(session, lt);
         } else {
-            lockMgr.lockTokenRemoved(session, lt);
+            lockMgr.removeLockToken(session, lt);
         }
     }
 
@@ -293,7 +301,7 @@ public class XALockManager implements LockManager, InternalXAResource {
         if (isInXA()) {
             return xaEnv.differentXAEnv(info);
         } else {
-            return info instanceof XAEnvironment.LockInfo;
+            return info instanceof XAEnvironment.XALockInfo;
         }
     }
