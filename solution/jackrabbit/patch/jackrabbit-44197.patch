diff --git a/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java b/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java
index e2b03b3..1d0f583 100644
--- a/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java
+++ b/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java
@@ -64,39 +64,39 @@ public class AnnotationBasicVersionningTest extends AnnotationTestBase
 		     ObjectContentManager ocm = getObjectContentManager();
              try
              {
-            	 
+            	
             	 Page page = new Page();
             	 page.setPath("/page");
-            	 page.setTitle("Page Title");            	 
+            	 page.setTitle("Page Title");            	
             	 page.addParagraph(new Paragraph("para1"));
             	 page.addParagraph(new Paragraph("para2"));
             	 ocm.insert(page);
             	 ocm.save();
-            	 
-                 
+            	
+
             	 page.addParagraph(new Paragraph("para3"));
             	 ocm.checkout("/page");
             	 ocm.update(page);
             	 ocm.save();
             	 ocm.checkin("/page");
-            	 
+            	
             	 page.addParagraph(new Paragraph("para4"));
             	 ocm.checkout("/page");
             	 ocm.update(page);
             	 ocm.save();
-            	 ocm.checkin("/page");            	 
+            	 ocm.checkin("/page");            	
 
             	 VersionIterator versionIterator = ocm.getAllVersions("/page");
             	 assertNotNull("VersionIterator is null", versionIterator);
             	 assertTrue("Invalid number of versions found", versionIterator.getSize() == 3);
-            	 
+            	
             	 while (versionIterator.hasNext())
             	 {
             		 Version version = (Version) versionIterator.next();
             		 log.info("version found : "+ version.getName() + " - " + version.getPath() + " - " +  version.getCreated().getTime());
-            		 
+            		
             	 }
-            	 
+            	
             	 Version baseVersion = ocm.getBaseVersion("/page");
             	 System.out.println("Base version : " + baseVersion.getName());
 
@@ -104,13 +104,13 @@ public class AnnotationBasicVersionningTest extends AnnotationTestBase
             	 System.out.println("Root version : " + rootVersion.getName());
             	 //this.exportDocument("/home/christophe/export.xml", "/jcr:system/jcr:versionStorage", true, false);
             	             	
-                 //Get the latest version 
+                 //Get the latest version
             	 page = (Page) ocm.getObject( "/page");
             	 assertNotNull("Last version is nulll", page);
             	 assertTrue("Invalid number of paragraph found in the last  version", page.getParagraphs().size() == 4);
 
-            	 
-            	 //Get the object matching to the first version 
+            	
+            	 //Get the object matching to the first version
                  Page  page1 = (Page) ocm.getObject( "/page", "1.0");
             	 assertNotNull("version 1.0 object is null", page1);
             	 assertTrue("Invalid number of paragraph found in the root version", page1.getParagraphs().size() == 3);
@@ -120,7 +120,7 @@ public class AnnotationBasicVersionningTest extends AnnotationTestBase
              {
             	 e.printStackTrace();
             	 fail(e.getMessage());
-            	 
+            	
              }
 	}
 
@@ -130,27 +130,27 @@ public class AnnotationBasicVersionningTest extends AnnotationTestBase
 		     ObjectContentManager ocm = getObjectContentManager();
              try
              {
-            	 
+            	
             	 Page page = new Page();
             	 page.setPath("/page");
-            	 page.setTitle("Page Title");            	 
+            	 page.setTitle("Page Title");            	
             	 page.addParagraph(new Paragraph("para1"));
             	 page.addParagraph(new Paragraph("para2"));
             	 ocm.insert(page);
             	 ocm.save();
-            	 
-                 
+            	
+
             	 page.addParagraph(new Paragraph("para3"));
             	 ocm.checkout("/page");
             	 ocm.update(page);
             	 ocm.save();
             	 ocm.checkin("/page", new String[] {"A", "B"});
-            	 
+            	
             	 page.addParagraph(new Paragraph("para4"));
             	 ocm.checkout("/page");
             	 ocm.update(page);
             	 ocm.save();
-            	 ocm.checkin("/page", new String[] {"C", "D"});         	 
+            	 ocm.checkin("/page", new String[] {"C", "D"});         	
 
             	 String[] allLabels = ocm.getAllVersionLabels("/page");
             	 assertTrue("Incorrect number of labels", allLabels.length == 4);
@@ -165,7 +165,7 @@ public class AnnotationBasicVersionningTest extends AnnotationTestBase
              catch(Exception e)
              {
             	 e.printStackTrace();
-            	 fail(); 
+            	 fail();
              }
 	}
