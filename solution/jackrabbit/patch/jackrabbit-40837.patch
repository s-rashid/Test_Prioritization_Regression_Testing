diff --git a/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java b/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java
index b51dd64..a783b46 100644
--- a/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java
+++ b/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java
@@ -158,9 +158,9 @@ public class AnnotationSimpleQueryTest extends AnnotationTestBase
     	      assertEquals("Invalid number of objects - should be = 3", 3, result.size());
 
     	      Paragraph[] paragraphs = (Paragraph[]) result.toArray(new Paragraph[result.size()]);
-    	      assertTrue("Invalid paragraph found", paragraphs[0].getText().equals("Para 1"));
-    	      assertTrue("Invalid paragraph found", paragraphs[1].getText().equals("Para 2"));
-    	      assertTrue("Invalid paragraph found", paragraphs[2].getText().equals("Para 3"));
+    	      assertTrue("Invalid paragraph found", this.containsText(paragraphs,"Para 1"));
+    	      assertTrue("Invalid paragraph found", this.containsText(paragraphs,"Para 2"));
+    	      assertTrue("Invalid paragraph found", this.containsText(paragraphs,"Para 3"));
     	
 
         }
@@ -201,8 +201,8 @@ public class AnnotationSimpleQueryTest extends AnnotationTestBase
     	      assertEquals("Invalid number of objects - should be = 2", 2, result.size());
     	
     	      Paragraph[] paragraphs = (Paragraph[]) result.toArray(new Paragraph[result.size()]);
-    	      assertTrue("Invalid paragraph found", paragraphs[0].getText().equals("Para 1"));
-    	      assertTrue("Invalid paragraph found", paragraphs[1].getText().equals("Para 2"));
+    	      assertTrue("Invalid paragraph found", this.containsText(paragraphs,"Para 1"));
+    	      assertTrue("Invalid paragraph found", this.containsText(paragraphs,"Para 2"));
 
         }
         catch (Exception e)
@@ -233,9 +233,9 @@ public class AnnotationSimpleQueryTest extends AnnotationTestBase
     	      assertEquals("Invalid number of objects - should be = 3", 3, result.size());
 
     	      Paragraph[] paragraphs = (Paragraph[]) result.toArray(new Paragraph[result.size()]);
-    	      assertTrue("Invalid paragraph found", paragraphs[0].getText().equals("Para 3"));
-    	      assertTrue("Invalid paragraph found", paragraphs[1].getText().equals("Para 2"));
-    	      assertTrue("Invalid paragraph found", paragraphs[2].getText().equals("Para 1"));
+    	      assertTrue("Invalid paragraph found", this.containsText(paragraphs,"Para 1"));
+    	      assertTrue("Invalid paragraph found", this.containsText(paragraphs,"Para 2"));
+    	      assertTrue("Invalid paragraph found", this.containsText(paragraphs,"Para 3"));
     	
 
         }
@@ -268,4 +268,18 @@ public class AnnotationSimpleQueryTest extends AnnotationTestBase
 
 
     }
+    
+    private boolean containsText(Paragraph[] paragraphs, String text)
+    {
+    	
+    	for (int i = 0; i < paragraphs.length; i++) 
+    	{
+    		if (paragraphs[i].getText().equals(text))
+			{
+				return true;
+			}	
+		}
+    	return false; 
+    	
+    }       
 }
\ No newline at end of file
