diff --git a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/query/GetLanguageTest.java b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/query/GetLanguageTest.java
index 9ed88db..b6fdf08 100644
--- a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/query/GetLanguageTest.java
+++ b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/query/GetLanguageTest.java
@@ -17,9 +17,12 @@
 package org.apache.jackrabbit.test.api.query;
 
 import javax.jcr.query.Query;
+import javax.jcr.query.qom.QueryObjectModel;
 import javax.jcr.RepositoryException;
 import javax.jcr.Session;
 
+import org.apache.jackrabbit.test.NotExecutableException;
+
 /**
  * Test the method {@link Query#getLanguage()}.
  *
@@ -63,4 +66,40 @@ public class GetLanguageTest extends AbstractQueryTest {
         Query q = session.getWorkspace().getQueryManager().createQuery(statement, Query.XPATH);
         assertEquals("Query returns wrong language.", Query.XPATH, q.getLanguage());
     }
+
+    /**
+     * Tests if a SQL query returns {@link Query#SQL} when calling
+     * {@link Query#getLanguage()}.
+     */
+    public void testSQL() throws RepositoryException, NotExecutableException {
+        if (isSupportedLanguage(Query.SQL)) {
+            String stmt = "select * from " + testNodeType;
+            Query q = session.getWorkspace().getQueryManager().createQuery(stmt, Query.SQL);
+            assertEquals("Query returns wrong language.", Query.SQL, q.getLanguage());
+        } else {
+            throw new NotExecutableException("SQL not supported");
+        }
+    }
+
+    /**
+     * Tests if a JCR_SQL2 query returns {@link Query#JCR_SQL2} when calling
+     * {@link Query#getLanguage()}.
+     */
+    public void testJCRSQL2() throws RepositoryException {
+        String stmt = "SELECT * FROM [" + testNodeType + "]";
+        Query q = session.getWorkspace().getQueryManager().createQuery(stmt, Query.JCR_SQL2);
+        assertEquals("Query returns wrong language.", Query.JCR_SQL2, q.getLanguage());
+    }
+
+    /**
+     * Tests if a query object model returns {@link Query#JCR_JQOM} when calling
+     * {@link Query#getLanguage()}.
+     */
+    public void testJCRQOM() throws RepositoryException {
+        QueryObjectModel qom = qf.createQuery(
+                qf.selector(testNodeType, "s"),
+                null, null, null
+        );
+        assertEquals("Query returns wrong language.", Query.JCR_JQOM, qom.getLanguage());
+    }
 }
