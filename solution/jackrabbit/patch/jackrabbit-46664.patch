diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/HierarchyResolver.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/HierarchyResolver.java
index 4aa6da2..e41dd98 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/HierarchyResolver.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/HierarchyResolver.java
@@ -25,14 +25,20 @@ import java.io.IOException;
 public interface HierarchyResolver {
 
     /**
-     * Returns the document number of the parent of <code>n</code> or
-     * <code>-1</code> if <code>n</code> does not have a parent (<code>n</code>
-     * is the root node).
+     * Returns the document number of the parent of <code>n</code> or an empty
+     * array if <code>n</code> does not have a parent (<code>n</code> is the
+     * root node).
      *
-     * @param n the document number.
+     * @param n          the document number.
+     * @param docNumbers an array for reuse. An implementation should use the
+     *                   passed array as a container for the return value,
+     *                   unless the length of the returned array is different
+     *                   from <code>docNumbers</code>. In which case an
+     *                   implementation will create a new array with an
+     *                   appropriate size.
      * @return the document number of <code>n</code>'s parent.
-     * @throws java.io.IOException if an error occurs while reading from the index.
+     * @throws java.io.IOException if an error occurs while reading from the
+     *                             index.
      */
-    int getParent(int n) throws IOException;
-
+    int[] getParents(int n, int[] docNumbers) throws IOException;
 }
