diff --git a/jackrabbit-spi2jcr/src/test/java/org/apache/jackrabbit/spi2jcr/ServiceStubImpl.java b/jackrabbit-spi2jcr/src/test/java/org/apache/jackrabbit/spi2jcr/ServiceStubImpl.java
index 55eaf4a..5b09c76 100644
--- a/jackrabbit-spi2jcr/src/test/java/org/apache/jackrabbit/spi2jcr/ServiceStubImpl.java
+++ b/jackrabbit-spi2jcr/src/test/java/org/apache/jackrabbit/spi2jcr/ServiceStubImpl.java
@@ -16,55 +16,20 @@
  */
 package org.apache.jackrabbit.spi2jcr;
 
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.apache.jackrabbit.spi.RepositoryServiceStub;
-import org.apache.jackrabbit.spi.RepositoryService;
-import org.apache.jackrabbit.core.jndi.RegistryHelper;
+import java.util.Properties;
 
-import javax.jcr.RepositoryException;
+import javax.jcr.Credentials;
 import javax.jcr.Repository;
+import javax.jcr.RepositoryException;
 import javax.jcr.SimpleCredentials;
-import javax.jcr.Credentials;
-import javax.naming.Context;
-import javax.naming.InitialContext;
-import java.util.Properties;
-import java.util.Hashtable;
+
+import org.apache.jackrabbit.spi.RepositoryService;
+import org.apache.jackrabbit.spi.RepositoryServiceStub;
+import org.apache.jackrabbit.test.AbstractJCRTest;
 
 /** <code>ServiceStubImpl</code>... */
 public class ServiceStubImpl extends RepositoryServiceStub {
 
-    private static Logger log = LoggerFactory.getLogger(ServiceStubImpl.class);
-
-    /**
-     * Property for the repository name (used for jndi lookup)
-     */
-    public static final String PROP_REPOSITORY_NAME = "org.apache.jackrabbit.spi2jcr.name";
-
-    /**
-     * Property for the repository configuration file (used for repository instantiation)
-     */
-    public static final String PROP_REPOSITORY_CONFIG = "org.apache.jackrabbit.spi2jcr.config";
-
-    /**
-     * Property for the repository home directory (used for repository instantiation)
-     */
-    public static final String PROP_REPOSITORY_HOME = "org.apache.jackrabbit.spi2jcr.home";
-
-    /**
-     * Property for the jaas config path. If the system property
-     * <code>java.security.auth.login.config</code> is not set this repository
-     * stub will try to read this property from the environment and use the
-     * value retrieved as the value for the system property.
-     */
-    public static final String PROP_JAAS_CONFIG = "org.apache.jackrabbit.spi2jcr.jaas.config";
-
-    /**
-     * The name of the jaas config system property.
-     */
-    private static final String SYS_JAAS_CONFIG = "java.security.auth.login.config";
-
-
     private RepositoryService service;
     private Credentials adminCredentials;
     private Credentials readOnlyCredentials;
@@ -80,30 +45,7 @@ public class ServiceStubImpl extends RepositoryServiceStub {
 
     public RepositoryService getRepositoryService() throws RepositoryException {
         if (service == null) {
-            Repository repository;
-            try {
-                String repName = environment.getProperty(PROP_REPOSITORY_NAME);
-                String repConfig = environment.getProperty(PROP_REPOSITORY_CONFIG);
-                String repHome = environment.getProperty(PROP_REPOSITORY_HOME);
-                String jaasConfig = environment.getProperty(PROP_JAAS_CONFIG);
-
-                // set jaas config from stub properties if system property is
-                // not set.
-                if (System.getProperty(SYS_JAAS_CONFIG) == null && jaasConfig != null) {
-                    System.setProperty(SYS_JAAS_CONFIG, jaasConfig);
-                }
-
-                // register repository instance
-                Hashtable env = new Hashtable();
-                env.put(Context.INITIAL_CONTEXT_FACTORY, "org.apache.jackrabbit.core.jndi.provider.DummyInitialContextFactory");
-                env.put(Context.PROVIDER_URL, "localhost");
-                InitialContext ctx = new InitialContext(env);
-                RegistryHelper.registerRepository(ctx, repName, repConfig, repHome, true);
-
-                repository = (Repository) ctx.lookup(repName);
-            } catch (Exception e) {
-                throw new RepositoryException(e.toString());
-            }
+            Repository repository = AbstractJCRTest.helper.getRepository();
             service = new RepositoryServiceImpl(repository, new BatchReadConfig());
         }
         return service;
