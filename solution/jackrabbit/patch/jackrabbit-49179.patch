diff --git a/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/simple/DavResourceImpl.java b/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/simple/DavResourceImpl.java
index 7234850..7e2fc20 100644
--- a/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/simple/DavResourceImpl.java
+++ b/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/simple/DavResourceImpl.java
@@ -17,7 +17,6 @@
 package org.apache.jackrabbit.webdav.simple;
 
 import org.apache.jackrabbit.JcrConstants;
-import org.apache.jackrabbit.uuid.UUID;
 import org.apache.jackrabbit.server.io.AbstractExportContext;
 import org.apache.jackrabbit.server.io.DefaultIOListener;
 import org.apache.jackrabbit.server.io.ExportContext;
@@ -30,6 +29,7 @@ import org.apache.jackrabbit.server.io.ImportContextImpl;
 import org.apache.jackrabbit.server.io.PropertyExportContext;
 import org.apache.jackrabbit.server.io.PropertyImportContext;
 import org.apache.jackrabbit.util.Text;
+import org.apache.jackrabbit.uuid.UUID;
 import org.apache.jackrabbit.webdav.DavCompliance;
 import org.apache.jackrabbit.webdav.DavException;
 import org.apache.jackrabbit.webdav.DavResource;
@@ -42,8 +42,8 @@ import org.apache.jackrabbit.webdav.DavSession;
 import org.apache.jackrabbit.webdav.MultiStatusResponse;
 import org.apache.jackrabbit.webdav.bind.BindConstants;
 import org.apache.jackrabbit.webdav.bind.BindableResource;
-import org.apache.jackrabbit.webdav.bind.ParentSet;
 import org.apache.jackrabbit.webdav.bind.ParentElement;
+import org.apache.jackrabbit.webdav.bind.ParentSet;
 import org.apache.jackrabbit.webdav.io.InputContext;
 import org.apache.jackrabbit.webdav.io.OutputContext;
 import org.apache.jackrabbit.webdav.jcr.JcrDavException;
@@ -57,10 +57,7 @@ import org.apache.jackrabbit.webdav.lock.Scope;
 import org.apache.jackrabbit.webdav.lock.SupportedLock;
 import org.apache.jackrabbit.webdav.lock.Type;
 import org.apache.jackrabbit.webdav.property.DavProperty;
-import org.apache.jackrabbit.webdav.property.DavPropertyIterator;
 import org.apache.jackrabbit.webdav.property.DavPropertyName;
-import org.apache.jackrabbit.webdav.property.DavPropertyNameIterator;
-import org.apache.jackrabbit.webdav.property.DavPropertyNameSet;
 import org.apache.jackrabbit.webdav.property.DavPropertySet;
 import org.apache.jackrabbit.webdav.property.DefaultDavProperty;
 import org.apache.jackrabbit.webdav.property.HrefProperty;
@@ -81,11 +78,11 @@ import java.io.OutputStream;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Date;
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
-import java.util.HashSet;
 
 /**
  * DavResourceImpl implements a DavResource.
@@ -128,42 +125,6 @@ public class DavResourceImpl implements DavResource, BindableResource, JcrConsta
      * @param locator
      * @param factory
      * @param session
-     * @deprecated
-     */
-    public DavResourceImpl(DavResourceLocator locator, DavResourceFactory factory,
-                           DavSession session, ResourceConfig config) throws DavException {
-        JcrDavSession.checkImplementation(session);
-        this.session = (JcrDavSession)session;
-        this.factory = factory;
-        this.locator = locator;
-        this.config = config;
-
-        if (locator != null && locator.getRepositoryPath() != null) {
-            try {
-                Item item = getJcrSession().getItem(locator.getRepositoryPath());
-                if (item != null && item.isNode()) {
-                    node = (Node) item;
-                    // define what is a collection in webdav
-                    isCollection = config.isCollectionResource(node);
-                    initRfc4122Uri();
-                }
-            } catch (PathNotFoundException e) {
-                // ignore: exists field evaluates to false
-            } catch (RepositoryException e) {
-                // some other error
-                throw new JcrDavException(e);
-            }
-        } else {
-            throw new DavException(DavServletResponse.SC_NOT_FOUND);
-        }
-    }
-
-    /**
-     * Create a new {@link DavResource}.
-     *
-     * @param locator
-     * @param factory
-     * @param session
      * @param config
      * @param isCollection
      * @throws DavException
@@ -259,17 +220,6 @@ public class DavResourceImpl implements DavResource, BindableResource, JcrConsta
     }
 
     /**
-     * Package protected method that allows to define whether this resource
-     * represents a collection or not.
-     *
-     * @param isCollection
-     * @deprecated Use the constructor taking a boolean flag instead.
-     */
-    void setIsCollection(boolean isCollection) {
-        this.isCollection = isCollection;
-    }
-
-    /**
      * @see org.apache.jackrabbit.webdav.DavResource#getLocator()
      */
     public DavResourceLocator getLocator() {
@@ -456,28 +406,6 @@ public class DavResourceImpl implements DavResource, BindableResource, JcrConsta
         }
     }
 
-    /**
-     * @see DavResource#alterProperties(DavPropertySet, DavPropertyNameSet)
-     */
-    public MultiStatusResponse alterProperties(DavPropertySet setProperties,
-                                               DavPropertyNameSet removePropertyNames)
-            throws DavException {
-        List changeList = new ArrayList();
-        if (removePropertyNames != null) {
-            DavPropertyNameIterator it = removePropertyNames.iterator();
-            while (it.hasNext()) {
-                changeList.add(it.next());
-            }
-        }
-        if (setProperties != null) {
-            DavPropertyIterator it = setProperties.iterator();
-            while (it.hasNext()) {
-                changeList.add(it.next());
-            }
-        }
-        return alterProperties(changeList);
-    }
-
     public MultiStatusResponse alterProperties(List changeList) throws DavException {
         if (isLocked(this)) {
             throw new DavException(DavServletResponse.SC_LOCKED);
