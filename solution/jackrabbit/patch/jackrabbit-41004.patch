diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/TraversingQueryNodeVisitor.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/TraversingQueryNodeVisitor.java
deleted file mode 100644
index dae98f0..0000000
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/TraversingQueryNodeVisitor.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.jackrabbit.core.query;
-
-import org.apache.jackrabbit.spi.commons.query.AndQueryNode;
-import org.apache.jackrabbit.spi.commons.query.DefaultQueryNodeVisitor;
-import org.apache.jackrabbit.spi.commons.query.DerefQueryNode;
-import org.apache.jackrabbit.spi.commons.query.LocationStepQueryNode;
-import org.apache.jackrabbit.spi.commons.query.NotQueryNode;
-import org.apache.jackrabbit.spi.commons.query.OrQueryNode;
-import org.apache.jackrabbit.spi.commons.query.OrderQueryNode;
-import org.apache.jackrabbit.spi.commons.query.PathQueryNode;
-import org.apache.jackrabbit.spi.commons.query.QueryRootNode;
-
-/**
- * <code>TraversingQueryNodeVisitor</code> implements a base class for a
- * traversing query node visitor.
- */
-public class TraversingQueryNodeVisitor extends DefaultQueryNodeVisitor {
-
-    public Object visit(OrQueryNode node, Object data) {
-        return node.acceptOperands(this, data);
-    }
-
-    public Object visit(AndQueryNode node, Object data) {
-        return node.acceptOperands(this, data);
-    }
-
-    public Object visit(QueryRootNode node, Object data) {
-        PathQueryNode pathNode = node.getLocationNode();
-        if (pathNode != null) {
-            pathNode.accept(this, data);
-        }
-        OrderQueryNode orderNode = node.getOrderNode();
-        if (orderNode != null) {
-            orderNode.accept(this, data);
-        }
-        return data;
-    }
-
-    public Object visit(NotQueryNode node, Object data) {
-        return node.acceptOperands(this, data);
-    }
-
-    public Object visit(PathQueryNode node, Object data) {
-        return node.acceptOperands(this, data);
-    }
-
-    public Object visit(LocationStepQueryNode node, Object data) {
-        return node.acceptOperands(this, data);
-    }
-
-    public Object visit(DerefQueryNode node, Object data) {
-        return node.acceptOperands(this, data);
-    }
-}
