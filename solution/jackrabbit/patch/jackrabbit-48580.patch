diff --git a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/nodetype/AbstractNodeTypeManager.java b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/nodetype/AbstractNodeTypeManager.java
index abafcba..97f02b7 100644
--- a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/nodetype/AbstractNodeTypeManager.java
+++ b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/nodetype/AbstractNodeTypeManager.java
@@ -18,6 +18,7 @@ package org.apache.jackrabbit.spi.commons.nodetype;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.apache.jackrabbit.spi.Name;
 
 import javax.jcr.nodetype.NodeTypeManager;
 import javax.jcr.nodetype.NodeTypeTemplate;
@@ -25,6 +26,7 @@ import javax.jcr.nodetype.NodeTypeDefinition;
 import javax.jcr.nodetype.NodeDefinitionTemplate;
 import javax.jcr.nodetype.PropertyDefinitionTemplate;
 import javax.jcr.nodetype.NodeType;
+import javax.jcr.nodetype.NoSuchNodeTypeException;
 import javax.jcr.UnsupportedRepositoryOperationException;
 import javax.jcr.RepositoryException;
 
@@ -39,6 +41,15 @@ public abstract class AbstractNodeTypeManager implements NodeTypeManager {
      */
     private static final Logger log = LoggerFactory.getLogger(AbstractNodeTypeManager.class);
 
+    /**
+     * Return the node type with the specified <code>ntName</code>.
+     *
+     * @param ntName Name of the node type to be returned.
+     * @return the node type with the specified <code>ntName</code>.
+     * @throws NoSuchNodeTypeException If no such node type exists.
+     */
+    public abstract NodeType getNodeType(Name ntName) throws NoSuchNodeTypeException;
+
     //----------------------------------------------------< NodeTypeManager >---
     /**
      * @see javax.jcr.nodetype.NodeTypeManager#createNodeTypeTemplate()
@@ -71,4 +82,21 @@ public abstract class AbstractNodeTypeManager implements NodeTypeManager {
             throws UnsupportedRepositoryOperationException, RepositoryException {
         return new PropertyDefinitionTemplateImpl();
     }
+
+    /**
+     * @see javax.jcr.nodetype.NodeTypeManager#registerNodeType(NodeTypeDefinition, boolean)
+     */
+    public NodeType registerNodeType(NodeTypeDefinition ntd, boolean allowUpdate)
+            throws RepositoryException {
+        NodeTypeDefinition[] ntds = new NodeTypeDefinition[] { ntd };
+        return registerNodeTypes(ntds, allowUpdate).nextNodeType();
+    }
+
+    /**
+     * @see javax.jcr.nodetype.NodeTypeManager#unregisterNodeType(String)
+     */
+    public void unregisterNodeType(String name)
+            throws UnsupportedRepositoryOperationException, NoSuchNodeTypeException, RepositoryException {
+        unregisterNodeTypes(new String[] {name});
+    }
 }
\ No newline at end of file
