diff --git a/contrib/spi/client/src/test/java/org/apache/jackrabbit/jcr2spi/ReorderTest.java b/contrib/spi/client/src/test/java/org/apache/jackrabbit/jcr2spi/ReorderTest.java
index 85d119e..4da0427 100644
--- a/contrib/spi/client/src/test/java/org/apache/jackrabbit/jcr2spi/ReorderTest.java
+++ b/contrib/spi/client/src/test/java/org/apache/jackrabbit/jcr2spi/ReorderTest.java
@@ -33,13 +33,13 @@ public class ReorderTest extends AbstractJCRTest {
         if (!testRootNode.getPrimaryNodeType().hasOrderableChildNodes()) {
             throw new NotExecutableException("Test node does not have orderable children.");
         }
+        NodeIterator it = testRootNode.getNodes();
+        if (it.hasNext()) {
+            throw new NotExecutableException("Test node already contains child nodes");
+        }
         createOrderableChildren();
     }
 
-    protected void tearDown() throws Exception {
-        super.tearDown();
-    }
-
     protected void createOrderableChildren() throws RepositoryException, LockException, ConstraintViolationException, NoSuchNodeTypeException, ItemExistsException, VersionException, NotExecutableException {
         child1 = testRootNode.addNode(nodeName1, testNodeType);
         child2 = testRootNode.addNode(nodeName2, testNodeType);
@@ -63,11 +63,15 @@ public class ReorderTest extends AbstractJCRTest {
         while (it.hasNext()) {
             Node child = it.nextNode();
             if (i >= children.length) {
-                fail("Reorder removed a child node.");
+                fail("Reorder added a child node.");
             }
             assertTrue("Wrong order of children: " + child + " is not the same as " + children[i], child.isSame(children[i]));
             i++;
         }
+
+        if (i < children.length-1) {
+            fail("Reorder removed a child node.");
+        }
     }
 
     public void testReorder() throws RepositoryException {
