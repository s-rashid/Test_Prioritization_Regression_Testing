diff --git a/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/security/user/UserManagerCreateUserTest.java b/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/security/user/UserManagerCreateUserTest.java
index 63e425f..8d58ad3 100644
--- a/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/security/user/UserManagerCreateUserTest.java
+++ b/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/security/user/UserManagerCreateUserTest.java
@@ -67,6 +67,16 @@ public class UserManagerCreateUserTest extends AbstractUserTest {
         assertEquals(p.getName(), user.getPrincipal().getName());
     }
 
+    public void testCreateUserWithPath2() throws RepositoryException {
+        Principal p = getTestPrincipal();
+        String uid = p.getName();
+        User user = userMgr.createUser(uid, buildPassword(uid, true), p, "any/path");
+        createdUsers.add(user);
+
+        assertNotNull(user.getID());
+        assertEquals(p.getName(), user.getPrincipal().getName());
+    }
+
     public void testCreateUserWithDifferentPrincipalName() throws RepositoryException {
         Principal p = getTestPrincipal();
         String uid = getTestPrincipal().getName();
@@ -114,7 +124,7 @@ public class UserManagerCreateUserTest extends AbstractUserTest {
             User user = userMgr.createUser("", "anyPW");
             createdUsers.add(user);
 
-            fail("A User cannot be built with 'null' userID");
+            fail("A User cannot be built with \"\" userID");
         } catch (Exception e) {
             // ok
         }
@@ -122,7 +132,7 @@ public class UserManagerCreateUserTest extends AbstractUserTest {
             User user = userMgr.createUser("", "anyPW", getTestPrincipal(), null);
             createdUsers.add(user);
 
-            fail("A User cannot be built with 'null' userID");
+            fail("A User cannot be built with \"\" userID");
         } catch (Exception e) {
             // ok
         }
@@ -159,6 +169,29 @@ public class UserManagerCreateUserTest extends AbstractUserTest {
         }
     }
 
+    public void testCreateUserWithEmptyPrincipal() throws RepositoryException {
+        try {
+            Principal p = getTestPrincipal("");
+            String uid = p.getName();
+            User user = userMgr.createUser(uid, buildPassword(uid, true), p, "/a/b/c");
+            createdUsers.add(user);
+
+            fail("A User cannot be built with ''-named Principal");
+        } catch (Exception e) {
+            // ok
+        }
+        try {
+            Principal p = getTestPrincipal(null);
+            String uid = p.getName();
+            User user = userMgr.createUser(uid, buildPassword(uid, true), p, "/a/b/c");
+            createdUsers.add(user);
+
+            fail("A User cannot be built with ''-named Principal");
+        } catch (Exception e) {
+            // ok
+        }
+    }
+
     public void testCreateTwiceWithSameUserID() throws RepositoryException {
         String uid = getTestPrincipal().getName();
         User user = userMgr.createUser(uid, buildPassword(uid, false));
