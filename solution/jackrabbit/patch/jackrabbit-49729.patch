diff --git a/jackrabbit-spi/src/test/java/org/apache/jackrabbit/spi/QValueFactoryTest.java b/jackrabbit-spi/src/test/java/org/apache/jackrabbit/spi/QValueFactoryTest.java
index 445b492..b749a70 100644
--- a/jackrabbit-spi/src/test/java/org/apache/jackrabbit/spi/QValueFactoryTest.java
+++ b/jackrabbit-spi/src/test/java/org/apache/jackrabbit/spi/QValueFactoryTest.java
@@ -203,13 +203,13 @@ public class QValueFactoryTest extends AbstractSPITest {
     public void testDateValueEquality() throws RepositoryException {
         QValue v = factory.create(calendar);
         QValue otherV = factory.create(calendar);
-        assertEquals("Equality of qualified date value must be calculated based on their String representation.", v, otherV);
+        assertEquals("Equality of date value must be calculated based on their String representation.", v, otherV);
     }
 
     public void testDateValueEquality2() throws RepositoryException {
         QValue v = factory.create(calendar);
         QValue otherV = factory.create(v.getString(), PropertyType.DATE);
-        assertEquals("Equality of qualified date value must be calculated based on their String representation.", v, otherV);
+        assertEquals("Equality of date value must be calculated based on their String representation.", v, otherV);
     }
 
     //----------------------------------------------------------< REFERENCE >---
@@ -238,7 +238,7 @@ public class QValueFactoryTest extends AbstractSPITest {
         if (reference != null) {
             QValue v = factory.create(reference, PropertyType.REFERENCE);
             QValue otherV = factory.create(reference, PropertyType.REFERENCE);
-            assertEquals("Qualified ref values created from the same string must be equal.", v, otherV);
+            assertEquals("Reference values created from the same string must be equal.", v, otherV);
         } else {
             log.warn("Configuration entry 'QValueFactoryTest.reference' is missing -> skip test 'testReferenceValueEquality'.");
         }
