diff --git a/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/XATest.java b/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/XATest.java
index 917b6f1..f734ac0 100644
--- a/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/XATest.java
+++ b/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/XATest.java
@@ -1545,6 +1545,55 @@ public class XATest extends AbstractJCRTest {
         s2.logout();
 
     }
+    
+    /**
+     * Tests JCR-1666 After transaction rollback session may become 'corrupt'
+     * 
+     * @throws Exception
+     */
+    public void testRollbackRefreshSave() throws Exception {
+        // get user transaction object
+        UserTransaction utx = new UserTransactionImpl(superuser);
+
+        // start transaction
+        utx.begin();
+
+        // add node and save
+        Node n = testRootNode.addNode("n");
+        n.addMixin(mixVersionable);
+        superuser.save();
+
+        // assertion: node exists in this session
+        String uuid = n.getUUID();
+
+        try {
+            superuser.getNodeByUUID(uuid);
+        } catch (ItemNotFoundException e) {
+            fail("New node not visible after save()");
+        }
+
+        // rollback
+        utx.rollback();
+
+        superuser.refresh(false);
+
+        // assertion: node does not exist in this session
+        try {
+            superuser.getNodeByUUID(uuid);
+            fail("Node still visible after rollback()");
+        } catch (ItemNotFoundException e) {
+            /* expected */
+        }
+
+        utx = new UserTransactionImpl(superuser);
+        utx.begin();
+        Node m = superuser.getRootNode().addNode("m");
+        m.addMixin(mixVersionable);
+        superuser.save();
+        utx.commit();
+        
+        superuser.logout();
+    }
 
     /**
      * helper method for {@link #testXAVersionsThoroughly()}
