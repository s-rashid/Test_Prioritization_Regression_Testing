diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/AbstractQueryImpl.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/AbstractQueryImpl.java
index b9461ce..76d7717 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/AbstractQueryImpl.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/AbstractQueryImpl.java
@@ -17,13 +17,11 @@
 package org.apache.jackrabbit.core.query;
 
 import javax.jcr.Node;
-import javax.jcr.RepositoryException;
 import javax.jcr.query.InvalidQueryException;
 import javax.jcr.query.Query;
 
 import org.apache.jackrabbit.core.ItemManager;
 import org.apache.jackrabbit.core.SessionImpl;
-import org.apache.jackrabbit.spi.commons.query.qom.QueryObjectModelTree;
 
 /**
  * Defines common initialization methods for all query implementations.
@@ -38,6 +36,8 @@ public abstract class AbstractQueryImpl implements Query {
      * @param handler   the query handler of the search index.
      * @param statement the query statement.
      * @param language  the syntax of the query statement.
+     * @param node      a nt:query node where the query was read from or
+     *                  <code>null</code> if it is not a stored query.
      * @throws InvalidQueryException if the query statement is invalid according
      *                               to the specified <code>language</code>.
      */
@@ -45,39 +45,6 @@ public abstract class AbstractQueryImpl implements Query {
                               ItemManager itemMgr,
                               QueryHandler handler,
                               String statement,
-                              String language) throws InvalidQueryException;
-
-    /**
-     * Initializes a query instance from a nt:query node.
-     *
-     * @param session the session of the user executing this query.
-     * @param itemMgr the item manager of the session executing this query.
-     * @param handler the query handler of the search index.
-     * @param node    a node of type <code>nt:query</code>.
-     * @throws InvalidQueryException If <code>node</code> is not a valid persisted query
-     *                               (that is, a node of type <code>nt:query</code>).
-     * @throws RepositoryException   if another error occurs
-     */
-    public abstract void init(SessionImpl session,
-                              ItemManager itemMgr,
-                              QueryHandler handler,
-                              Node node)
-            throws InvalidQueryException, RepositoryException;
-
-    /**
-     * Initializes a query instance from a query object model.
-     *
-     * @param session  the session of the user executing this query.
-     * @param itemMgr  the item manager of the session executing this query.
-     * @param handler  the query handler of the search index.
-     * @param qomTree  the query object model tree.
-     * @param language the original query syntax from where the JQOM was
-     *                 created.
-     * @throws RepositoryException if another error occurs
-     */
-    public abstract void init(SessionImpl session,
-                              ItemManager itemMgr,
-                              QueryHandler handler,
-                              QueryObjectModelTree qomTree,
-                              String language) throws RepositoryException;
+                              String language,
+                              Node node) throws InvalidQueryException;
 }
