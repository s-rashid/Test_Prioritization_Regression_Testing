diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/ParentAxisQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/ParentAxisQuery.java
index eb29886..1d52aaf 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/ParentAxisQuery.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/ParentAxisQuery.java
@@ -42,7 +42,7 @@ class ParentAxisQuery extends Query {
     /**
      * Default score is 1.0f.
      */
-    private static final Float DEFAULT_SCORE = new Float(1.0f);
+    private static final Float DEFAULT_SCORE = 1.0f;
 
     /**
      * The context query
@@ -241,7 +241,7 @@ class ParentAxisQuery extends Query {
          * key=[Integer] id of selected document from context query<br>
          * value=[Float] score for that document
          */
-        private final Map scores = new HashMap();
+        private final Map<Integer, Float> scores = new HashMap<Integer, Float>();
 
         /**
          * The next document id to return
@@ -286,11 +286,11 @@ class ParentAxisQuery extends Query {
          * {@inheritDoc}
          */
         public float score() throws IOException {
-            Float score = (Float) scores.get(new Integer(nextDoc));
+            Float score = scores.get(nextDoc);
             if (score == null) {
                 score = DEFAULT_SCORE;
             }
-            return score.floatValue();
+            return score;
         }
 
         /**
@@ -327,14 +327,14 @@ class ParentAxisQuery extends Query {
                             if (docs.length == 1) {
                                 // optimize single value
                                 hits.set(docs[0]);
-                                if (score != DEFAULT_SCORE.floatValue()) {
-                                    scores.put(new Integer(docs[0]), new Float(score));
+                                if (score != DEFAULT_SCORE) {
+                                    scores.put(docs[0], score);
                                 }
                             } else {
-                                for (int i = 0; i < docs.length; i++) {
-                                    hits.set(docs[i]);
-                                    if (score != DEFAULT_SCORE.floatValue()) {
-                                        scores.put(new Integer(docs[i]), new Float(score));
+                                for (int docNum : docs) {
+                                    hits.set(docNum);
+                                    if (score != DEFAULT_SCORE) {
+                                        scores.put(docNum, score);
                                     }
                                 }
                             }
