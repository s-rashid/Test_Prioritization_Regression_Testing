diff --git a/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/operation/Merge.java b/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/operation/Merge.java
index 51fe474..31f5d55 100644
--- a/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/operation/Merge.java
+++ b/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/operation/Merge.java
@@ -74,15 +74,19 @@ public class Merge extends AbstractOperation {
     public void persisted() {
         assert status == STATUS_PENDING;
         status = STATUS_PERSISTED;
-        try {
-            NodeEntry vhe = mgr.getVersionHistoryEntry(nodeState);
-            if (vhe != null) {
-                vhe.invalidate(true);
+        if (isActivityMerge()) {
+            // TODO invalidate
+        } else {
+            try {
+                NodeEntry vhe = mgr.getVersionHistoryEntry(nodeState);
+                if (vhe != null) {
+                    vhe.invalidate(true);
+                }
+            } catch (RepositoryException e) {
+                log.warn("Error while retrieving VersionHistory entry:", e.getMessage());
             }
-        } catch (RepositoryException e) {
-            log.warn("Error while retrieving VersionHistory entry:", e.getMessage());
+            nodeState.getHierarchyEntry().invalidate(true);
         }
-        nodeState.getHierarchyEntry().invalidate(true);
     }
 
     //----------------------------------------< Access Operation Parameters >---
@@ -102,6 +106,10 @@ public class Merge extends AbstractOperation {
         return isShallow;
     }
 
+    public boolean isActivityMerge() {
+        return srcWorkspaceName == null;
+    }
+
     public void setFailedIds(Iterator failedIds) {
         if (failedIds == null) {
             throw new IllegalArgumentException("IdIterator must not be null.");
