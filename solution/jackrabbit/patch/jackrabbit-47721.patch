diff --git a/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/jsr283/query/qom/UpperLowerCaseTest.java b/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/jsr283/query/qom/UpperLowerCaseTest.java
index 5fad0fc..612e2ef 100644
--- a/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/jsr283/query/qom/UpperLowerCaseTest.java
+++ b/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/jsr283/query/qom/UpperLowerCaseTest.java
@@ -24,6 +24,8 @@ import javax.jcr.ValueFactory;
 import javax.jcr.query.Query;
 import javax.jcr.query.qom.DynamicOperand;
 
+import org.apache.jackrabbit.spi.commons.query.qom.Operator;
+
 /**
  * <code>UpperLowerCaseTest</code> performs tests with upper- and lower-case
  * operands.
@@ -68,26 +70,26 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
 
         // upper case
         checkQueries(qomFactory.propertyValue("s", propertyName1),
-                true, JCR_OPERATOR_EQUAL_TO,
+                true, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.NAME,
                 new boolean[]{false, false, false, false, true});
 
         checkQueries(qomFactory.propertyValue("s", propertyName2),
-                true, JCR_OPERATOR_EQUAL_TO,
+                true, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.NAME,
                 new boolean[]{false, false, false, false, true});
 
         // lower case
         checkQueries(qomFactory.propertyValue("s", propertyName1),
-                false, JCR_OPERATOR_EQUAL_TO,
+                false, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.NAME,
                 new boolean[]{true, false, false, false, false});
 
         checkQueries(qomFactory.propertyValue("s", propertyName2),
-                false, JCR_OPERATOR_EQUAL_TO,
+                false, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.NAME,
                 new boolean[]{true, false, false, false, false});
@@ -96,26 +98,26 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
     public void testPropertyValue() throws RepositoryException {
         // upper case
         checkQueries(qomFactory.propertyValue("s", propertyName1),
-                true, JCR_OPERATOR_EQUAL_TO,
+                true, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.STRING,
                 new boolean[]{false, false, false, false, true});
 
         checkQueries(qomFactory.propertyValue("s", propertyName2),
-                true, JCR_OPERATOR_EQUAL_TO,
+                true, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.STRING,
                 new boolean[]{false, false, false, false, true});
 
         // lower case
         checkQueries(qomFactory.propertyValue("s", propertyName1),
-                false, JCR_OPERATOR_EQUAL_TO,
+                false, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.STRING,
                 new boolean[]{true, false, false, false, false});
 
         checkQueries(qomFactory.propertyValue("s", propertyName2),
-                false, JCR_OPERATOR_EQUAL_TO,
+                false, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.STRING,
                 new boolean[]{true, false, false, false, false});
@@ -124,7 +126,7 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
     public void testUpperLowerCase() throws RepositoryException {
         // first upper case, then lower case again
         checkQueries(qomFactory.upperCase(qomFactory.propertyValue("s", propertyName1)),
-                false, JCR_OPERATOR_EQUAL_TO,
+                false, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.STRING,
                 new boolean[]{true, false, false, false, false});
@@ -133,7 +135,7 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
     public void testUpperCaseTwice() throws RepositoryException {
         // upper case twice
         checkQueries(qomFactory.upperCase(qomFactory.propertyValue("s", propertyName1)),
-                true, JCR_OPERATOR_EQUAL_TO,
+                true, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.STRING,
                 new boolean[]{false, false, false, false, true});
@@ -142,7 +144,7 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
     public void testLowerUpperCase() throws RepositoryException {
         // first lower case, then upper case again
         checkQueries(qomFactory.lowerCase(qomFactory.propertyValue("s", propertyName1)),
-                true, JCR_OPERATOR_EQUAL_TO,
+                true, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.STRING,
                 new boolean[]{false, false, false, false, true});
@@ -151,7 +153,7 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
     public void testLowerCaseTwice() throws RepositoryException {
         // lower case twice
         checkQueries(qomFactory.lowerCase(qomFactory.propertyValue("s", propertyName1)),
-                false, JCR_OPERATOR_EQUAL_TO,
+                false, Operator.EQ,
                 new String[]{"abc", "Abc", "aBc", "abC", "ABC"},
                 PropertyType.STRING,
                 new boolean[]{true, false, false, false, false});
@@ -161,7 +163,7 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
 
     private void checkQueries(DynamicOperand operand,
                               boolean toUpper,
-                              String operator,
+                              Operator operator,
                               String[] literals,
                               int type,
                               boolean[] matches) throws RepositoryException {
@@ -173,7 +175,7 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
     
     private Query createQuery(DynamicOperand operand,
                               boolean toUpper,
-                              String operator,
+                              Operator operator,
                               Value literal) throws RepositoryException {
         if (toUpper) {
             operand = qomFactory.upperCase(operand);
@@ -184,11 +186,10 @@ public class UpperLowerCaseTest extends AbstractQOMTest {
                 qomFactory.selector(testNodeType, "s"),
                 qomFactory.and(
                         qomFactory.childNode("s", testRoot),
-                        qomFactory.comparison(
+                        operator.comparison(
+                                qomFactory,
                                 operand,
-                                operator,
-                                qomFactory.literal(literal)
-                        )
+                                qomFactory.literal(literal))
                 ), null, null);
     }
 }
