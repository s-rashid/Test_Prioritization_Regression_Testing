diff --git a/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/atomictypeconverter/impl/PathTypeConverterImpl.java b/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/atomictypeconverter/impl/PathTypeConverterImpl.java
index b525d22..d36a07a 100644
--- a/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/atomictypeconverter/impl/PathTypeConverterImpl.java
+++ b/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/atomictypeconverter/impl/PathTypeConverterImpl.java
@@ -26,29 +26,29 @@ import org.apache.jackrabbit.ocm.exception.IncorrectAtomicTypeException;
 import org.apache.jackrabbit.ocm.manager.atomictypeconverter.AtomicTypeConverter;
 
 /**
- * 
- *  Name Type Converter 
- * 
+ *
+ *  Name Type Converter
+ *
  * @author <a href="mailto:christophe.lombart@gmail.com">Christophe Lombart</a>
- * 
+ *
  */
 public class PathTypeConverterImpl implements AtomicTypeConverter
 {
 	/**
-	 * 
+	 *
 	 * @see org.apache.jackrabbit.ocm.manager.atomictypeconverter.AtomicTypeConverter#getValue(java.lang.Object)
 	 */
 	public Value getValue(ValueFactory valueFactory, Object propValue)
 	{
-		try 
+		try
 		{
-			if (propValue == null) 
+			if (propValue == null)
 			{
 				return null;
 			}
 			return valueFactory.createValue((String) propValue, PropertyType.PATH);
-		} 
-		catch (RepositoryException e) 
+		}
+		catch (RepositoryException e)
 		{
 			throw new IncorrectAtomicTypeException("Impossible to convert the value into a path property : " + propValue.toString() + ". Check if it is a valid path.", e);
 		}
@@ -56,7 +56,7 @@ public class PathTypeConverterImpl implements AtomicTypeConverter
 	}
 
     /**
-     * 
+     *
      * @see org.apache.jackrabbit.ocm.manager.atomictypeconverter.AtomicTypeConverter#getObject(javax.jcr.Value)
      */
 	public Object getObject(Value value)
@@ -73,7 +73,7 @@ public class PathTypeConverterImpl implements AtomicTypeConverter
 	}
 	
 	/**
-	 * 
+	 *
 	 * @see org.apache.jackrabbit.ocm.manager.atomictypeconverter.AtomicTypeConverter#getStringValue(java.lang.Object)
 	 */
 	public String getXPathQueryValue(ValueFactory valueFactory, Object object)
