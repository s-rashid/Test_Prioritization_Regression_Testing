diff --git a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/value/ValueFormat.java b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/value/ValueFormat.java
index f066ea1..7925422 100644
--- a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/value/ValueFormat.java
+++ b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/value/ValueFormat.java
@@ -57,6 +57,10 @@ public class ValueFormat {
             }
         } else if (jcrValue.getType() == PropertyType.DATE) {
             return factory.create(jcrValue.getDate());
+        } else if (jcrValue.getType() == PropertyType.DOUBLE) {
+            return factory.create(jcrValue.getDouble());
+        } else if (jcrValue.getType() == PropertyType.LONG) {
+            return factory.create(jcrValue.getLong());
         } else {
             return getQValue(jcrValue.getString(), jcrValue.getType(), resolver, factory);
         }
@@ -146,8 +150,6 @@ public class ValueFormat {
         switch (propertyType) {
             case PropertyType.STRING:
             case PropertyType.BOOLEAN:
-            case PropertyType.DOUBLE:
-            case PropertyType.LONG:
             case PropertyType.REFERENCE:
                 jcrValue = factory.createValue(qualifiedValue.getString(), propertyType);
                 break;
@@ -165,6 +167,12 @@ public class ValueFormat {
             case PropertyType.DATE:
                 jcrValue = factory.createValue(qualifiedValue.getCalendar());
                 break;
+            case PropertyType.DOUBLE:
+              jcrValue = factory.createValue(qualifiedValue.getDouble());
+              break;
+            case PropertyType.LONG:
+                jcrValue = factory.createValue(qualifiedValue.getLong());
+                break;
             default:
                 throw new RepositoryException("illegal internal value type");
         }
