diff --git a/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/query/QueryResultImpl.java b/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/query/QueryResultImpl.java
index 4a6ed9f..e47c238 100644
--- a/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/query/QueryResultImpl.java
+++ b/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/query/QueryResultImpl.java
@@ -18,9 +18,7 @@ package org.apache.jackrabbit.jcr2spi.query;
 
 import org.apache.jackrabbit.jcr2spi.ItemManager;
 import org.apache.jackrabbit.jcr2spi.ManagerProvider;
-import org.apache.jackrabbit.spi.Name;
 import org.apache.jackrabbit.spi.QueryInfo;
-import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
 
 import javax.jcr.NodeIterator;
 import javax.jcr.RepositoryException;
@@ -66,13 +64,7 @@ class QueryResultImpl implements QueryResult {
      * {@inheritDoc}
      */
     public String[] getColumnNames() throws RepositoryException {
-        Name[] names = queryInfo.getColumnNames();
-        String[] propNames = new String[names.length];
-        NamePathResolver resolver = mgrProvider.getNamePathResolver();
-        for (int i = 0; i < names.length; i++) {
-            propNames[i] = resolver.getJCRName(names[i]);
-        }
-        return propNames;
+        return queryInfo.getColumnNames();
     }
 
     /**
@@ -87,7 +79,8 @@ class QueryResultImpl implements QueryResult {
      */
     public RowIterator getRows() throws RepositoryException {
         return new RowIteratorImpl(queryInfo, mgrProvider.getNamePathResolver(),
-                mgrProvider.getJcrValueFactory());
+                mgrProvider.getJcrValueFactory(), itemMgr,
+                mgrProvider.getHierarchyManager());
     }
 
     /**
