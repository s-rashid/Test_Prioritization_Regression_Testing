diff --git a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/WorkspaceCloneReferenceableTest.java b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/WorkspaceCloneReferenceableTest.java
index 0df67bc..c9cd927 100644
--- a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/WorkspaceCloneReferenceableTest.java
+++ b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/WorkspaceCloneReferenceableTest.java
@@ -20,6 +20,8 @@ import javax.jcr.Node;
 import javax.jcr.RepositoryException;
 import javax.jcr.ItemExistsException;
 
+import org.apache.jackrabbit.test.NotExecutableException;
+
 /**
  * <code>WorkspaceCloneReferenceableTest</code> contains tests for cloning
  * referenceable nodes between workspaces.
@@ -36,7 +38,8 @@ public class WorkspaceCloneReferenceableTest extends AbstractWorkspaceReferencea
      * that the new node in the destination workspcace has the same UUID as the
      * node in the source workspace.
      */
-    public void testCloneNodesReferenceableNodesOriginalUUID() throws RepositoryException {
+    public void testCloneNodesReferenceableNodesOriginalUUID() throws RepositoryException,
+            NotExecutableException {
         // add mixin referenceable to node1
         addMixinReferenceableToNode(node1);
 
@@ -60,7 +63,8 @@ public class WorkspaceCloneReferenceableTest extends AbstractWorkspaceReferencea
      * will reflect the clones state in srcWorkspace, in other words the
      * existing node will be moved and changed.
      */
-    public void testCloneNodesRemoveExistingTrue() throws RepositoryException {
+    public void testCloneNodesRemoveExistingTrue() throws RepositoryException,
+            NotExecutableException {
         // add mixin referenceable to node1
         addMixinReferenceableToNode(node1);
 
@@ -83,7 +87,8 @@ public class WorkspaceCloneReferenceableTest extends AbstractWorkspaceReferencea
      * If removeExisting is false then a UUID collision causes this method to
      * throw a ItemExistsException and no changes are made.
      */
-    public void testCloneNodesRemoveExistingFalse() throws RepositoryException {
+    public void testCloneNodesRemoveExistingFalse() throws RepositoryException,
+            NotExecutableException {
         // add mixin referenceable to node1
         addMixinReferenceableToNode(node1);
 
@@ -102,7 +107,8 @@ public class WorkspaceCloneReferenceableTest extends AbstractWorkspaceReferencea
     /**
      * The clone method clones both referenceable and nonreferenceable nodes.
      */
-    public void testCloneNodesReferenceableAndNonreferenceable() throws RepositoryException {
+    public void testCloneNodesReferenceableAndNonreferenceable() throws RepositoryException,
+            NotExecutableException {
         // clone referenceable node
 
         // add mixin referenceable to node1
