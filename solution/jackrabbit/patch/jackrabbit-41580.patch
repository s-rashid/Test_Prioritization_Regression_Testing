diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/qom/QueryObjectModelImpl.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/qom/QueryObjectModelImpl.java
deleted file mode 100644
index a789231..0000000
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/qom/QueryObjectModelImpl.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.jackrabbit.core.query.qom;
-
-import org.apache.jackrabbit.core.query.PreparedQueryImpl;
-
-import org.apache.jackrabbit.core.query.jsr283.qom.QueryObjectModel;
-import org.apache.jackrabbit.core.query.jsr283.qom.Source;
-import org.apache.jackrabbit.core.query.jsr283.qom.Ordering;
-import org.apache.jackrabbit.core.query.jsr283.qom.Constraint;
-import org.apache.jackrabbit.core.query.jsr283.qom.Column;
-
-/**
- * <code>QueryObjectModelImpl</code>...
- */
-public class QueryObjectModelImpl
-        extends PreparedQueryImpl
-        implements QueryObjectModel {
-
-    //-------------------------< QueryObjectModel >-----------------------------
-
-    /**
-     * Gets the node-tuple source for this query.
-     *
-     * @return the node-tuple source; non-null
-     */
-    public Source getSource() {
-        return qomTree.getSource();
-    }
-
-    /**
-     * Gets the constraint for this query.
-     *
-     * @return the constraint, or null if none
-     */
-    public Constraint getConstraint() {
-        return qomTree.getConstraint();
-    }
-
-    /**
-     * Gets the orderings for this query.
-     *
-     * @return an array of zero or more orderings; non-null
-     */
-    public Ordering[] getOrderings() {
-        return qomTree.getOrderings();
-    }
-
-    /**
-     * Gets the columns for this query.
-     *
-     * @return an array of zero or more columns; non-null
-     */
-    public Column[] getColumns() {
-        return qomTree.getColumns();
-    }
-}
