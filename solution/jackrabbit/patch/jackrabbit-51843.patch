diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/xml/ProtectedPropertyImporter.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/xml/ProtectedPropertyImporter.java
new file mode 100644
index 0000000..d8cf2fc
--- /dev/null
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/xml/ProtectedPropertyImporter.java
@@ -0,0 +1,63 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.jackrabbit.core.xml;
+
+import javax.jcr.RepositoryException;
+
+import org.apache.jackrabbit.core.NodeImpl;
+import org.apache.jackrabbit.core.nodetype.PropDef;
+import org.apache.jackrabbit.core.state.NodeState;
+
+/**
+ * <code>ProtectedPropertyImporter</code> is in charge of importing single
+ * properties whith a protected <code>PropDef</code>.
+ *
+ * @see ProtectedNodeImporter for an abstract class used to import protected
+ * nodes and the subtree below them.
+ */
+public interface ProtectedPropertyImporter {
+
+    /**
+     * Handles a single protected property.
+     *
+     * @param parent The affected parent node.
+     * @param protectedPropInfo The <code>PropInfo</code> to be imported.
+     * @param def The property definition determined by the importer that
+     * calls this method.
+     * @return <code>true</code> If the property could be successfully imported;
+     * <code>false</code> otherwise.
+     * @throws RepositoryException If an error occurs.
+     */
+    boolean handlePropInfo(NodeImpl parent, PropInfo protectedPropInfo, PropDef def)
+            throws RepositoryException;
+
+    /**
+     * Handles a single protected property.
+     *
+     * @param parent The affected parent node.
+     * @param protectedPropInfo The <code>PropInfo</code> to be imported.
+     * @param def The property definition determined by the importer that
+     * calls this method.
+     * @return <code>true</code> If the property could be successfully imported;
+     * <code>false</code> otherwise.
+     * @throws RepositoryException If an error occurs.
+     */
+    boolean handlePropInfo(NodeState parent, PropInfo protectedPropInfo, PropDef def)
+            throws RepositoryException;
+
+
+}
