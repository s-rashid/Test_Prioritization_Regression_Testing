diff --git a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/query/qom/DescendantNodeImpl.java b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/query/qom/DescendantNodeImpl.java
index 6c23e07..05f9d22 100644
--- a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/query/qom/DescendantNodeImpl.java
+++ b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/query/qom/DescendantNodeImpl.java
@@ -22,6 +22,9 @@ import org.apache.jackrabbit.spi.Path;
 
 import org.apache.jackrabbit.spi.commons.query.jsr283.qom.DescendantNode;
 
+import javax.jcr.query.InvalidQueryException;
+import javax.jcr.NamespaceException;
+
 /**
  * <code>DescendantNodeImpl</code>...
  */
@@ -41,10 +44,15 @@ public class DescendantNodeImpl
 
     DescendantNodeImpl(NamePathResolver resolver,
                        Name selectorName,
-                       Path path) {
+                       Path path)
+            throws InvalidQueryException, NamespaceException {
         super(resolver);
         this.selectorName = selectorName;
         this.path = path;
+        if (!path.isAbsolute()) {
+            throw new InvalidQueryException(resolver.getJCRPath(path) +
+                    " is not an absolute path");
+        }
     }
 
     /**
@@ -65,6 +73,24 @@ public class DescendantNodeImpl
         return getJCRPath(path);
     }
 
+    /**
+     * Gets the name of the selector against which to apply this constraint.
+     *
+     * @return the selector name; non-null
+     */
+    public Name getSelectorQName() {
+        return selectorName;
+    }
+
+    /**
+     * Gets the absolute path.
+     *
+     * @return the path; non-null
+     */
+    public Path getQPath() {
+        return path;
+    }
+
     //------------------------< AbstractQOMNode >-------------------------------
 
     /**
