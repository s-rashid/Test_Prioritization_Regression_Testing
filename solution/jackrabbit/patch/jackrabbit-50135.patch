diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/lock/LockManager.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/lock/LockManager.java
index d2160ac..c313057 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/lock/LockManager.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/lock/LockManager.java
@@ -102,20 +102,6 @@ public interface LockManager {
     boolean holdsLock(NodeImpl node) throws RepositoryException;
 
     /**
-     * Returns <code>true</code> if the specified session holds a lock on the
-     * given node; otherwise returns <code>false</code>.
-     * <p/>
-     * Note that <code>isLockHolder(session, node)==true</code> implies
-     * <code>holdsLock(node)==true</code>.
-     * @param session session
-     * @param node node
-     * @return if the specified session holds a lock on the given node;
-     *         otherwise returns <code>false</code>
-     * @throws javax.jcr.RepositoryException If an exception occurs.
-     */
-    boolean isLockHolder(Session session, NodeImpl node) throws RepositoryException;
-
-    /**
      * Returns <code>true</code> if this node is locked either as a result
      * of a lock held by this node or by a deep lock on a node above this
      * node; otherwise returns <code>false</code>
@@ -154,6 +140,19 @@ public interface LockManager {
             throws LockException, RepositoryException;
 
     /**
+     * Returns <code>true</code> if the specified session is allowed to unlock
+     * the node; otherwise returns <code>false</code>.
+     * @param session session
+     * @param node node
+     * @return <code>true</code> if the session is allowed access to the node;
+     *         <code>false</code> otherwise
+     * @throws LockException if write access to the specified path is not allowed
+     * @throws RepositoryException if some other error occurs
+     */
+    void checkUnlock(Session session, NodeImpl node) 
+    		throws LockException, RepositoryException;
+    
+    /**
      * Invoked by a session to inform that a lock token has been added.
      * 
      * @param session session that has a added lock token
@@ -161,7 +160,7 @@ public interface LockManager {
      * @throws LockException
      * @throws RepositoryException
      */
-    void lockTokenAdded(SessionImpl session, String lt) throws LockException, RepositoryException;
+    void addLockToken(SessionImpl session, String lt) throws LockException, RepositoryException;
 
     /**
      * Invoked by a session to inform that a lock token has been removed.
@@ -171,5 +170,5 @@ public interface LockManager {
      * @throws LockException
      * @throws RepositoryException
      */
-    void lockTokenRemoved(SessionImpl session, String lt) throws LockException, RepositoryException;
+    void removeLockToken(SessionImpl session, String lt) throws LockException, RepositoryException;
 }
