diff --git a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/query/sql2/Parser.java b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/query/sql2/Parser.java
index f4acf8d..c18b41b 100644
--- a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/query/sql2/Parser.java
+++ b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/query/sql2/Parser.java
@@ -496,7 +496,7 @@ public class Parser {
     }
 
     /**
-     * Create a literal from a parsed value. This method is (currently) not spec compliant.
+     * Create a literal from a parsed value.
      *
      * @param value the original value
      * @return the literal
@@ -505,19 +505,6 @@ public class Parser {
         return factory.literal(value);
     }
 
-    /**
-     * Create uncast literal from a value. According to the JCR specification,
-     * "an UncastLiteral is always interpreted as a Value of property type STRING"
-     * (JCR 2.0 Core Specification, 6.7.34 Literal, page 124).
-     * That means the value is converted to a String first.
-     *
-     * @param value the original value
-     * @return the literal
-     */
-    private Literal getUncastLiteralSpecCompliant(Value value) throws RepositoryException {
-        return factory.literal(valueFactory.createValue(value.getString()));
-    }
-
     private Value parseCastAs(Value value) throws RepositoryException {
         if (readIf("STRING")) {
             return valueFactory.createValue(value.getString());
