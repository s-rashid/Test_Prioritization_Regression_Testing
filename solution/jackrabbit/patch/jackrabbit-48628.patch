diff --git a/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/jcr/lock/JcrActiveLock.java b/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/jcr/lock/JcrActiveLock.java
index cfd6508..8aceebe 100644
--- a/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/jcr/lock/JcrActiveLock.java
+++ b/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/jcr/lock/JcrActiveLock.java
@@ -95,12 +95,12 @@ public class JcrActiveLock extends AbstractActiveLock implements ActiveLock, Dav
     public String getToken() {
         String token = lock.getLockToken();
         if (token == null && lock.isSessionScoped()
-                && lock instanceof org.apache.jackrabbit.api.jsr283.lock.Lock
-                && ((org.apache.jackrabbit.api.jsr283.lock.Lock)lock).isLockOwningSession()) {
+                && lock instanceof javax.jcr.lock.Lock
+                && ((javax.jcr.lock.Lock)lock).isLockOwningSession()) {
             // special handling for session scoped locks that are owned by the
             // current session but never expose their token with jsr 283.
             try {
-                token = ((org.apache.jackrabbit.api.jsr283.Node)lock.getNode()).getIdentifier();
+                token = ((javax.jcr.Node)lock.getNode()).getIdentifier();
             } catch (RepositoryException e) {
                 // should never get here
                 log.warn("Unexpected error while retrieving node identifier for building a DAV specific lock token.",e.getMessage());
