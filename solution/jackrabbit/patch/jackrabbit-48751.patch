diff --git a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/version/OnParentVersionInitializeTest.java b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/version/OnParentVersionInitializeTest.java
index ae2f5ac..679535a 100644
--- a/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/version/OnParentVersionInitializeTest.java
+++ b/jackrabbit-jcr-tests/src/main/java/org/apache/jackrabbit/test/api/version/OnParentVersionInitializeTest.java
@@ -20,6 +20,7 @@ import javax.jcr.RepositoryException;
 import javax.jcr.Node;
 import javax.jcr.version.OnParentVersionAction;
 import javax.jcr.version.Version;
+import javax.jcr.version.VersionManager;
 
 /**
  * <code>OnParentVersionInitializeTest</code> tests the {@link OnParentVersionAction#INITIALIZE INITIALIZE}
@@ -56,4 +57,26 @@ public class OnParentVersionInitializeTest extends AbstractOnParentVersionTest {
 
         assertEquals("On restore of a OnParentVersion-INITIALIZE property P, the current value of P must be left unchanged.", p.getString(), newPropValue);
     }
+
+    /**
+     * Test the restore of a OnParentVersion-INITIALIZE property
+     *
+     * @throws javax.jcr.RepositoryException
+     */
+    public void testRestorePropJcr2() throws RepositoryException {
+
+        Node propParent = p.getParent();
+        VersionManager versionManager = propParent.getSession().getWorkspace().getVersionManager();
+        String path = propParent.getPath();
+        versionManager.checkout(path);
+        Version v = versionManager.checkin(path);
+        versionManager.checkout(path);
+
+        p.setValue(newPropValue);
+        p.getSession().save();
+
+        versionManager.restore(v, false);
+
+        assertEquals("On restore of a OnParentVersion-INITIALIZE property P, the current value of P must be left unchanged.", p.getString(), newPropValue);
+    }
 }
\ No newline at end of file
