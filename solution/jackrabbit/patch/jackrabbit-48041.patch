diff --git a/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/jsr283/observation/EventJournalTest.java b/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/jsr283/observation/EventJournalTest.java
index b6d0a62..353cbbb 100644
--- a/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/jsr283/observation/EventJournalTest.java
+++ b/jackrabbit-core/src/test/java/org/apache/jackrabbit/api/jsr283/observation/EventJournalTest.java
@@ -22,7 +22,6 @@ import java.util.Set;
 
 import javax.jcr.Node;
 import javax.jcr.RepositoryException;
-import javax.jcr.Session;
 import javax.jcr.observation.Event;
 import javax.jcr.observation.EventJournal;
 
@@ -34,6 +33,10 @@ import org.apache.jackrabbit.test.api.observation.AbstractObservationTest;
  */
 public class EventJournalTest extends AbstractObservationTest {
 
+    // TODO: most tests have been migrated over to jackrabbit-jcr-tests
+    // TODO: what's left here relies on Jackrabbit's ObservationManager
+    // TODO: allowing to specify filters when getting the EventJournal
+    
     private EventJournal journal;
 
     protected void setUp() throws Exception {
@@ -41,63 +44,6 @@ public class EventJournalTest extends AbstractObservationTest {
         journal = getEventJournal(ALL_TYPES, "/", true, null, null);
     }
 
-    public void testSkipToNow() throws RepositoryException {
-        // skip everything
-        journal.skipTo(System.currentTimeMillis());
-        assertFalse(journal.hasNext());
-    }
-
-    public void testSkipTo() throws Exception {
-        long time = System.currentTimeMillis();
-
-        // add some nodes
-        Node n1 = testRootNode.addNode(nodeName1);
-        Node n2 = testRootNode.addNode(nodeName2);
-
-        // make sure some time passed otherwise we might
-        // skip this change as well.
-        while (time == System.currentTimeMillis()) {
-            Thread.sleep(1);
-        }
-
-        // now save
-        superuser.save();
-
-        journal.skipTo(time);
-        // at least the two added nodes must be returned by the journal
-        checkJournal(new String[]{n1.getPath(), n2.getPath()}, new String[0]);
-    }
-
-    public void testLiveJournal() throws RepositoryException {
-        journal.skipTo(System.currentTimeMillis());
-        assertFalse(journal.hasNext());
-
-        testRootNode.addNode(nodeName1);
-        superuser.save();
-
-        assertTrue(journal.hasNext());
-    }
-
-    public void testWorkspaceSeparation() throws RepositoryException {
-        journal.skipTo(System.currentTimeMillis());
-        assertFalse(journal.hasNext());
-
-        Session session = helper.getSuperuserSession(workspaceName);
-        try {
-            Node rootNode = session.getRootNode();
-            if (rootNode.hasNode(nodeName1)) {
-                rootNode.getNode(nodeName1).remove();
-            } else {
-                rootNode.addNode(nodeName1);
-            }
-            session.save();
-        } finally {
-            session.logout();
-        }
-
-        assertFalse(journal.hasNext());
-    }
-
     public void testEventType() throws RepositoryException {
         Node n1 = testRootNode.addNode(nodeName1);
 
@@ -122,18 +68,6 @@ public class EventJournalTest extends AbstractObservationTest {
         checkJournal(new String[]{n2.getPath()}, new String[]{n1.getPath()});
     }
 
-    public void testIsDeepTrue() throws RepositoryException {
-        Node n1 = testRootNode.addNode(nodeName1);
-        Node n2 = n1.addNode(nodeName2);
-
-        journal = getEventJournal(ALL_TYPES, testRoot, true, null, null);
-        journal.skipTo(System.currentTimeMillis());
-
-        superuser.save();
-
-        checkJournal(new String[]{n1.getPath(), n2.getPath()}, new String[0]);
-    }
-
     public void testIsDeepFalse() throws RepositoryException {
         Node n1 = testRootNode.addNode(nodeName1);
         Node n2 = n1.addNode(nodeName2);
@@ -146,23 +80,6 @@ public class EventJournalTest extends AbstractObservationTest {
         checkJournal(new String[]{n1.getPath()}, new String[]{n2.getPath()});
     }
 
-    public void testUUID() throws RepositoryException {
-        Node n1 = testRootNode.addNode(nodeName1);
-        if (!n1.isNodeType(mixReferenceable)) {
-            n1.addMixin(mixReferenceable);
-        }
-        superuser.save();
-
-        Node n2 = n1.addNode(nodeName2);
-
-        journal = getEventJournal(ALL_TYPES, "/", true, new String[]{n1.getIdentifier()}, null);
-        journal.skipTo(System.currentTimeMillis());
-
-        superuser.save();
-
-        checkJournal(new String[]{n2.getPath()}, new String[0]);
-    }
-
     public void testNodeType() throws RepositoryException {
         Node n1 = testRootNode.addNode(nodeName1, "nt:folder");
         Node n2 = n1.addNode(nodeName2, "nt:folder");
@@ -176,20 +93,6 @@ public class EventJournalTest extends AbstractObservationTest {
         checkJournal(new String[]{n2.getPath()}, new String[]{n1.getPath()});
     }
 
-    public void testUserData() throws RepositoryException {
-        testRootNode.addNode(nodeName1);
-        String data = createRandomString(5);
-        obsMgr.setUserData(data);
-
-        journal = getEventJournal(ALL_TYPES, testRoot, true, null, null);
-        journal.skipTo(System.currentTimeMillis());
-
-        superuser.save();
-
-        assertTrue("no more events", journal.hasNext());
-        assertEquals("Wrong user data", data, journal.nextEvent().getUserData());
-    }
-
     //-------------------------------< internal >-------------------------------
 
     private EventJournal getEventJournal(int eventTypes,
