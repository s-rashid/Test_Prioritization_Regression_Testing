diff --git a/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/jcr/WorkspaceResourceImpl.java b/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/jcr/WorkspaceResourceImpl.java
index 3dcece8..3f348bb 100644
--- a/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/jcr/WorkspaceResourceImpl.java
+++ b/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/webdav/jcr/WorkspaceResourceImpl.java
@@ -49,6 +49,7 @@ import javax.jcr.RepositoryException;
 import javax.jcr.Workspace;
 import javax.jcr.Item;
 import javax.jcr.Session;
+import javax.jcr.Repository;
 import javax.jcr.version.Version;
 import javax.jcr.observation.EventListener;
 import java.util.Iterator;
@@ -58,6 +59,8 @@ import java.util.Date;
 import java.util.Map;
 import java.util.HashMap;
 import java.io.IOException;
+import java.io.PrintWriter;
+import java.io.OutputStreamWriter;
 
 /**
  * <code>WorkspaceResourceImpl</code>...
@@ -136,8 +139,43 @@ public class WorkspaceResourceImpl extends AbstractResource
      * @throws IOException
      */
     public void spool(OutputContext outputContext) throws IOException {
-        outputContext.setContentLength(0);
-        outputContext.setModificationTime(getModificationTime());
+        if (outputContext.hasStream()) {
+            Session session = getRepositorySession();
+            Repository rep = session.getRepository();
+            String repName = rep.getDescriptor(Repository.REP_NAME_DESC);
+            String repURL = rep.getDescriptor(Repository.REP_VENDOR_URL_DESC);
+            String repVersion = rep.getDescriptor(Repository.REP_VERSION_DESC);
+            String repostr = repName + " " + repVersion;
+
+            StringBuffer sb = new StringBuffer();
+            sb.append("<html><head><title>");
+            sb.append(repostr);
+            sb.append("</title></head>");
+            sb.append("<body><h2>").append(repostr).append("</h2><ul>");
+            sb.append("<li><a href=\"..\">..</a></li>");
+            DavResourceIterator it = getMembers();
+            while (it.hasNext()) {
+                DavResource res = it.nextResource();
+                sb.append("<li><a href=\"");
+                sb.append(res.getHref());
+                sb.append("\">");
+                sb.append(res.getDisplayName());
+                sb.append("</a></li>");
+            }
+            sb.append("</ul><hr size=\"1\"><em>Powered by <a href=\"");
+            sb.append(repURL).append("\">").append(repName);
+            sb.append("</a> ").append(repVersion);
+            sb.append("</em></body></html>");
+
+            outputContext.setContentLength(sb.length());
+            outputContext.setModificationTime(getModificationTime());
+            PrintWriter writer = new PrintWriter(new OutputStreamWriter(outputContext.getOutputStream(), "utf8"));
+            writer.print(sb.toString());
+            writer.close();
+        } else {
+            outputContext.setContentLength(0);
+            outputContext.setModificationTime(getModificationTime());
+        }
     }
 
     /**
@@ -397,7 +435,7 @@ public class WorkspaceResourceImpl extends AbstractResource
         super.initSupportedReports();
         supportedReports.addReportType(JcrPrivilegeReport.PRIVILEGES_REPORT);
     }
-    
+
     protected String getWorkspaceHref() {
         return getHref();
     }
