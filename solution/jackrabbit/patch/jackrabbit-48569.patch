diff --git a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/name/PathBuilder.java b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/name/PathBuilder.java
index 9ad25c0..f299b19 100644
--- a/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/name/PathBuilder.java
+++ b/jackrabbit-spi-commons/src/main/java/org/apache/jackrabbit/spi/commons/name/PathBuilder.java
@@ -46,16 +46,6 @@ public final class PathBuilder {
     private final LinkedList queue;
 
     /**
-     * flag indicating if the current path is normalized
-     */
-    boolean isNormalized = true;
-
-    /**
-     * flag indicating if the current path has leading parent '..' elements
-     */
-    boolean leadingParent = true;
-
-    /**
      * Creates a new PathBuilder to create a Path using the
      * {@link PathFactoryImpl default PathFactory}. See
      * {@link PathBuilder#PathBuilder(PathFactory)} for a constructor explicitely
@@ -121,13 +111,6 @@ public final class PathBuilder {
      * @param elem
      */
     public void addFirst(Path.Element elem) {
-        if (queue.isEmpty()) {
-            isNormalized &= !elem.denotesCurrent();
-            leadingParent = elem.denotesParent();
-        } else {
-            isNormalized &= !elem.denotesCurrent() && (!leadingParent || elem.denotesParent());
-            leadingParent |= elem.denotesParent();
-        }
         queue.addFirst(elem);
     }
 
@@ -157,8 +140,6 @@ public final class PathBuilder {
      */
     public void addLast(Path.Element elem) {
         queue.addLast(elem);
-        leadingParent &= elem.denotesParent();
-        isNormalized &= !elem.denotesCurrent() && (leadingParent || !elem.denotesParent());
     }
 
     /**
