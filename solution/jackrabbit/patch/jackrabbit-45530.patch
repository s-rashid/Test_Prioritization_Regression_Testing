diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/data/FileDataStore.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/data/FileDataStore.java
index 532fa88..6836e57 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/data/FileDataStore.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/data/FileDataStore.java
@@ -165,6 +165,8 @@ public class FileDataStore implements DataStore {
         File temporary = null;
         try {
             temporary = newTemporaryFile();
+            DataIdentifier tempId = new DataIdentifier(temporary.getName());
+            usesIdentifier(tempId);
             // Copy the stream to the temporary file and calculate the
             // stream length and the message digest of the stream
             long length = 0;
@@ -211,7 +213,9 @@ public class FileDataStore implements DataStore {
                     throw new IOException(DIGEST + " collision: " + file);
                 }
             }
-
+            // this will also make sure that
+            // tempId is not garbage collected until here
+            inUse.remove(tempId);
             return new FileDataRecord(identifier, file);
         } catch (NoSuchAlgorithmException e) {
             throw new DataStoreException(DIGEST + " not available", e);
@@ -275,8 +279,9 @@ public class FileDataStore implements DataStore {
         int count = 0;
         if (file.isFile() && file.exists() && file.canWrite()) {
             synchronized (this) {
+                String fileName = file.getName();
                 if (file.lastModified() < min) {
-                    DataIdentifier id = new DataIdentifier(file.getName());
+                    DataIdentifier id = new DataIdentifier(fileName);
                     if (!inUse.containsKey(id)) {
                         file.delete();
                         count++;
