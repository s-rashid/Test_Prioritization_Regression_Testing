diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/SessionImpl.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/SessionImpl.java
index 42b6e4e..63c34f7 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/SessionImpl.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/SessionImpl.java
@@ -1385,6 +1385,27 @@ public class SessionImpl extends AbstractSession
         return wsp.getLockManager();
     }
 
+    /**
+     * Returns all locks owned by this session.
+     *
+     * @return an array of <code>Lock</code>s
+     */
+    public Lock[] getLocks() {
+        // check sanity of this session
+        //sanityCheck();
+        if (!alive) {
+            log.error("failed to retrieve locks: session has been closed");
+            return new Lock[0];
+        }
+
+        try {
+            return getLockManager().getLocks(this);
+        } catch (RepositoryException e) {
+            log.error("Lock manager not available.", e);
+            return new Lock[0];
+        }
+    }
+
     //--------------------------------------------------< new JSR 283 methods >
     /**
      * Returns the node specified by the given identifier. Applies to both
@@ -1536,28 +1557,6 @@ public class SessionImpl extends AbstractSession
         }
     }
 
-    /**
-     * Returns all locks owned by this session.
-     *
-     * @return an array of <code>Lock</code>s
-     * @since JCR 2.0
-     */
-    public Lock[] getLocks() {
-        // check sanity of this session
-        //sanityCheck();
-        if (!alive) {
-            log.error("failed to retrieve locks: session has been closed");
-            return new Lock[0];
-        }
-
-        try {
-            return getLockManager().getLocks(this);
-        } catch (RepositoryException e) {
-            log.error("Lock manager not available.", e);
-            return new Lock[0];
-        }
-    }
-
     //-------------------------------------------------------------< Dumpable >
     /**
      * {@inheritDoc}
