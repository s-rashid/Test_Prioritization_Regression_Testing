diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/state/SharedItemStateManager.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/state/SharedItemStateManager.java
index 0e1477d..870a546 100644
--- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/state/SharedItemStateManager.java
+++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/state/SharedItemStateManager.java
@@ -202,6 +202,7 @@ public class SharedItemStateManager
         if (!hasNonVirtualItemState(rootNodeId)) {
             createRootNodeState(rootNodeId, ntReg);
         }
+        ensureActivitiesNode();
     }
 
     /**
@@ -1315,6 +1316,28 @@ public class SharedItemStateManager
     }
 
     /**
+     * Makes sure child node entry for mandatory jcr:activities exist.
+     * Repositories upgraded from 1.x do not have it.
+     * <p/>
+     * This method assumes that the jcr:system node already exists.
+     *
+     * @throws ItemStateException if an error occurs while reading or writing to
+     *                            the persistence manager.
+     */
+    private void ensureActivitiesNode() throws ItemStateException {
+        NodeState jcrSystemState = (NodeState) getNonVirtualItemState(RepositoryImpl.SYSTEM_ROOT_NODE_ID);
+        if (!jcrSystemState.hasChildNodeEntry(RepositoryImpl.ACTIVITIES_NODE_ID)) {
+            jcrSystemState.addChildNodeEntry(NameConstants.JCR_ACTIVITIES, RepositoryImpl.ACTIVITIES_NODE_ID);
+
+            ChangeLog changeLog = new ChangeLog();
+            changeLog.modified(jcrSystemState);
+
+            persistMgr.store(changeLog);
+            changeLog.persisted();
+        }
+    }
+
+    /**
      * Returns the item state for the given id without considering virtual
      * item state providers.
      */
