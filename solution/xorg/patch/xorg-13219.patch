diff --git a/hw/xfree86/utils/xorgcfg/keyboard-cfg.c b/hw/xfree86/utils/xorgcfg/keyboard-cfg.c
index b4f68d7..b8697c1 100644
--- a/hw/xfree86/utils/xorgcfg/keyboard-cfg.c
+++ b/hw/xfree86/utils/xorgcfg/keyboard-cfg.c
@@ -1182,7 +1182,7 @@ UpdateRulesPopups(void)
 	sme = XtVaCreateManagedWidget(xkb_rules->model.name[i], smeBSBObjectClass,
 				      modelp,
 				      XtNlabel, xkb_rules->model.desc[i],
-				      NULL, 0);
+				      NULL);
 	XtAddCallback(sme, XtNcallback,  KeyboardModelCallback, NULL);
     }
 
@@ -1195,7 +1195,7 @@ UpdateRulesPopups(void)
 	sme = XtVaCreateManagedWidget(xkb_rules->layout.name[i], smeBSBObjectClass,
 				      layoutp,
 				      XtNlabel, xkb_rules->layout.desc[i],
-				      NULL, 0);
+				      NULL);
 	XtAddCallback(sme, XtNcallback,  KeyboardLayoutCallback, NULL);
     }
 
@@ -1207,13 +1207,13 @@ UpdateRulesPopups(void)
     sme = XtVaCreateManagedWidget("None", smeBSBObjectClass,
 				  variantp,
 				  XtNlabel, "None",
-				  NULL, 0);
+				  NULL);
     XtAddCallback(sme, XtNcallback,  KeyboardVariantCallback, NULL);
     for (i = 0; i < xkb_rules->variant.nelem; i++) {
 	sme = XtVaCreateManagedWidget(xkb_rules->variant.name[i], smeBSBObjectClass,
 				      variantp,
 				      XtNlabel, xkb_rules->variant.desc[i],
-				      NULL, 0);
+				      NULL);
 	XtAddCallback(sme, XtNcallback,  KeyboardVariantCallback, NULL);
     }
 
@@ -1225,7 +1225,7 @@ UpdateRulesPopups(void)
     sme = XtVaCreateManagedWidget("None", smeBSBObjectClass,
 				  optionsp,
 				  XtNlabel, "None",
-				  NULL, 0);
+				  NULL);
     XtAddCallback(sme, XtNcallback,  KeyboardOptionsCallback, NULL);
     optparent = optionsp;
     optname = NULL;
@@ -1239,7 +1239,7 @@ UpdateRulesPopups(void)
 					  smeBSBObjectClass,
 					  optpopup,
 					  XtNlabel, "None",
-					  NULL, 0);
+					  NULL);
 	    XtAddCallback(sme, XtNcallback,  KeyboardOptionsCallback, NULL);
 	}
 	else {
@@ -1251,7 +1251,7 @@ UpdateRulesPopups(void)
 				      XtNlabel, xkb_rules->option.desc[i],
 				      XtNmenuName, optname,
 				      XtNleftBitmap, optname ? menuPixmap : None,
-				      NULL, 0);
+				      NULL);
 	if (optparent != optionsp)
 	    XtAddCallback(sme, XtNcallback,  KeyboardOptionsCallback, NULL);
     }
@@ -1277,7 +1277,7 @@ KeyboardModelAndLayout(XF86SetupInfo *info)
 	XtCreateManagedWidget("labelR", labelWidgetClass, kbdml, NULL, 0);
 	rulesb = XtVaCreateManagedWidget("rules", menuButtonWidgetClass, kbdml,
 					 XtNmenuName, "rulesP",
-					 NULL, 0);
+					 NULL);
 	popup = XtCreatePopupShell("rulesP", simpleMenuWidgetClass,
 				   rulesb, NULL, 0);
 	{
@@ -1294,7 +1294,7 @@ KeyboardModelAndLayout(XF86SetupInfo *info)
 		    sme = XtVaCreateManagedWidget(ent->d_name, smeBSBObjectClass,
 						  popup,
 						  XtNlabel, ent->d_name,
-						  NULL, 0);
+						  NULL);
 		    XtAddCallback(sme, XtNcallback,  KeyboardRulesCallback, NULL);
 		}
 		closedir(dir);
@@ -1305,28 +1305,28 @@ KeyboardModelAndLayout(XF86SetupInfo *info)
 	XtCreateManagedWidget("labelM", labelWidgetClass, kbdml, NULL, 0);
 	modelb = XtVaCreateManagedWidget("model", menuButtonWidgetClass, kbdml,
 					 XtNmenuName, "modelP",
-					 NULL, 0);
+					 NULL);
 
 	/* LAYOUT */
 	XtCreateManagedWidget("labelL", labelWidgetClass, kbdml, NULL, 0);
 	layoutb = XtVaCreateManagedWidget("layout", menuButtonWidgetClass, kbdml,
 					  XtNmenuName, "layoutP",
 					  XtNlabel, xkb_rules->layout.desc[0],
-					  NULL, 0);
+					  NULL);
 
 	/* VARIANT */
 	XtCreateManagedWidget("labelV", labelWidgetClass, kbdml, NULL, 0);
 	variantb = XtVaCreateManagedWidget("variant", menuButtonWidgetClass, kbdml,
 					  XtNmenuName, "variantP",
 					  XtNlabel, "",
-					  NULL, 0);
+					  NULL);
 
 	/* OPTIONS */
 	XtCreateManagedWidget("labelO", labelWidgetClass, kbdml, NULL, 0);
 	optionsb = XtVaCreateManagedWidget("options", menuButtonWidgetClass, kbdml,
 					   XtNmenuName, "optionsP",
 					   XtNlabel, "",
-					   NULL, 0);
+					   NULL);
 
 	UpdateRulesPopups();
 
