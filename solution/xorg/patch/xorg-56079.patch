diff --git a/randr/rrpointer.c b/randr/rrpointer.c
index 6b934c0..ec803e9 100644
--- a/randr/rrpointer.c
+++ b/randr/rrpointer.c
@@ -52,7 +52,8 @@ RRCrtcContainsPosition (RRCrtcPtr crtc, int x, int y)
  * Find the CRTC nearest the specified position, ignoring 'skip'
  */
 static void
-RRPointerToNearestCrtc (DeviceIntPtr pDev, ScreenPtr pScreen, int x, int y, RRCrtcPtr skip)
+RRPointerToNearestCrtc(DeviceIntPtr pDev, ScreenPtr pScreen, int x, int y,
+                       RRCrtcPtr skip)
 {
     rrScrPriv (pScreen);
     int		c;
@@ -60,8 +61,7 @@ RRPointerToNearestCrtc (DeviceIntPtr pDev, ScreenPtr pScreen, int x, int y, RRCr
     int		best = 0;
     int		best_dx = 0, best_dy = 0;
 
-    for (c = 0; c < pScrPriv->numCrtcs; c++)
-    {
+    for (c = 0; c < pScrPriv->numCrtcs; c++) {
 	RRCrtcPtr   crtc = pScrPriv->crtcs[c];
 	RRModePtr   mode = crtc->mode;
 	int	    dx, dy;
@@ -88,15 +88,15 @@ RRPointerToNearestCrtc (DeviceIntPtr pDev, ScreenPtr pScreen, int x, int y, RRCr
 	else
 	    dy = 0;
 	dist = dx + dy;
-	if (!nearest || dist < best)
-	{
+        if (!nearest || dist < best) {
 	    nearest = crtc;
 	    best_dx = dx;
 	    best_dy = dy;
 	}
     }
     if (best_dx || best_dy)
-	(*pScreen->SetCursorPosition) (pDev, pScreen, x + best_dx, y + best_dy, TRUE);
+        (*pScreen->SetCursorPosition) (pDev, pScreen, x + best_dx, y + best_dy,
+                                       TRUE);
     pScrPriv->pointerCrtc = nearest;
 }
 
@@ -112,12 +112,10 @@ RRPointerMoved (ScreenPtr pScreen, int x, int y)
 	return;
     
     /* Check all CRTCs */
-    for (c = 0; c < pScrPriv->numCrtcs; c++)
-    {
+    for (c = 0; c < pScrPriv->numCrtcs; c++) {
 	RRCrtcPtr   crtc = pScrPriv->crtcs[c];
 	
-	if (RRCrtcContainsPosition (crtc, x, y))
-	{
+        if (RRCrtcContainsPosition(crtc, x, y)) {
 	    /* Remember containing CRTC */
 	    pScrPriv->pointerCrtc = crtc;
 	    return;
@@ -141,15 +139,12 @@ RRPointerScreenConfigured (ScreenPtr pScreen)
     int		x, y;
     DeviceIntPtr pDev;
 
-    for (pDev = inputInfo.devices; pDev; pDev = pDev->next)
-    {
-        if (IsPointerDevice(pDev))
-        {
+    for (pDev = inputInfo.devices; pDev; pDev = pDev->next) {
+        if (IsPointerDevice(pDev)) {
             pRoot = GetCurrentRootWindow(pDev);
             pCurrentScreen = pRoot ? pRoot->drawable.pScreen : NULL;
 
-            if (pScreen == pCurrentScreen)
-            {
+            if (pScreen == pCurrentScreen) {
                 GetSpritePosition(pDev, &x, &y);
                 RRPointerToNearestCrtc (pDev, pScreen, x, y, NULL);
             }
