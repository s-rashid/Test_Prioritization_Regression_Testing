diff --git a/hw/xquartz/quartz.h b/hw/xquartz/quartz.h
index 0a9c47a..dababcb 100644
--- a/hw/xquartz/quartz.h
+++ b/hw/xquartz/quartz.h
@@ -44,48 +44,48 @@
 /*
  * Display mode initialization
  */
-typedef void (*DisplayInitProc)(void);
-typedef Bool (*AddScreenProc)(int index, ScreenPtr pScreen);
-typedef Bool (*SetupScreenProc)(int index, ScreenPtr pScreen);
-typedef void (*InitInputProc)(int argc, char **argv);
+typedef void (*DisplayInitProc) (void);
+typedef Bool (*AddScreenProc) (int index, ScreenPtr pScreen);
+typedef Bool (*SetupScreenProc) (int index, ScreenPtr pScreen);
+typedef void (*InitInputProc) (int argc, char **argv);
 
 /*
  * Cursor functions
  */
-typedef Bool (*InitCursorProc)(ScreenPtr pScreen);
+typedef Bool (*InitCursorProc) (ScreenPtr pScreen);
 
 /*
  * Suspend and resume X11 activity
  */
-typedef void (*SuspendScreenProc)(ScreenPtr pScreen);
-typedef void (*ResumeScreenProc)(ScreenPtr pScreen);
+typedef void (*SuspendScreenProc) (ScreenPtr pScreen);
+typedef void (*ResumeScreenProc) (ScreenPtr pScreen);
 
 /*
  * Screen state change support
  */
 typedef void (*AddPseudoramiXScreensProc)
-    (int *x, int *y, int *width, int *height, ScreenPtr pScreen);
-typedef void (*UpdateScreenProc)(ScreenPtr pScreen);
+ (int *x, int *y, int *width, int *height, ScreenPtr pScreen);
+typedef void (*UpdateScreenProc) (ScreenPtr pScreen);
 
 /*
  * Rootless helper functions
  */
-typedef Bool (*IsX11WindowProc)(int windowNumber);
-typedef void (*HideWindowsProc)(Bool hide);
+typedef Bool (*IsX11WindowProc) (int windowNumber);
+typedef void (*HideWindowsProc) (Bool hide);
 
 /*
  * Rootless functions for optional export to GLX layer
  */
-typedef void * (*FrameForWindowProc)(WindowPtr pWin, Bool create);
-typedef WindowPtr (*TopLevelParentProc)(WindowPtr pWindow);
+typedef void *(*FrameForWindowProc) (WindowPtr pWin, Bool create);
+typedef WindowPtr (*TopLevelParentProc) (WindowPtr pWindow);
 typedef Bool (*CreateSurfaceProc)
-    (ScreenPtr pScreen, Drawable id, DrawablePtr pDrawable,
-     unsigned int client_id, unsigned int *surface_id,
-     unsigned int key[2], void (*notify) (void *arg, void *data),
-     void *notify_data);
+ (ScreenPtr pScreen, Drawable id, DrawablePtr pDrawable,
+  unsigned int client_id, unsigned int *surface_id,
+  unsigned int key[2], void (*notify) (void *arg, void *data),
+  void *notify_data);
 typedef Bool (*DestroySurfaceProc)
-    (ScreenPtr pScreen, Drawable id, DrawablePtr pDrawable,
-     void (*notify) (void *arg, void *data), void *notify_data);
+ (ScreenPtr pScreen, Drawable id, DrawablePtr pDrawable,
+  void (*notify) (void *arg, void *data), void *notify_data);
 
 /*
  * Quartz display mode function list
@@ -115,20 +115,20 @@ typedef struct _QuartzModeProcs {
 
 extern QuartzModeProcsPtr quartzProcs;
 
-extern Bool XQuartzFullscreenVisible; /* Are the windows visible (predicated on !rootless) */
-extern Bool XQuartzServerVisible;     /* Is the server visible ... TODO: Refactor to "active" */
+extern Bool XQuartzFullscreenVisible;   /* Are the windows visible (predicated on !rootless) */
+extern Bool XQuartzServerVisible;       /* Is the server visible ... TODO: Refactor to "active" */
 extern Bool XQuartzEnableKeyEquivalents;
-extern Bool XQuartzRootlessDefault;  /* Is our default mode rootless? */
-extern Bool XQuartzIsRootless;       /* Is our current mode rootless (or FS)? */
-extern Bool XQuartzFullscreenMenu;   /* Show the menu bar (autohide) while in FS */
+extern Bool XQuartzRootlessDefault;     /* Is our default mode rootless? */
+extern Bool XQuartzIsRootless;  /* Is our current mode rootless (or FS)? */
+extern Bool XQuartzFullscreenMenu;      /* Show the menu bar (autohide) while in FS */
 extern Bool XQuartzFullscreenDisableHotkeys;
-extern Bool XQuartzOptionSendsAlt;   /* Alt or Mode_switch? */
+extern Bool XQuartzOptionSendsAlt;      /* Alt or Mode_switch? */
 
-extern int32_t XQuartzShieldingWindowLevel; /* CGShieldingWindowLevel() or 0 */
+extern int32_t XQuartzShieldingWindowLevel;     /* CGShieldingWindowLevel() or 0 */
 
 Bool QuartzAddScreen(int index, ScreenPtr pScreen);
 Bool QuartzSetupScreen(int index, ScreenPtr pScreen);
-void QuartzInitOutput(int argc,char **argv);
+void QuartzInitOutput(int argc, char **argv);
 void QuartzInitInput(int argc, char **argv);
 void QuartzInitServer(int argc, char **argv, char **envp);
 void QuartzGiveUp(void);
