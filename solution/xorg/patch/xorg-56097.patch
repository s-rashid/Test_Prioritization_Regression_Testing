diff --git a/render/mirect.c b/render/mirect.c
index 4fb347a..357d528 100644
--- a/render/mirect.c
+++ b/render/mirect.c
@@ -37,10 +37,7 @@ static void
 miColorRects (PicturePtr    pDst,
 	      PicturePtr    pClipPict,
 	      xRenderColor  *color,
-	      int	    nRect,
-	      xRectangle    *rects,
-	      int	    xoff,
-	      int	    yoff)
+             int nRect, xRectangle *rects, int xoff, int yoff)
 {
     CARD32		pixel;
     GCPtr		pGC;
@@ -57,35 +54,31 @@ miColorRects (PicturePtr    pDst,
     tmpval[1].val = pixel;
     tmpval[2].val = pDst->subWindowMode;
     mask = GCFunction | GCForeground | GCSubwindowMode;
-    if (pClipPict->clientClipType == CT_REGION)
-    {
+    if (pClipPict->clientClipType == CT_REGION) {
 	tmpval[3].val = pDst->clipOrigin.x - xoff;
 	tmpval[4].val = pDst->clipOrigin.y - yoff;
 	mask |= GCClipXOrigin|GCClipYOrigin;
 	
 	pClip = RegionCreate(NULL, 1);
-	RegionCopy(pClip,
-		     (RegionPtr) pClipPict->clientClip);
+        RegionCopy(pClip, (RegionPtr) pClipPict->clientClip);
 	(*pGC->funcs->ChangeClip) (pGC, CT_REGION, pClip, 0);
     }
 
     ChangeGC (NullClient, pGC, mask, tmpval);
     ValidateGC (pDst->pDrawable, pGC);
-    if (xoff || yoff)
-    {
+    if (xoff || yoff) {
 	int	i;
-	for (i = 0; i < nRect; i++)
-	{
+
+        for (i = 0; i < nRect; i++) {
 	    rects[i].x -= xoff;
 	    rects[i].y -= yoff;
 	}
     }
     (*pGC->ops->PolyFillRect) (pDst->pDrawable, pGC, nRect, rects);
-    if (xoff || yoff)
-    {
+    if (xoff || yoff) {
 	int	i;
-	for (i = 0; i < nRect; i++)
-	{
+
+        for (i = 0; i < nRect; i++) {
 	    rects[i].x += xoff;
 	    rects[i].y += yoff;
 	}
@@ -96,31 +89,25 @@ miColorRects (PicturePtr    pDst,
 void
 miCompositeRects (CARD8		op,
 		  PicturePtr	pDst,
-		  xRenderColor  *color,
-		  int		nRect,
-		  xRectangle    *rects)
+                 xRenderColor * color, int nRect, xRectangle *rects)
 {
     ScreenPtr		pScreen = pDst->pDrawable->pScreen;
     
-    if (color->alpha == 0xffff)
-    {
+    if (color->alpha == 0xffff) {
 	if (op == PictOpOver)
 	    op = PictOpSrc;
     }
     if (op == PictOpClear)
 	color->red = color->green = color->blue = color->alpha = 0;
     
-    if (op == PictOpSrc || op == PictOpClear)
-    {
+    if (op == PictOpSrc || op == PictOpClear) {
 	miColorRects (pDst, pDst, color, nRect, rects, 0, 0);
 	if (pDst->alphaMap)
 	    miColorRects (pDst->alphaMap, pDst,
 			  color, nRect, rects,
-			  pDst->alphaOrigin.x,
-			  pDst->alphaOrigin.y);
+                         pDst->alphaOrigin.x, pDst->alphaOrigin.y);
     }
-    else
-    {
+    else {
 	PictFormatPtr	rgbaFormat;
 	PixmapPtr	pPixmap;
 	PicturePtr	pSrc;
@@ -163,13 +150,9 @@ miCompositeRects (CARD8		op,
 	if (!pSrc)
 	    goto bail4;
 
-	while (nRect--)
-	{
+        while (nRect--) {
 	    CompositePicture (op, pSrc, 0, pDst, 0, 0, 0, 0, 
-			      rects->x,
-			      rects->y,
-			      rects->width,
-			      rects->height);
+                             rects->x, rects->y, rects->width, rects->height);
 	    rects++;
 	}
 
