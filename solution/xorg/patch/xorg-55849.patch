diff --git a/hw/xwin/winfillsp.c b/hw/xwin/winfillsp.c
index 80f5315..f2432ed 100644
--- a/hw/xwin/winfillsp.c
+++ b/hw/xwin/winfillsp.c
@@ -34,7 +34,6 @@
 #endif
 #include "win.h"
 
-
 extern void ROP16(HDC hdc, int rop);
 
 #define TRANSLATE_COLOR(color)						\
@@ -55,9 +54,7 @@ void
 winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		       GCPtr		pGC,
 		       int		iSpans,
-		       DDXPointPtr	pPoints,
-		       int		*piWidths,
-		       int		fSorted)
+                      DDXPointPtr pPoints, int *piWidths, int fSorted)
 {
   winGCPriv(pGC);
   HBITMAP		hbmpOrig = NULL, hbmpOrigStipple = NULL;
@@ -83,13 +80,14 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
   nbox = RegionNumRects (pClip);
   pbox = RegionRects (pClip);
 
-  if (!nbox) return;
+    if (!nbox)
+        return;
 
   combined = CreateRectRgn (pbox->x1, pbox->y1, pbox->x2, pbox->y2);
-  nbox--; pbox++;
+    nbox--;
+    pbox++;
 
-  while (nbox--)
-    {
+    while (nbox--) {
       hrgn = CreateRectRgn (pbox->x1, pbox->y1, pbox->x2, pbox->y2);
       CombineRgn (combined, combined, hrgn, RGN_OR);
       DeleteObject (hrgn);
@@ -104,8 +102,7 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
   extentY2 = pextent->y2;
 
   /* Branch on the type of drawable we have */
-  switch (pDrawable->type)
-    {
+    switch (pDrawable->type) {
     case DRAWABLE_PIXMAP:
 
       SelectClipRgn (pGCPriv->hdcMem, combined);
@@ -124,14 +121,12 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		    "%08x\n", (unsigned int) pPixmapPriv->hBitmap);
       
       /* Branch on the fill type */
-      switch (pGC->fillStyle)
-	{
+        switch (pGC->fillStyle) {
 	case FillSolid:
 
           ROP16 (pGCPriv->hdcMem, pGC->alu);
 
-	  if (pDrawable->depth == 1) 
-	    {
+            if (pDrawable->depth == 1) {
 	      if (pGC->fgPixel == 0)
 		hPenOrig = SelectObject (pGCPriv->hdcMem, 
 					 GetStockObject (BLACK_PEN));
@@ -139,16 +134,14 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		hPenOrig = SelectObject (pGCPriv->hdcMem,
 					 GetStockObject (WHITE_PEN));
 	    } 
-	  else 
-	    {
+            else {
 	      fg = pGC->fgPixel;
 	      TRANSLATE_COLOR (fg);
 	      hPen = CreatePen (PS_SOLID, 0, fg);
 	      hPenOrig = SelectObject (pGCPriv->hdcMem, hPen);
 	    }
     	
-	  while (iSpans--)
-	    {
+            while (iSpans--) {
 	      fullX1 = pPoints->x;
 	      fullY1 = pPoints->y;
 	      fullX2 = fullX1 + (int) *piWidths;
@@ -211,9 +204,9 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	  SetTextColor (pGCPriv->hdcMem, fg);
 	  SetBkColor (pGCPriv->hdcMem, bg);
 
-	  while (iSpans--)
-	    {
+            while (iSpans--) {
 	      int width = pStipple->drawable.width;
+
 	      fullX1 = pPoints->x;
 	      fullY1 = pPoints->y;
 	      fullX2 = fullX1 + (int) *piWidths;
@@ -231,8 +224,7 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	      if (fullX1 >= fullX2)
 		continue;
 	
-	      for (iX = fullX1; iX < fullX2; iX += width)
-		{
+                for (iX = fullX1; iX < fullX2; iX += width) {
 		  int xoffset;
 
 		  if ((iX + pStipple->drawable.width) > fullX2)
@@ -241,7 +233,12 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		    width = pStipple->drawable.width;
 
 		  if (iX == fullX1)
-		    xoffset = (fullX1 - (pDrawable->x + (pGC->patOrg.x % pStipple->drawable.width) - pStipple->drawable.width)) % pStipple->drawable.width;
+                        xoffset =
+                            (fullX1 -
+                             (pDrawable->x +
+                              (pGC->patOrg.x % pStipple->drawable.width) -
+                              pStipple->drawable.width)) %
+                            pStipple->drawable.width;
 		  else
 		    xoffset = 0;
 
@@ -253,8 +250,11 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 			  width, 1,
 			  hdcStipple,
 			  xoffset,
-			  (fullY1 - (pDrawable->y + (pGC->patOrg.y % pStipple->drawable.height) - pStipple->drawable.height)) % pStipple->drawable.height,
-			  g_copyROP[pGC->alu]);
+                           (fullY1 -
+                            (pDrawable->y +
+                             (pGC->patOrg.y % pStipple->drawable.height) -
+                             pStipple->drawable.height)) %
+                           pStipple->drawable.height, g_copyROP[pGC->alu]);
 		}
 	    }
 
@@ -300,45 +300,36 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	   * We need to get the black/white pixels right in the
 	   * colormap. But yeah ! it's working.. 
 	   */
-	  if (pGC->bgPixel != -1 && pGC->fgPixel != -1) 
-	    {
+            if (pGC->bgPixel != -1 && pGC->fgPixel != -1) {
 	      SetTextColor (pGCPriv->hdcMem, fg);
 	      SetBkColor (pGCPriv->hdcMem, bg);
 	      BitBlt (hdcStipple,
 		      0, 0,
 		      pStipple->drawable.width, pStipple->drawable.height,
-		      hdcStipple,
-		      0, 0,
-		      0x330008);
+                       hdcStipple, 0, 0, 0x330008);
 	    } 
-	  else if (pGC->bgPixel == -1) 
-	    {
+            else if (pGC->bgPixel == -1) {
 	      SetTextColor (pGCPriv->hdcMem, fg);
 	      SetBkMode (pGCPriv->hdcMem, TRANSPARENT);
 	      BitBlt (hdcStipple,
 		      0, 0,
 		      pStipple->drawable.width, pStipple->drawable.height,
-		      hdcStipple,
-		      0, 0,
-		      0x330008);
+                       hdcStipple, 0, 0, 0x330008);
 	    } 
-	  else if (pGC->fgPixel == -1) 
-	    {
+            else if (pGC->fgPixel == -1) {
 	      SetTextColor (pGCPriv->hdcMem, bg);
 	      SetBkMode (pGCPriv->hdcMem, TRANSPARENT);
 #if 0
 	      BitBlt (hdcStipple,
 		      0, 0,
 		      pStipple->drawable.width, pStipple->drawable.height,
-		      hdcStipple,
-		      0, 0,
-		      0x330008);
+                       hdcStipple, 0, 0, 0x330008);
 #endif
 	    }
 
-	  while (iSpans--)
-	    {
+            while (iSpans--) {
 	      int width = pStipple->drawable.width;
+
 	      fullX1 = pPoints->x;
 	      fullY1 = pPoints->y;
 	      fullX2 = fullX1 + (int) *piWidths;
@@ -356,8 +347,7 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	      if (fullX1 >= fullX2)
 		continue;
 	
-	      for (iX = fullX1; iX < fullX2; iX += width)
-		{
+                for (iX = fullX1; iX < fullX2; iX += width) {
 		  int xoffset;
 
 		  if ((iX + pStipple->drawable.width) > fullX2)
@@ -366,7 +356,12 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		    width = pStipple->drawable.width;
 
 		  if (iX == fullX1)
-		    xoffset = (fullX1 - (pDrawable->x + (pGC->patOrg.x % pStipple->drawable.width) - pStipple->drawable.width)) % pStipple->drawable.width;
+                        xoffset =
+                            (fullX1 -
+                             (pDrawable->x +
+                              (pGC->patOrg.x % pStipple->drawable.width) -
+                              pStipple->drawable.width)) %
+                            pStipple->drawable.width;
 		  else
 		    xoffset = 0;
 
@@ -378,8 +373,11 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		          width, 1,
 		          hdcStipple,
 			  xoffset,
-			  (fullY1 - (pDrawable->y + (pGC->patOrg.y % pStipple->drawable.height) - pStipple->drawable.height)) % pStipple->drawable.height,
-			  g_copyROP[pGC->alu]);
+                           (fullY1 -
+                            (pDrawable->y +
+                             (pGC->patOrg.y % pStipple->drawable.height) -
+                             pStipple->drawable.height)) %
+                           pStipple->drawable.height, g_copyROP[pGC->alu]);
 		}
 	    }
 
@@ -409,9 +407,9 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	    FatalError ("winFillSpans - DRAWABLE_PIXMAP - FillTiled - "
 			"SelectObject () failed on pTilePriv->hBitmap\n");
 
-	  while (iSpans--)
-	    {
+            while (iSpans--) {
 	      int width = pTile->drawable.width;
+
 	      fullX1 = pPoints->x;
 	      fullY1 = pPoints->y;
 	      fullX2 = fullX1 + (int) *piWidths;
@@ -429,8 +427,7 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	      if (fullX1 >= fullX2)
 		continue;
 	
-	      for (iX = fullX1; iX < fullX2; iX += width)
-	      	{
+                for (iX = fullX1; iX < fullX2; iX += width) {
 		  int xoffset;
 
 		  if ((iX + pTile->drawable.width) > fullX2)
@@ -439,7 +436,11 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		    width = pTile->drawable.width;
 
 		  if (iX == fullX1)
-		    xoffset = (fullX1 - (pDrawable->x + (pGC->patOrg.x % pTile->drawable.width) - pTile->drawable.width)) % pTile->drawable.width;
+                        xoffset =
+                            (fullX1 -
+                             (pDrawable->x +
+                              (pGC->patOrg.x % pTile->drawable.width) -
+                              pTile->drawable.width)) % pTile->drawable.width;
 		  else
 		    xoffset = 0;
 
@@ -451,7 +452,10 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 			  width, 1,
 			  hdcTile,
 			  xoffset,
-			  (fullY1 - (pDrawable->y + (pGC->patOrg.y % pTile->drawable.height) - pTile->drawable.height)) % pTile->drawable.height,
+                           (fullY1 -
+                            (pDrawable->y +
+                             (pGC->patOrg.y % pTile->drawable.height) -
+                             pTile->drawable.height)) % pTile->drawable.height,
 			  g_copyROP[pGC->alu]);
 		}
 	    }
@@ -482,14 +486,12 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
       combined = NULL;
 
       /* Branch on fill style */
-      switch (pGC->fillStyle)
-	{
+        switch (pGC->fillStyle) {
 	case FillSolid:
 
           ROP16 (pGCPriv->hdc, pGC->alu);
 
-	  if (pDrawable->depth == 1) 
-	    {
+            if (pDrawable->depth == 1) {
 	      if (pGC->fgPixel == 0)
 		hPenOrig = SelectObject (pGCPriv->hdc, 
 					 GetStockObject (BLACK_PEN));
@@ -497,16 +499,14 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		hPenOrig = SelectObject (pGCPriv->hdc,
 					 GetStockObject (WHITE_PEN));
 	    } 
-	  else 
-	    {
+            else {
 	      fg = pGC->fgPixel;
 	      TRANSLATE_COLOR (fg);
 	      hPen = CreatePen (PS_SOLID, 0, fg);
 	      hPenOrig = SelectObject (pGCPriv->hdc, hPen);
 	    }
 
-	  while (iSpans--)
-	    {
+            while (iSpans--) {
 	      fullX1 = pPoints->x;
 	      fullY1 = pPoints->y;
 	      fullX2 = fullX1 + (int) *piWidths;
@@ -569,9 +569,9 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	  SetTextColor (pGCPriv->hdc, fg);
 	  SetBkColor (pGCPriv->hdc, bg);
 
-	  while (iSpans--)
-	    {
+            while (iSpans--) {
 	      int width = pStipple->drawable.width;
+
 	      fullX1 = pPoints->x;
 	      fullY1 = pPoints->y;
 	      fullX2 = fullX1 + (int) *piWidths;
@@ -589,8 +589,7 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	      if (fullX1 >= fullX2)
 		continue;
 	
-	      for (iX = fullX1; iX < fullX2; iX += width)
-		{
+                for (iX = fullX1; iX < fullX2; iX += width) {
 		  int xoffset;
 
 		  if ((iX + pStipple->drawable.width) > fullX2)
@@ -599,7 +598,12 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		    width = pStipple->drawable.width;
 
 		  if (iX == fullX1)
-		    xoffset = (fullX1 - (pDrawable->x + (pGC->patOrg.x % pStipple->drawable.width) - pStipple->drawable.width)) % pStipple->drawable.width;
+                        xoffset =
+                            (fullX1 -
+                             (pDrawable->x +
+                              (pGC->patOrg.x % pStipple->drawable.width) -
+                              pStipple->drawable.width)) %
+                            pStipple->drawable.width;
 		  else
 		    xoffset = 0;
 
@@ -611,8 +615,11 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 			  width, 1,
 			  hdcStipple,
 			  xoffset,
-			  (fullY1 - (pDrawable->y + (pGC->patOrg.y % pStipple->drawable.height) - pStipple->drawable.height)) % pStipple->drawable.height,
-			  g_copyROP[pGC->alu]);
+                           (fullY1 -
+                            (pDrawable->y +
+                             (pGC->patOrg.y % pStipple->drawable.height) -
+                             pStipple->drawable.height)) %
+                           pStipple->drawable.height, g_copyROP[pGC->alu]);
 		}
 	    }
 
@@ -658,45 +665,36 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	   * We need to get the black/white pixels right in the
 	   * colormap. But yeah ! it's working.. 
 	   */
-	  if (pGC->bgPixel != -1 && pGC->fgPixel != -1) 
-	    {
+            if (pGC->bgPixel != -1 && pGC->fgPixel != -1) {
 	      SetTextColor (pGCPriv->hdc, fg);
 	      SetBkColor (pGCPriv->hdc, bg);
 	      BitBlt (hdcStipple,
 		      0, 0,
 		      pStipple->drawable.width, pStipple->drawable.height,
-		      hdcStipple,
-		      0,0,
-		      0x330008);
+                       hdcStipple, 0, 0, 0x330008);
 	    } 
-	  else if (pGC->bgPixel == -1) 
-	    {
+            else if (pGC->bgPixel == -1) {
 	      SetTextColor (pGCPriv->hdc, fg);
 	      SetBkMode (pGCPriv->hdc, TRANSPARENT);
 	      BitBlt (hdcStipple,
 		      0, 0,
 		      pStipple->drawable.width, pStipple->drawable.height,
-		      hdcStipple,
-		      0,0,
-		      0x330008);
+                       hdcStipple, 0, 0, 0x330008);
 	    } 
-	  else if (pGC->fgPixel == -1) 
-	    {
+            else if (pGC->fgPixel == -1) {
 	      SetTextColor (pGCPriv->hdc, bg);
 	      SetBkMode (pGCPriv->hdc, TRANSPARENT);
 #if 0
 	      BitBlt (hdcStipple,
 		      0, 0,
 		      pStipple->drawable.width, pStipple->drawable.height,
-		      hdcStipple,
-		      0, 0,
-		      0x330008);
+                       hdcStipple, 0, 0, 0x330008);
 #endif
 	    }
 
-	  while (iSpans--)
-	    {
+            while (iSpans--) {
  	      int width = pStipple->drawable.width;
+
 	      fullX1 = pPoints->x;
 	      fullY1 = pPoints->y;
 	      fullX2 = fullX1 + (int) *piWidths;
@@ -714,8 +712,7 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	      if (fullX1 >= fullX2)
 		continue;
 	
-	      for (iX = fullX1; iX < fullX2; iX += width)
-		{
+                for (iX = fullX1; iX < fullX2; iX += width) {
 		  int xoffset;
 
 		  if ((iX + pStipple->drawable.width) > fullX2)
@@ -724,7 +721,12 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		    width = pStipple->drawable.width;
 
 		  if (iX == fullX1)
-		    xoffset = (fullX1 - (pDrawable->x + (pGC->patOrg.x % pStipple->drawable.width) - pStipple->drawable.width)) % pStipple->drawable.width;
+                        xoffset =
+                            (fullX1 -
+                             (pDrawable->x +
+                              (pGC->patOrg.x % pStipple->drawable.width) -
+                              pStipple->drawable.width)) %
+                            pStipple->drawable.width;
 		  else
 		    xoffset = 0;
 
@@ -736,8 +738,11 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 			  width, 1,
 			  hdcStipple,
 			  xoffset,
-			  (fullY1 - (pDrawable->y + (pGC->patOrg.y % pStipple->drawable.height) - pStipple->drawable.height)) % pStipple->drawable.height,
-			  g_copyROP[pGC->alu]);
+                           (fullY1 -
+                            (pDrawable->y +
+                             (pGC->patOrg.y % pStipple->drawable.height) -
+                             pStipple->drawable.height)) %
+                           pStipple->drawable.height, g_copyROP[pGC->alu]);
 		}
 	    }
 
@@ -764,9 +769,9 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	    FatalError ("winFillSpans - DRAWABLE_WINDOW - FillTiled - "
 			"SelectObject () failed on pTilePriv->hBitmap\n");
 
-	  while (iSpans--)
-	    {
+            while (iSpans--) {
 	      int width = pTile->drawable.width;
+
 	      fullX1 = pPoints->x;
 	      fullY1 = pPoints->y;
 	      fullX2 = fullX1 + (int) *piWidths;
@@ -784,8 +789,7 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 	      if (fullX1 >= fullX2)
 		continue;
 	
-	      for (iX = fullX1; iX < fullX2; iX += width)
-	      	{
+                for (iX = fullX1; iX < fullX2; iX += width) {
 		  int xoffset;
 
 		  if ((iX + pTile->drawable.width) > fullX2)
@@ -794,7 +798,11 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 		    width = pTile->drawable.width;
 
 		  if (iX == fullX1)
-		    xoffset = (fullX1 - (pDrawable->x + (pGC->patOrg.x % pTile->drawable.width) - pTile->drawable.width)) % pTile->drawable.width;
+                        xoffset =
+                            (fullX1 -
+                             (pDrawable->x +
+                              (pGC->patOrg.x % pTile->drawable.width) -
+                              pTile->drawable.width)) % pTile->drawable.width;
 		  else
 		    xoffset = 0;
 
@@ -806,7 +814,10 @@ winFillSpansNativeGDI (DrawablePtr	pDrawable,
 			  width, 1,
 			  pGCPriv->hdcMem,
 			  xoffset,
-			  (fullY1 - (pDrawable->y + (pGC->patOrg.y % pTile->drawable.height) - pTile->drawable.height)) % pTile->drawable.height,
+                           (fullY1 -
+                            (pDrawable->y +
+                             (pGC->patOrg.y % pTile->drawable.height) -
+                             pTile->drawable.height)) % pTile->drawable.height,
 			  g_copyROP[pGC->alu]);
 		}
 	    }
