diff --git a/hw/xfree86/common/xf86sbusBus.h b/hw/xfree86/common/xf86sbusBus.h
index 66a96e3..a4d9c6c 100644
--- a/hw/xfree86/common/xf86sbusBus.h
+++ b/hw/xfree86/common/xf86sbusBus.h
@@ -68,18 +68,24 @@ extern _X_EXPORT void xf86SbusProbe(void);
 extern _X_EXPORT sbusDevicePtr *xf86SbusInfo;
 extern _X_EXPORT struct sbus_devtable sbusDeviceTable[];
 
-extern _X_EXPORT int xf86MatchSbusInstances(const char *driverName, int sbusDevId,
-			   GDevPtr *devList, int numDevs, DriverPtr drvp,
+extern _X_EXPORT int xf86MatchSbusInstances(const char *driverName,
+                                            int sbusDevId, GDevPtr * devList,
+                                            int numDevs, DriverPtr drvp,
 			   int **foundEntities);
 extern _X_EXPORT sbusDevicePtr xf86GetSbusInfoForEntity(int entityIndex);
 extern _X_EXPORT int xf86GetEntityForSbusInfo(sbusDevicePtr psdp);
-extern _X_EXPORT void xf86SbusUseBuiltinMode(ScrnInfoPtr pScrn, sbusDevicePtr psdp);
-extern _X_EXPORT pointer xf86MapSbusMem(sbusDevicePtr psdp, unsigned long offset,
+extern _X_EXPORT void xf86SbusUseBuiltinMode(ScrnInfoPtr pScrn,
+                                             sbusDevicePtr psdp);
+extern _X_EXPORT pointer xf86MapSbusMem(sbusDevicePtr psdp,
+                                        unsigned long offset,
+                                        unsigned long size);
+extern _X_EXPORT void xf86UnmapSbusMem(sbusDevicePtr psdp, pointer addr,
 		       unsigned long size);
-extern _X_EXPORT void xf86UnmapSbusMem(sbusDevicePtr psdp, pointer addr, unsigned long size);
 extern _X_EXPORT void xf86SbusHideOsHwCursor(sbusDevicePtr psdp);
-extern _X_EXPORT void xf86SbusSetOsHwCursorCmap(sbusDevicePtr psdp, int bg, int fg);
-extern _X_EXPORT Bool xf86SbusHandleColormaps(ScreenPtr pScreen, sbusDevicePtr psdp);
+extern _X_EXPORT void xf86SbusSetOsHwCursorCmap(sbusDevicePtr psdp, int bg,
+                                                int fg);
+extern _X_EXPORT Bool xf86SbusHandleColormaps(ScreenPtr pScreen,
+                                              sbusDevicePtr psdp);
 
 extern _X_EXPORT int promRootNode;
 
@@ -90,7 +96,8 @@ extern _X_EXPORT int promGetBool(const char *prop);
 
 extern _X_EXPORT int sparcPromInit(void);
 extern _X_EXPORT void sparcPromClose(void);
-extern _X_EXPORT char * sparcPromGetProperty(sbusPromNodePtr pnode, const char *prop, int *lenp);
+extern _X_EXPORT char *sparcPromGetProperty(sbusPromNodePtr pnode,
+                                            const char *prop, int *lenp);
 extern _X_EXPORT int sparcPromGetBool(sbusPromNodePtr pnode, const char *prop);
 extern _X_EXPORT void sparcPromAssignNodes(void);
 extern _X_EXPORT char * sparcPromNode2Pathname(sbusPromNodePtr pnode);
