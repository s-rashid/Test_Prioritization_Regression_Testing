diff --git a/GL/glx/render2.c b/GL/glx/render2.c
index bc49d4f..39d0c13 100644
--- a/GL/glx/render2.c
+++ b/GL/glx/render2.c
@@ -44,7 +44,6 @@
 #include "g_disptab.h"
 #include "g_disptab_EXT.h"
 
-extern GLint __glEvalComputeK(GLenum target);
 
 void __glXDisp_Map1f(GLbyte *pc)
 {
@@ -57,7 +56,7 @@ void __glXDisp_Map1f(GLbyte *pc)
     u1 = *(GLfloat *)(pc + 4);
     u2 = *(GLfloat *)(pc + 8);
     points = (GLfloat *)(pc + 16);
-    k = __glEvalComputeK(target);
+    k = __glMap1f_size(target);
 
     glMap1f(target, u1, u2, k, order, points);
 }
@@ -77,7 +76,7 @@ void __glXDisp_Map2f(GLbyte *pc)
     v2 = *(GLfloat *)(pc + 20);
     points = (GLfloat *)(pc + 28);
 
-    k = __glEvalComputeK(target);
+    k = __glMap2f_size(target);
     ustride = vorder * k;
     vstride = k;
 
@@ -95,7 +94,7 @@ void __glXDisp_Map1d(GLbyte *pc)
 
     target = *(GLenum*) (pc + 16);
     order = *(GLint*) (pc + 20);
-    k = __glEvalComputeK(target);
+    k = __glMap1d_size(target);
 
 #ifdef __GLX_ALIGN64
     if (order < 0 || k < 0) {
@@ -138,7 +137,7 @@ void __glXDisp_Map2d(GLbyte *pc)
     target = *(GLenum *)(pc + 32);
     uorder = *(GLint *)(pc + 36);
     vorder = *(GLint *)(pc + 40);
-    k = __glEvalComputeK(target);
+    k = __glMap2d_size(target);
 
 #ifdef __GLX_ALIGN64
     if (vorder < 0 || uorder < 0 || k < 0) {
