diff --git a/mi/mispritest.h b/mi/mispritest.h
index 24ab11e..4608c4e 100644
--- a/mi/mispritest.h
+++ b/mi/mispritest.h
@@ -43,7 +43,6 @@ in this Software without prior written authorization from The Open Group.
 #endif
 # include   "damage.h"
 
-#ifdef MPX
 typedef struct {
     CursorPtr	    pCursor;
     int		    x;			/* cursor hotspot */
@@ -52,8 +51,12 @@ typedef struct {
     Bool	    isUp;		/* cursor in frame buffer */
     Bool	    shouldBeUp;		/* cursor should be displayed */
     WindowPtr	    pCacheWin;		/* window the cursor last seen in */
+    Bool	    isInCacheWin;
+    Bool	    checkPixels;	/* check colormap collision */
+    xColorItem	    colors[2];
+    ColormapPtr	    pInstalledMap;
+    ColormapPtr	    pColormap;
 } miCursorInfoRec, *miCursorInfoPtr;
-#endif
 
 /*
  * per screen information
@@ -79,18 +82,8 @@ typedef struct {
     /* os layer procedures */
     ScreenBlockHandlerProcPtr		BlockHandler;
 
-    CursorPtr	    pCursor;
-    int		    x;			/* cursor hotspot */
-    int		    y;
-    BoxRec	    saved;		/* saved area from the screen */
-    Bool	    isUp;		/* cursor in frame buffer */
-    Bool	    shouldBeUp;		/* cursor should be displayed */
-    WindowPtr	    pCacheWin;		/* window the cursor last seen in */
-    Bool	    isInCacheWin;
-    Bool	    checkPixels;	/* check colormap collision */
-    xColorItem	    colors[2];
-    ColormapPtr	    pInstalledMap;
-    ColormapPtr	    pColormap;
+    miCursorInfoPtr  cp;                 /* core pointer */
+
     VisualPtr	    pVisual;
     miSpriteCursorFuncPtr    funcs;
     DamagePtr	    pDamage;		/* damage tracking structure */
@@ -102,14 +95,14 @@ typedef struct {
 #define SOURCE_COLOR	0
 #define MASK_COLOR	1
 
-#define miSpriteIsUpTRUE(pScreen, pScreenPriv) if (!pScreenPriv->isUp) { \
-    pScreenPriv->isUp = TRUE; \
+#define miSpriteIsUpTRUE(pScreen, pScreenPriv) if (!pScreenPriv->cp->isUp) { \
+    pScreenPriv->cp->isUp = TRUE; \
     DamageRegister (&(*pScreen->GetScreenPixmap) (pScreen)->drawable, pScreenPriv->pDamage); \
 }
 
-#define miSpriteIsUpFALSE(pScreen, pScreenPriv) if (pScreenPriv->isUp) { \
+#define miSpriteIsUpFALSE(pScreen, pScreenPriv) if (pScreenPriv->cp->isUp) { \
     DamageUnregister (&(*pScreen->GetScreenPixmap) (pScreen)->drawable, pScreenPriv->pDamage); \
-    pScreenPriv->isUp = FALSE; \
+    pScreenPriv->cp->isUp = FALSE; \
 }
 
 /*
