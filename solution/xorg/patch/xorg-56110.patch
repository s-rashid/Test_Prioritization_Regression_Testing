diff --git a/test/touch.c b/test/touch.c
index 88955cb..2ec535b 100644
--- a/test/touch.c
+++ b/test/touch.c
@@ -30,7 +30,8 @@
 #include "assert.h"
 #include "scrnintstr.h"
 
-static void touch_grow_queue(void)
+static void
+touch_grow_queue(void)
 {
     DeviceIntRec dev;
     ValuatorClassRec val;
@@ -66,6 +67,7 @@ static void touch_grow_queue(void)
     /* make sure we haven't touched those */
     for (i = 0; i < size; i++) {
         DDXTouchPointInfoPtr t = &dev.last.touches[i];
+
         assert(t->active == TRUE);
         assert(t->ddx_id == i);
         assert(t->client_id == i * 2);
@@ -74,13 +76,15 @@ static void touch_grow_queue(void)
     /* make sure those are zero-initialized */
     for (i = size; i < new_size; i++) {
         DDXTouchPointInfoPtr t = &dev.last.touches[i];
+
         assert(t->active == FALSE);
         assert(t->client_id == 0);
         assert(t->ddx_id == 0);
     }
 }
 
-static void touch_find_ddxid(void)
+static void
+touch_find_ddxid(void)
 {
     DeviceIntRec dev;
     DDXTouchPointInfoPtr ti;
@@ -99,12 +103,10 @@ static void touch_find_ddxid(void)
     inputInfo.devices = &dev;
     assert(dev.last.touches);
 
-
     dev.last.touches[0].active = TRUE;
     dev.last.touches[0].ddx_id = 10;
     dev.last.touches[0].client_id = 20;
 
-
     /* existing */
     ti = TouchFindByDDXID(&dev, 10, FALSE);
     assert(ti == &dev.last.touches[0]);
@@ -148,7 +150,8 @@ static void touch_find_ddxid(void)
     assert(ti == &dev.last.touches[size]);
 }
 
-static void touch_begin_ddxtouch(void)
+static void
+touch_begin_ddxtouch(void)
 {
     DeviceIntRec dev;
     DDXTouchPointInfoPtr ti;
@@ -191,7 +194,8 @@ static void touch_begin_ddxtouch(void)
     last_client_id = ti->client_id;
 }
 
-static void touch_begin_touch(void)
+static void
+touch_begin_touch(void)
 {
     DeviceIntRec dev;
     TouchClassRec touch;
@@ -231,7 +235,8 @@ static void touch_begin_touch(void)
     assert(touch.num_touches == 1);
 }
 
-static void touch_init(void)
+static void
+touch_init(void)
 {
     DeviceIntRec dev;
     Atom labels[2] = {0};
@@ -256,9 +261,8 @@ static void touch_init(void)
     assert(dev.touch);
 }
 
-
-
-int main(int argc, char** argv)
+int
+main(int argc, char **argv)
 {
     touch_grow_queue();
     touch_find_ddxid();
