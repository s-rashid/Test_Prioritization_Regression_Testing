diff --git a/hw/xfree86/ddc/print_edid.c b/hw/xfree86/ddc/print_edid.c
index ff0b39c..1faae1e 100644
--- a/hw/xfree86/ddc/print_edid.c
+++ b/hw/xfree86/ddc/print_edid.c
@@ -334,29 +334,44 @@ print_detailed_timings(int scrnIndex, struct detailed_timings *t)
     }
 }
 
+/* This function handle all detailed patchs,
+ * including EDID and EDID-extension
+ */
+struct det_print_parameter{
+  xf86MonPtr m;
+  int index;
+  ddc_quirk_t quirks;
+};
+
 static void
-print_detailed_monitor_section(int scrnIndex,
-			       struct detailed_monitor_section *m)
+handle_detailed_print(struct detailed_monitor_section *det_mon,
+                      void *data)
 {
-    int i,j;
+    int j, scrnIndex;
+    struct det_print_parameter *p;
+
+    p = (struct det_print_parameter *)data;
+    scrnIndex = p->m->scrnIndex;
+    xf86DetTimingApplyQuirks(det_mon,p->quirks,
+                             p->m->features.hsize,
+                             p->m->features.vsize);
   
-    for (i=0;i<DET_TIMINGS;i++) {
-	switch (m[i].type) {
+    switch (det_mon->type) {
 	case DT:
-	    print_detailed_timings(scrnIndex,&m[i].section.d_timings);
+        print_detailed_timings(scrnIndex,&det_mon->section.d_timings);
 	    break;
 	case DS_SERIAL:
-	    xf86DrvMsg(scrnIndex,X_INFO,"Serial No: %s\n",m[i].section.serial);
+        xf86DrvMsg(scrnIndex,X_INFO,"Serial No: %s\n",det_mon->section.serial);
 	    break;
 	case DS_ASCII_STR:
-	    xf86DrvMsg(scrnIndex,X_INFO," %s\n",m[i].section.ascii_data);
+        xf86DrvMsg(scrnIndex,X_INFO," %s\n",det_mon->section.ascii_data);
 	    break;
 	case DS_NAME:
-	    xf86DrvMsg(scrnIndex,X_INFO,"Monitor name: %s\n",m[i].section.name);
+        xf86DrvMsg(scrnIndex,X_INFO,"Monitor name: %s\n",det_mon->section.name);
 	    break;
 	case DS_RANGES:
 	{
-	    struct monitor_ranges *r = &m[i].section.ranges;
+        struct monitor_ranges *r = &det_mon->section.ranges;
 	    xf86DrvMsg(scrnIndex,X_INFO,
 		       "Ranges: V min: %i V max: %i Hz, H min: %i H max: %i kHz,",
 		       r->min_v, r->max_v, r->min_h, r->max_h);
@@ -418,19 +433,21 @@ print_detailed_monitor_section(int scrnIndex,
 	}
 	case DS_STD_TIMINGS:
 	    for (j = 0; j<5; j++) 
-		xf86DrvMsg(scrnIndex,X_INFO,"#%i: hsize: %i  vsize %i  refresh: %i  "
-			   "vid: %i\n",i,m[i].section.std_t[i].hsize,
-			   m[i].section.std_t[j].vsize,m[i].section.std_t[j].refresh,
-			   m[i].section.std_t[j].id);
+	    xf86DrvMsg(scrnIndex,X_INFO,
+		    "#%i: hsize: %i  vsize %i  refresh: %i  "
+		    "vid: %i\n",p->index ,det_mon->section.std_t[j].hsize,
+		    det_mon->section.std_t[j].vsize,
+		    det_mon->section.std_t[j].refresh,
+		    det_mon->section.std_t[j].id);
 	    break;
 	case DS_WHITE_P:
 	    for (j = 0; j<2; j++)
-		if (m[i].section.wp[j].index != 0)
+        if (det_mon->section.wp[j].index != 0)
 		    xf86DrvMsg(scrnIndex,X_INFO,
 			       "White point %i: whiteX: %f, whiteY: %f; gamma: %f\n",
-			       m[i].section.wp[j].index,m[i].section.wp[j].white_x,
-			       m[i].section.wp[j].white_y,
-			       m[i].section.wp[j].white_gamma);
+                       det_mon->section.wp[j].index,det_mon->section.wp[j].white_x,
+                       det_mon->section.wp[j].white_y,
+                       det_mon->section.wp[j].white_gamma);
 	    break;
 	case DS_CMD:
 	    xf86DrvMsg(scrnIndex, X_INFO,
@@ -439,7 +456,7 @@ print_detailed_monitor_section(int scrnIndex,
 	case DS_CVT:
 	    xf86DrvMsg(scrnIndex, X_INFO,
 		       "CVT 3-byte-code modes:\n");
-	    print_cvt_timings(scrnIndex, m[i].section.cvt);
+        print_cvt_timings(scrnIndex, det_mon->section.cvt);
 	    break;
 	case DS_EST_III:
 	    xf86DrvMsg(scrnIndex, X_INFO,
@@ -449,12 +466,13 @@ print_detailed_monitor_section(int scrnIndex,
 	default:
 	    break;
 	}
-	if (m[i].type >= DS_VENDOR && m[i].type <= DS_VENDOR_MAX) {
+    if (det_mon->type >= DS_VENDOR && det_mon->type <= DS_VENDOR_MAX) {
 	    xf86DrvMsg(scrnIndex, X_INFO,
 		       "Unknown vendor-specific block %hx\n",
-		       m[i].type - DS_VENDOR);
-	}
+                   det_mon->type - DS_VENDOR);
     }
+
+    p->index = p->index + 1;
 }
   
 static void
@@ -470,6 +488,7 @@ xf86PrintEDID(xf86MonPtr m)
 {
     CARD16 i, j, n;
     char buf[EDID_WIDTH * 2 + 1];
+    struct det_print_parameter p;
 
     if (!m) return NULL;
 
@@ -478,7 +497,12 @@ xf86PrintEDID(xf86MonPtr m)
     print_display(m->scrnIndex, &m->features, &m->ver);
     print_established_timings(m->scrnIndex, &m->timings1);
     print_std_timings(m->scrnIndex, m->timings2);
-    print_detailed_monitor_section(m->scrnIndex, m->det_mon);
+    p.m = m;
+    p.index = 0;
+    p.quirks = xf86DDCDetectQuirks(m->scrnIndex, m, FALSE);
+    xf86ForEachDetailedBlock(m,
+                             handle_detailed_print ,
+                             &p);
     print_number_sections(m->scrnIndex, m->no_sections);
 
     /* extension block section stuff */
