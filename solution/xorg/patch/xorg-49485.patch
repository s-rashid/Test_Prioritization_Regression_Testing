diff --git a/hw/xfree86/xaa/xaaPCache.c b/hw/xfree86/xaa/xaaPCache.c
index 7e3011b..e78a6f8 100644
--- a/hw/xfree86/xaa/xaaPCache.c
+++ b/hw/xfree86/xaa/xaaPCache.c
@@ -65,7 +65,7 @@ Enlist(CacheLinkPtr link, int x, int y, int w, int h)
 {
     CacheLinkPtr newLink;
 
-    newLink = xalloc(sizeof(CacheLink));
+    newLink = malloc(sizeof(CacheLink));
     newLink->next = link;
     newLink->x = x; newLink->y = y;
     newLink->w = w; newLink->h = h;	
@@ -80,7 +80,7 @@ Delist(CacheLinkPtr link) {
 
     if(link) {
 	ret = link->next;
-	xfree(link);
+	free(link);
     }    
     return ret;
 }
@@ -94,7 +94,7 @@ FreeList(CacheLinkPtr link) {
     while(link) {
 	tmp = link;
 	link = link->next;
-	xfree(tmp);
+	free(tmp);
     }
 }
 
@@ -145,19 +145,19 @@ FreePixmapCachePrivate(XAAPixmapCachePrivatePtr pPriv)
     if(!pPriv) return;
 
     if(pPriv->Info512)
-	xfree(pPriv->Info512);
+	free(pPriv->Info512);
     if(pPriv->Info256)
-	xfree(pPriv->Info256);
+	free(pPriv->Info256);
     if(pPriv->Info128)
-	xfree(pPriv->Info128);
+	free(pPriv->Info128);
     if(pPriv->InfoColor)
-	xfree(pPriv->InfoColor);
+	free(pPriv->InfoColor);
     if(pPriv->InfoMono)
-	xfree(pPriv->InfoMono);
+	free(pPriv->InfoMono);
     if(pPriv->InfoPartial)
-	xfree(pPriv->InfoPartial);
+	free(pPriv->InfoPartial);
      
-    xfree(pPriv);
+    free(pPriv);
 }
 
 void
@@ -212,7 +212,7 @@ ThinOutPartials(
 	    pCur->next = List8; List8 = pCur;
 	    Num8++;
 	} else {
-	   xfree(pCur);
+	   free(pCur);
 	}
 
 	pCur = next;
@@ -477,7 +477,7 @@ ConvertSomePartialsTo8x8(
 		    }	
 		}
 	   }	
-	   xfree(pCur);
+	   free(pCur);
 	}
 
 	pCur = next;
@@ -955,7 +955,7 @@ XAAInitPixmapCache(
     }
 
 
-    pCachePriv = xcalloc(1,sizeof(XAAPixmapCachePrivate));
+    pCachePriv = calloc(1,sizeof(XAAPixmapCachePrivate));
     if(!pCachePriv) {
 	if(Num512) FreeList(List512);
 	if(Num256) FreeList(List256);
@@ -969,21 +969,21 @@ XAAInitPixmapCache(
     infoRec->PixmapCachePrivate = (char*)pCachePriv;
 
     if(Num512) {
-	pCachePriv->Info512 = xcalloc(Num512,sizeof(XAACacheInfoRec));
+	pCachePriv->Info512 = calloc(Num512,sizeof(XAACacheInfoRec));
 	if(!pCachePriv->Info512) Num512 = 0;
 	if(Num512) TransferList(List512, pCachePriv->Info512, Num512);
 	FreeList(List512);
     	pCachePriv->Num512x512 = Num512;
     }
     if(Num256) {
-	pCachePriv->Info256 = xcalloc(Num256, sizeof(XAACacheInfoRec));
+	pCachePriv->Info256 = calloc(Num256, sizeof(XAACacheInfoRec));
 	if(!pCachePriv->Info256) Num256 = 0;
 	if(Num256) TransferList(List256, pCachePriv->Info256, Num256);
 	FreeList(List256);
     	pCachePriv->Num256x256 = Num256;
     }
     if(Num128) {
-	pCachePriv->Info128 = xcalloc(Num128, sizeof(XAACacheInfoRec));
+	pCachePriv->Info128 = calloc(Num128, sizeof(XAACacheInfoRec));
 	if(!pCachePriv->Info128) Num128 = 0;
 	if(Num128) TransferList(List128, pCachePriv->Info128, Num128);
 	FreeList(List128);
@@ -991,7 +991,7 @@ XAAInitPixmapCache(
     }
 
     if(NumPartial) {
-	pCachePriv->InfoPartial = xcalloc(NumPartial, sizeof(XAACacheInfoRec));
+	pCachePriv->InfoPartial = calloc(NumPartial, sizeof(XAACacheInfoRec));
 	if(!pCachePriv->InfoPartial) NumPartial = 0;
 	if(NumPartial) 
 	    TransferList(ListPartial, pCachePriv->InfoPartial, NumPartial);
@@ -1000,7 +1000,7 @@ XAAInitPixmapCache(
     }
 
     if(NumColor) {
-	pCachePriv->InfoColor = xcalloc(NumColor, sizeof(XAACacheInfoRec));
+	pCachePriv->InfoColor = calloc(NumColor, sizeof(XAACacheInfoRec));
 	if(!pCachePriv->InfoColor) NumColor = 0;
 	if(NumColor) TransferList(ListColor, pCachePriv->InfoColor, NumColor);
 	FreeList(ListColor);
@@ -1008,7 +1008,7 @@ XAAInitPixmapCache(
     }
 
     if(NumMono) {
-	pCachePriv->InfoMono = xcalloc(NumMono, sizeof(XAACacheInfoRec));
+	pCachePriv->InfoMono = calloc(NumMono, sizeof(XAACacheInfoRec));
 	if(!pCachePriv->InfoMono) NumMono = 0;
 	if(NumMono) TransferList(ListMono, pCachePriv->InfoMono, NumMono);
 	FreeList(ListMono);
@@ -1557,7 +1557,7 @@ XAACacheMonoStipple(ScrnInfoPtr pScrn, PixmapPtr pPix)
 
    pad = BitmapBytePad(pCache->w * bpp);
    dwords = bytes_to_int32(pad);
-   dstPtr = data = (unsigned char*)xalloc(pad * pCache->h);
+   dstPtr = data = (unsigned char*)malloc(pad * pCache->h);
    srcPtr = (unsigned char*)pPix->devPrivate.ptr;
 
    if(infoRec->ScreenToScreenColorExpandFillFlags & BIT_ORDER_IN_BYTE_MSBFIRST)
@@ -1588,7 +1588,7 @@ XAACacheMonoStipple(ScrnInfoPtr pScrn, PixmapPtr pPix)
 	pScrn, pCache->x, pCache->y, pCache->w, pCache->h, data,
 	pad, bpp, pScrn->depth);
 
-   xfree(data);
+   free(data);
 
    return pCache;
 }
@@ -1970,7 +1970,7 @@ XAAWriteMono8x8PatternToCache(
 
    pad = BitmapBytePad(pCache->w * pScrn->bitsPerPixel);
 
-   data = (unsigned char*)xalloc(pad * pCache->h);
+   data = (unsigned char*)malloc(pad * pCache->h);
    if(!data) return;
 
    if(infoRec->Mono8x8PatternFillFlags & HARDWARE_PATTERN_PROGRAMMED_ORIGIN) {
@@ -1994,7 +1994,7 @@ XAAWriteMono8x8PatternToCache(
    (*infoRec->WritePixmapToCache)(pScrn, pCache->x, pCache->y, 
 	pCache->w, pCache->h, data, pad, pScrn->bitsPerPixel, pScrn->depth);
 
-   xfree(data);
+   free(data);
 }
 
 void
@@ -2015,7 +2015,7 @@ XAAWriteColor8x8PatternToCache(
    if(pixPriv->flags & REDUCIBLE_TO_2_COLOR) {
 	CARD32* ptr;
 	pad = BitmapBytePad(pCache->w);
-	data = (unsigned char*)xalloc(pad * pCache->h);
+	data = (unsigned char*)malloc(pad * pCache->h);
 	if(!data) return;
 
 	if(infoRec->Color8x8PatternFillFlags & 
@@ -2040,7 +2040,7 @@ XAAWriteColor8x8PatternToCache(
 	(*infoRec->WriteBitmapToCache)(pScrn, pCache->x, pCache->y, 
 		pCache->w, pCache->h, data, pad, pCache->fg, pCache->bg);
 
-   	xfree(data);
+        free(data);
 	return;
    } 
 
@@ -2049,7 +2049,7 @@ XAAWriteColor8x8PatternToCache(
    w = min(8,pPix->drawable.width);
    pad = BitmapBytePad(pCache->w * pScrn->bitsPerPixel);
 
-   data = (unsigned char*)xalloc(pad * pCache->h);
+   data = (unsigned char*)malloc(pad * pCache->h);
    if(!data) return;
 
    /* Write and expand horizontally. */
@@ -2088,7 +2088,7 @@ XAAWriteColor8x8PatternToCache(
    (*infoRec->WritePixmapToCache)(pScrn, pCache->x, pCache->y, 
 	pCache->w, pCache->h, data, pad, pScrn->bitsPerPixel, pScrn->depth);
 
-   xfree(data);   
+   free(data);
 }
 
 
