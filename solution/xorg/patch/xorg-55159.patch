diff --git a/glx/glapi.h b/glx/glapi.h
index 27395d8..bad791e 100644
--- a/glx/glapi.h
+++ b/glx/glapi.h
@@ -22,7 +22,6 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-
 /**
  * \mainpage Mesa GL API Module
  *
@@ -40,7 +39,6 @@
  * with the X/DRI libGL also.
  */
 
-
 #ifndef _GLAPI_H
 #define _GLAPI_H
 
@@ -50,14 +48,12 @@
 #include "GL/glext.h"
 #include "glthread.h"
 
-
 struct _glapi_table;
 
 typedef void (*_glapi_proc)(void); /* generic function pointer */
 
 typedef void (*_glapi_warning_func)(void *ctx, const char *str, ...);
 
-
 #if defined(USE_MGL_NAMESPACE)
 #define _glapi_set_dispatch _mglapi_set_dispatch
 #define _glapi_get_dispatch _mglapi_get_dispatch
@@ -67,13 +63,11 @@ typedef void (*_glapi_warning_func)(void *ctx, const char *str, ...);
 #define _glapi_Dispatch _mglapi_Dispatch
 #endif
 
-
 /*
  * Number of extension functions which we can dynamically add at runtime.
  */
 #define MAX_EXTENSION_FUNCS 300
 
-
 /**
  ** Define the GET_CURRENT_CONTEXT() macro.
  ** \param C local variable which will hold the current context.
@@ -100,7 +94,6 @@ extern struct _glapi_table *_glapi_Dispatch;
 
 #endif /* defined (GLX_USE_TLS) */
 
-
 /**
  ** GL API public functions
  **/
@@ -111,14 +104,12 @@ _glapi_check_multithread(void);
 extern void
 _glapi_set_context(void *context);
 
-extern void *
-_glapi_get_context(void);
+extern void *_glapi_get_context(void);
 
 extern void
 _glapi_set_dispatch(struct _glapi_table *dispatch);
 
-extern struct _glapi_table *
-_glapi_get_dispatch(void);
+extern struct _glapi_table *_glapi_get_dispatch(void);
 
 extern int
 _glapi_begin_dispatch_override(struct _glapi_table *override);
@@ -126,20 +117,19 @@ _glapi_begin_dispatch_override(struct _glapi_table *override);
 extern void
 _glapi_end_dispatch_override(int layer);
 
-struct _glapi_table *
-_glapi_get_override_dispatch(int layer);
+struct _glapi_table *_glapi_get_override_dispatch(int layer);
 
-extern GLuint
-_glapi_get_dispatch_table_size(void);
+extern GLuint _glapi_get_dispatch_table_size(void);
 
 extern int
+
 _glapi_add_dispatch( const char * const * function_names,
 		     const char * parameter_signature );
 
-extern _glapi_proc
-_glapi_get_proc_address(const char *funcName);
+extern _glapi_proc _glapi_get_proc_address(const char *funcName);
 
-extern struct _glapi_table *
-_glapi_create_table_from_handle(void *handle, const char *symbol_prefix);
+extern struct _glapi_table *_glapi_create_table_from_handle(void *handle,
+                                                            const char
+                                                            *symbol_prefix);
 
 #endif
