diff --git a/fb/fbutil.c b/fb/fbutil.c
index 5e23297..2ca80d1 100644
--- a/fb/fbutil.c
+++ b/fb/fbutil.c
@@ -32,8 +32,7 @@ fbReplicatePixel (Pixel p, int bpp)
     FbBits  b = p;
     
     b &= FbFullMask (bpp);
-    while (bpp < FB_UNIT)
-    {
+    while (bpp < FB_UNIT) {
 	b |= b << bpp;
 	bpp <<= 1;
     }
@@ -45,8 +44,7 @@ fbReduceRasterOp (int rop, FbBits fg, FbBits pm, FbBits *andp, FbBits *xorp)
 {
     FbBits	and, xor;
 
-    switch (rop)
-    {
+    switch (rop) {
     default:
     case GXclear:	    /* 0 0 0 0 */
     	and = 0;
@@ -151,7 +149,6 @@ const FbMergeRopRec FbMergeRopBits[16] = {
 
 #define Mask(x,w)	BitsMask((x)*(w),(w))
 
-
 #define SelMask(b,n,w)	((((b) >> n) & 1) * Mask(n,w))
 
 #define C1(b,w) \
@@ -183,10 +180,13 @@ const FbMergeRopRec FbMergeRopBits[16] = {
 const FbBits fbStipple4Bits[16] = {
     C4(  0,4), C4(  1,4), C4(  2,4), C4(  3,4), C4(  4,4), C4(  5,4),
     C4(  6,4), C4(  7,4), C4(  8,4), C4(  9,4), C4( 10,4), C4( 11,4),
-    C4( 12,4), C4( 13,4), C4( 14,4), C4( 15,4),};
+    C4(12, 4), C4(13, 4), C4(14, 4), C4(15, 4),
+};
+
 const FbBits fbStipple2Bits[4] = {
     C2(  0,8), C2(  1,8), C2(  2,8), C2(  3,8),
 };
+
 const FbBits fbStipple1Bits[2] = {
     C1(  0,16), C1(  1,16),
 };
@@ -238,13 +238,17 @@ const FbBits fbStipple8Bits[256] = {
     C8(246,4), C8(247,4), C8(248,4), C8(249,4), C8(250,4), C8(251,4),
     C8(252,4), C8(253,4), C8(254,4), C8(255,4),
 };
+
 const FbBits fbStipple4Bits[16] = {
     C4(  0,8), C4(  1,8), C4(  2,8), C4(  3,8), C4(  4,8), C4(  5,8),
     C4(  6,8), C4(  7,8), C4(  8,8), C4(  9,8), C4( 10,8), C4( 11,8),
-    C4( 12,8), C4( 13,8), C4( 14,8), C4( 15,8),};
+    C4(12, 8), C4(13, 8), C4(14, 8), C4(15, 8),
+};
+
 const FbBits fbStipple2Bits[4] = {
     C2(  0,16), C2(  1,16), C2(  2,16), C2(  3,16),
 };
+
 const FbBits fbStipple1Bits[2] = {
     C1(  0,32), C1(  1,32),
 };
@@ -295,6 +299,7 @@ const FbBits fbStipple16Bits[256] = {
     C8(246,4), C8(247,4), C8(248,4), C8(249,4), C8(250,4), C8(251,4),
     C8(252,4), C8(253,4), C8(254,4), C8(255,4),
 };
+
 const FbBits fbStipple8Bits[256] = {
     C8(  0,8), C8(  1,8), C8(  2,8), C8(  3,8), C8(  4,8), C8(  5,8),
     C8(  6,8), C8(  7,8), C8(  8,8), C8(  9,8), C8( 10,8), C8( 11,8),
@@ -340,13 +345,17 @@ const FbBits fbStipple8Bits[256] = {
     C8(246,8), C8(247,8), C8(248,8), C8(249,8), C8(250,8), C8(251,8),
     C8(252,8), C8(253,8), C8(254,8), C8(255,8),
 };
+
 const FbBits fbStipple4Bits[16] = {
     C4(  0,16), C4(  1,16), C4(  2,16), C4(  3,16), C4(  4,16), C4(  5,16),
     C4(  6,16), C4(  7,16), C4(  8,16), C4(  9,16), C4( 10,16), C4( 11,16),
-    C4( 12,16), C4( 13,16), C4( 14,16), C4( 15,16),};
+    C4(12, 16), C4(13, 16), C4(14, 16), C4(15, 16),
+};
+
 const FbBits fbStipple2Bits[4] = {
     C2(  0,32), C2(  1,32), C2(  2,32), C2(  3,32),
 };
+
 #define fbStipple1Bits 0
 #endif
 const FbBits	* const fbStippleTable[] = {
