diff --git a/Xi/opendev.c b/Xi/opendev.c
index 54a6dda..6361068 100644
--- a/Xi/opendev.c
+++ b/Xi/opendev.c
@@ -1,5 +1,3 @@
-/* $Xorg: opendev.c,v 1.4 2001/02/09 02:04:34 xorgcvs Exp $ */
-
 /************************************************************
 
 Copyright 1989, 1998  The Open Group
@@ -45,7 +43,6 @@ ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 SOFTWARE.
 
 ********************************************************/
-/* $XFree86: xc/programs/Xserver/Xi/opendev.c,v 3.2 2001/01/17 22:13:25 dawes Exp $ */
 
 /***********************************************************************
  *
@@ -111,19 +108,16 @@ ProcXOpenDevice(register ClientPtr client)
     REQUEST_SIZE_MATCH(xOpenDeviceReq);
 
     if (stuff->deviceid == inputInfo.pointer->id || 
-	stuff->deviceid == inputInfo.keyboard->id)
-	{
+	stuff->deviceid == inputInfo.keyboard->id) {
 	SendErrorToClient(client, IReqCode, X_OpenDevice, 0, BadDevice);
         return Success;
 	}
 
-    if ((dev = LookupDeviceIntRec(stuff->deviceid)) == NULL) /* not open */
-	{
+    if ((dev = LookupDeviceIntRec(stuff->deviceid)) == NULL) {	/* not open */
         for (dev=inputInfo.off_devices; dev; dev=dev->next)
 	    if (dev->id == stuff->deviceid)
 		break;
-	if (dev == NULL)
-	    {
+	if (dev == NULL) {
 	    SendErrorToClient(client, IReqCode, X_OpenDevice, 0, BadDevice);
 	    return Success;
 	    }
@@ -131,8 +125,7 @@ ProcXOpenDevice(register ClientPtr client)
 	}
 
     OpenInputDevice (dev, client, &status);
-    if (status != Success)
-	{
+    if (status != Success) {
 	SendErrorToClient(client, IReqCode, X_OpenDevice, 0, status);
 	return Success;
 	}
@@ -142,34 +135,28 @@ ProcXOpenDevice(register ClientPtr client)
     rep.repType = X_Reply;
     rep.RepType = X_OpenDevice;
     rep.sequenceNumber = client->sequence;
-    if (dev->key != NULL)
-	{
+    if (dev->key != NULL) {
 	evbase[j].class = KeyClass;
 	evbase[j++].event_type_base = event_base[KeyClass];
 	}
-    if (dev->button != NULL)
-	{
+    if (dev->button != NULL) {
 	evbase[j].class = ButtonClass;
 	evbase[j++].event_type_base = event_base[ButtonClass];
 	}
-    if (dev->valuator != NULL)
-	{
+    if (dev->valuator != NULL) {
 	evbase[j].class = ValuatorClass;
 	evbase[j++].event_type_base = event_base[ValuatorClass];
 	}
     if (dev->kbdfeed != NULL || dev->ptrfeed != NULL || dev->leds != NULL ||
-	dev->intfeed != NULL || dev->bell != NULL || dev->stringfeed != NULL)
-	{
+	dev->intfeed != NULL || dev->bell != NULL || dev->stringfeed != NULL) {
 	evbase[j].class = FeedbackClass;
 	evbase[j++].event_type_base = event_base[FeedbackClass];
 	}
-    if (dev->focus != NULL)
-	{
+    if (dev->focus != NULL) {
 	evbase[j].class = FocusClass;
 	evbase[j++].event_type_base = event_base[FocusClass];
 	}
-    if (dev->proximity != NULL)
-	{
+    if (dev->proximity != NULL) {
 	evbase[j].class = ProximityClass;
 	evbase[j++].event_type_base = event_base[ProximityClass];
 	}
