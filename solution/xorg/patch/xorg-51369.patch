diff --git a/hw/xfree86/common/xf86Bus.c b/hw/xfree86/common/xf86Bus.c
index 623b130..3b08968 100644
--- a/hw/xfree86/common/xf86Bus.c
+++ b/hw/xfree86/common/xf86Bus.c
@@ -497,32 +497,6 @@ xf86AccessLeave(void)
 }
 
 /*
- * xf86EnterServerState() -- set state the server is in.
- */
-
-typedef enum { TRI_UNSET, TRI_TRUE, TRI_FALSE } TriState;
-
-void
-xf86EnterServerState(xf86State state)
-{
-    static int sigio_state;
-    static TriState sigio_blocked = TRI_UNSET;
-
-    /*
-     * This is a good place to block SIGIO during SETUP state. SIGIO should be
-     * blocked in SETUP state otherwise (u)sleep() might get interrupted
-     * early. We take care not to call xf86BlockSIGIO() twice.
-     */
-    if ((state == SETUP) && (sigio_blocked != TRI_TRUE)) {
-        sigio_state = xf86BlockSIGIO();
-	sigio_blocked = TRI_TRUE;
-    } else if ((state == OPERATING) && (sigio_blocked != TRI_UNSET)) {
-        xf86UnblockSIGIO(sigio_state);
-        sigio_blocked = TRI_FALSE;
-    }
-}
-
-/*
  * xf86PostProbe() -- Allocate all non conflicting resources
  * This function gets called by xf86Init().
  */
@@ -544,13 +518,6 @@ xf86PostProbe(void)
 	    xf86Entities[i]->entityInit(i,xf86Entities[i]->private);
 }
 
-void
-xf86PostScreenInit(void)
-{
-    xf86VGAarbiterWrapFunctions();
-    xf86EnterServerState(OPERATING);
-}
-
 int
 xf86GetLastScrnFlag(int entityIndex)
 {
