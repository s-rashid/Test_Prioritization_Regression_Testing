diff --git a/hw/xfree86/xaa/xaaWideLine.c b/hw/xfree86/xaa/xaaWideLine.c
index 79a6159..b8a53c1 100644
--- a/hw/xfree86/xaa/xaaWideLine.c
+++ b/hw/xfree86/xaa/xaaWideLine.c
@@ -44,7 +44,6 @@ Original mi code written by Keith Packard.
   if(hardClip) (*infoRec->SubsequentSolidFillRect)(pScrn, x, y, w, 1); \
   else XAASpanHelper(pScrn, x, y, w)
 
-
 #define CLIPSTEPEDGE(edgey,edge,edgeleft) \
     if (ybase == edgey) { \
 	if (edgeleft) { \
@@ -82,17 +81,22 @@ XAAFillRectHelper(ScrnInfoPtr pScrn, int x1, int y1, int dx, int dy)
    int x2 = x1 + dx;
    int y2 = y1 + dy;
 	
-   if(x1 < extents->x1) x1 = extents->x1;
-   if(x2 >= extents->x2) x2 = extents->x2;
-   if((dx = x2 - x1)<1) return;
-   if(y1 < extents->y1) y1 = extents->y1;
-   if(y2 >= extents->y2) y2 = extents->y2;
-   if((dy = y2 - y1)<1) return;
+    if (x1 < extents->x1)
+        x1 = extents->x1;
+    if (x2 >= extents->x2)
+        x2 = extents->x2;
+    if ((dx = x2 - x1) < 1)
+        return;
+    if (y1 < extents->y1)
+        y1 = extents->y1;
+    if (y2 >= extents->y2)
+        y2 = extents->y2;
+    if ((dy = y2 - y1) < 1)
+        return;
 
    (*infoRec->SubsequentSolidFillRect)(pScrn, x1, y1, dx, dy);
 }
 
-
 static void 
 XAASpanHelper(ScrnInfoPtr pScrn, int x1, int y, int width)
 {
@@ -100,11 +104,14 @@ XAASpanHelper(ScrnInfoPtr pScrn, int x1, int y, int width)
    BoxPtr extents = infoRec->ClipBox;
     int x2;
 
-    if((y < extents->y1) || (y >= extents->y2)) return;
+    if ((y < extents->y1) || (y >= extents->y2))
+        return;
 
     x2 = x1 + width;
-    if(x1 < extents->x1) x1 = extents->x1;
-    if(x2 > extents->x2) x2 = extents->x2;
+    if (x1 < extents->x1)
+        x1 = extents->x1;
+    if (x2 > extents->x2)
+        x2 = extents->x2;
     width = x2 - x1;	
 
     if(width > 0)	
@@ -125,11 +132,8 @@ XAASpanHelper(ScrnInfoPtr pScrn, int x1, int y, int width)
 	   } 	 					\
 }
 
-
 static void
-XAAFillPolyHelper (
-    GCPtr	pGC,
-    int		y,			/* start y coordinate */
+XAAFillPolyHelper(GCPtr pGC, int y,     /* start y coordinate */
     int		overall_height,		/* height of entire segment */
     PolyEdgePtr	left, PolyEdgePtr right,
     int	left_count, int right_count )
@@ -190,8 +194,9 @@ XAAFillPolyHelper (
 	    left_DX = (left_dx * left_signdx) + (left_stepx * left_dy);
 
 	    (*infoRec->SubsequentSolidFillTrap)(infoRec->pScrn, y, height, 
-			left_x, left_DX, left_dy, left_e, 
-			right_x - 1, right_DX, right_dy, right_e);
+                                                 left_x, left_DX, left_dy,
+                                                 left_e, right_x - 1, right_DX,
+                                                 right_dy, right_e);
 
 	    FixError(left_x, left_dx, left_dy, left_e, left_signdx, 
 			left_stepx, height);
@@ -224,11 +229,8 @@ XAAFillPolyHelper (
     }
 }
 
-
-
 static void
-XAAWideSegment (
-    GCPtr pGC,
+XAAWideSegment(GCPtr pGC,
     int  x1, int y1, int x2, int y2,
     Bool projectLeft, Bool projectRight,
     LineFacePtr leftFace, LineFacePtr rightFace )
@@ -302,7 +304,8 @@ XAAWideSegment (
 	    dx += ((lw + 1) >> 1);
 	dy = lw;
 	FILL_RECT(infoRec->pScrn, x, y, dx, dy);	
-    } else if (!dx) {
+    }
+    else if (!dx) {
 	leftFace->xa =  (double) lw / 2.0;
 	leftFace->ya = 0;
 	leftFace->k = (double) (lw * dy) / 2.0;
@@ -318,7 +321,8 @@ XAAWideSegment (
 	    dy += ((lw + 1) >> 1);
 	dx = lw;
  	FILL_RECT(infoRec->pScrn, x, y, dx, dy);
-    } else {
+    }
+    else {
     	l = ((double) lw) / 2.0;
     	L = sqrt((double)(dx*dx + dy*dy));
 
@@ -327,7 +331,8 @@ XAAWideSegment (
 	    left = &lefts[0];
 	    top = &rights[0];
 	    bottom = &lefts[1];
-	} else {
+        }
+        else {
 	    right = &rights[0];
 	    left = &lefts[1];
 	    top = &lefts[0];
@@ -356,8 +361,7 @@ XAAWideSegment (
 	    righty = miPolyBuildEdge (xa - projectXoff, ya - projectYoff,
 				      k, dx, dy, x1, y1, 0, right);
 	else
-	    righty = miPolyBuildEdge (xa, ya,
-				      k, dx, dy, x1, y1, 0, right);
+            righty = miPolyBuildEdge(xa, ya, k, dx, dy, x1, y1, 0, right);
 
 	/* coord of lower bound at integral y */
 	ya = -ya;
@@ -370,8 +374,7 @@ XAAWideSegment (
 	    lefty = miPolyBuildEdge (xa - projectXoff, ya - projectYoff,
 				     k, dx, dy, x1, y1, 1, left);
 	else
-	    lefty = miPolyBuildEdge (xa, ya,
-				     k, dx, dy, x1, y1, 1, left);
+            lefty = miPolyBuildEdge(xa, ya, k, dx, dy, x1, y1, 1, left);
 
 	/* coord of top face at integral y */
 
@@ -383,22 +386,24 @@ XAAWideSegment (
 	if (projectLeft) {
 	    double xap = xa - projectXoff;
 	    double yap = ya - projectYoff;
+
 	    topy = miPolyBuildEdge (xap, yap, xap * dx + yap * dy,
 				    -dy, dx, x1, y1, dx > 0, top);
 	}
 	else
-	    topy = miPolyBuildEdge(xa, ya, 0.0, 
-					-dy, dx, x1, y1, dx > 0, top);
+            topy = miPolyBuildEdge(xa, ya, 0.0, -dy, dx, x1, y1, dx > 0, top);
 
 		/* coord of bottom face at integral y */
 
 	if (projectRight) {
 	    double xap = xa + projectXoff;
 	    double yap = ya + projectYoff;
+
 	    bottomy = miPolyBuildEdge (xap, yap, xap * dx + yap * dy,
 				       -dy, dx, x2, y2, dx < 0, bottom);
 	    maxy = -ya + projectYoff;
-	} else {
+        }
+        else {
 	    bottomy = miPolyBuildEdge (xa, ya, 0.0,
 					-dy, dx, x2, y2, dx < 0, bottom);
 	    maxy = -ya;
@@ -410,7 +415,8 @@ XAAWideSegment (
 	    left->height = bottomy - lefty;
 	    right->height = finaly - righty;
 	    top->height = righty - topy;
-	} else {
+        }
+        else {
 	    right->height =  bottomy - righty;
 	    left->height = finaly - lefty;
 	    top->height = lefty - topy;
@@ -421,7 +427,6 @@ XAAWideSegment (
     }
 }
 
-
 static void
 XAALineArcI (GCPtr pGC, int xorg, int yorg)
 {
@@ -456,18 +461,13 @@ XAALineArcI (GCPtr pGC, int xorg, int yorg)
     }
 }
 
-
 static void
-XAALineArcD (
-    GCPtr	    pGC,
+XAALineArcD(GCPtr pGC,
     double	    xorg,
     double	    yorg,
     PolyEdgePtr	    edge1, 
     int		    edgey1,
-    Bool	    edgeleft1,
-    PolyEdgePtr	    edge2,
-    int		    edgey2,
-    Bool	    edgeleft2 )
+            Bool edgeleft1, PolyEdgePtr edge2, int edgey2, Bool edgeleft2)
 {
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     double radius, x0, y0, el, er, yk, xlk, xrk, k;
@@ -477,7 +477,6 @@ XAALineArcD (
     int ymin1, ymin2;
     Bool hardClip = (infoRec->ClippingFlags & HARDWARE_CLIP_SOLID_FILL);
 
-
     xbase = floor(xorg);
     x0 = xorg - xbase;
     ybase = ICEIL (yorg);
@@ -500,7 +499,8 @@ XAALineArcD (
 	    else
 	    	ymax = edgey1;
 	    edgey1 = 65536;
-    	} else if ((edge1->signdx < 0) == edgeleft1)
+        }
+        else if ((edge1->signdx < 0) == edgeleft1)
 	    	edge1IsMin = TRUE;
     }
     edge2IsMin = FALSE;
@@ -512,14 +512,16 @@ XAALineArcD (
 	    else
 	    	ymax = edgey2;
 	    edgey2 = 65536;
-    	} else if ((edge2->signdx < 0) == edgeleft2)
+        }
+        else if ((edge2->signdx < 0) == edgeleft2)
 	    	edge2IsMin = TRUE;
     }
     if (edge1IsMin) {
 	ymin = ymin1;
 	if (edge2IsMin && (ymin1 > ymin2))
 	    ymin = ymin2;
-    } else if (edge2IsMin)
+    }
+    else if (edge2IsMin)
 	ymin = ymin2;
     el = radius * radius - ((y + y0) * (y + y0)) - (x0 * x0);
     er = el + xrk;
@@ -587,15 +589,10 @@ XAALineArcD (
     }
 }
 
-
 static void
-XAALineArc (
-    GCPtr  pGC,
+XAALineArc(GCPtr pGC,
     LineFacePtr leftFace,
-    LineFacePtr rightFace,
-    double	xorg,
-    double	yorg,
-    Bool	isInt )
+           LineFacePtr rightFace, double xorg, double yorg, Bool isInt)
 {
     int xorgi, yorgi;
     PolyEdgeRec	edge1, edge2;
@@ -605,7 +602,8 @@ XAALineArc (
     if (isInt) {
 	xorgi = leftFace ? leftFace->x : rightFace->x;
 	yorgi = leftFace ? leftFace->y : rightFace->y;
-    } else {	/* Muffle compiler */
+    }
+    else {                      /* Muffle compiler */
         xorgi = yorgi = 0;
     }
     edgey1 = 65536;
@@ -640,21 +638,20 @@ XAALineArc (
 	if(pGC->lineWidth == 1) {
 	    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
 	    Bool hardClip = (infoRec->ClippingFlags & HARDWARE_CLIP_SOLID_FILL);
+
 	    DRAW_POINT(infoRec->pScrn, xorgi, yorgi);
-	} else
+        }
+        else
 	    XAALineArcI(pGC, xorgi, yorgi);
-    } else
+    }
+    else
 	XAALineArcD(pGC, xorg, yorg, &edge1, edgey1, edgeleft1,
 		       &edge2, edgey2, edgeleft2);
 
 }
 
-
 static void
-XAALineJoin (
-    GCPtr	    pGC,
-    LineFacePtr     pLeft,
-    LineFacePtr     pRight )
+XAALineJoin(GCPtr pGC, LineFacePtr pLeft, LineFacePtr pRight)
 {
     double	    mx = 0, my = 0;
     double	    denom = 0;
@@ -681,10 +678,12 @@ XAALineJoin (
 	if (joinStyle != JoinMiter) {
 	    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
 	    Bool hardClip = (infoRec->ClippingFlags & HARDWARE_CLIP_SOLID_FILL);
+
 	    DRAW_POINT(infoRec->pScrn, pLeft->x, pLeft->y);	
 	    return;
 	}
-    } else {
+    }
+    else {
     	if (joinStyle == JoinRound) {
 	    XAALineArc(pGC, pLeft, pRight,(double)0.0, (double)0.0, TRUE);
 	    return;
@@ -701,7 +700,8 @@ XAALineJoin (
 	pLeft->ya = -pLeft->ya;
 	pLeft->dx = -pLeft->dx;
 	pLeft->dy = -pLeft->dy;
-    } else {
+    }
+    else {
 	swapslopes = 1;
 	pRight->xa = -pRight->xa;
 	pRight->ya = -pRight->ya;
@@ -760,7 +760,8 @@ XAALineJoin (
 	    slopes[3].k  = -slopes[3].k;
 	}
 	edgecount = 4;
-    } else {
+    }
+    else {
 	double	scale, dx, dy, adx, ady;
 
 	adx = dx = pRight->xa - pLeft->xa;
@@ -784,14 +785,9 @@ XAALineJoin (
     XAAFillPolyHelper(pGC, y, height, left, right, nleft, nright);
 }
 
-
 void
-XAAPolylinesWideSolid (
-   DrawablePtr  pDrawable,
-   GCPtr        pGC,
-   int          mode,
-   int          npt,
-   DDXPointPtr  pPts )
+XAAPolylinesWideSolid(DrawablePtr pDrawable,
+                      GCPtr pGC, int mode, int npt, DDXPointPtr pPts)
 {
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     int		    x1, y1, x2, y2;
@@ -830,7 +826,8 @@ XAAPolylinesWideSolid (
 	    }
 	    if ((x2 == x1) && (y2 == y1))
 	    	selfJoin = TRUE;
-    	} else if ((x2 == pPts[npt-1].x) && (y2 == pPts[npt-1].y)) 
+        }
+        else if ((x2 == pPts[npt - 1].x) && (y2 == pPts[npt - 1].y))
 	    selfJoin = TRUE;
     }
 
@@ -845,8 +842,10 @@ XAAPolylinesWideSolid (
     if(infoRec->ClippingFlags & HARDWARE_CLIP_SOLID_FILL) {
 	hardClip = TRUE;
 	(*infoRec->SetClippingRectangle)(infoRec->pScrn,
-              infoRec->ClipBox->x1, infoRec->ClipBox->y1, 
-              infoRec->ClipBox->x2 - 1, infoRec->ClipBox->y2 - 1);		
+                                          infoRec->ClipBox->x1,
+                                          infoRec->ClipBox->y1,
+                                          infoRec->ClipBox->x2 - 1,
+                                          infoRec->ClipBox->y2 - 1);
     }
 
     x2 += xorg;
@@ -860,7 +859,8 @@ XAAPolylinesWideSolid (
 	if (mode == CoordModePrevious) {
 	    x2 += x1;
 	    y2 += y1;
-	} else {
+        }
+        else {
 	    x2 += xorg;
 	    y2 += yorg;
 	}
@@ -876,11 +876,13 @@ XAAPolylinesWideSolid (
 	    	else if (pGC->capStyle == CapRound) {
 		    if (pGC->lineWidth == 1) {
 			DRAW_POINT(infoRec->pScrn, x1, y1);
-		    } else
+                    }
+                    else
 		        XAALineArc(pGC,&leftFace, (LineFacePtr) NULL,
  			       	   (double)0.0, (double)0.0,TRUE);
 		}
-	    } else 
+            }
+            else
 	    	XAALineJoin (pGC, &leftFace, &prevRightFace);
 
 	    prevRightFace = rightFace;
@@ -893,7 +895,8 @@ XAAPolylinesWideSolid (
 	    else if (pGC->capStyle == CapRound) {
 		if (pGC->lineWidth == 1) {
 		    DRAW_POINT(infoRec->pScrn, x2, y2);
-		} else
+                }
+                else
 		    XAALineArc (pGC, (LineFacePtr) NULL, &rightFace,
 			       (double)0.0, (double)0.0,TRUE);
 	    }
