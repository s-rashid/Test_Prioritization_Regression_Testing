diff --git a/mi/miwideline.c b/mi/miwideline.c
index f080ca1..40f0d3e 100644
--- a/mi/miwideline.c
+++ b/mi/miwideline.c
@@ -252,13 +252,16 @@ miFillRectPolyHelper (
 }
 
 _X_EXPORT /* static */ int
-miPolyBuildEdge (x0, y0, k, dx, dy, xi, yi, left, edge)
-    double	x0, y0;
-    double	k;  /* x0 * dy - y0 * dx */
-    int 	dx, dy;
-    int		xi, yi;
-    int		left;
-    PolyEdgePtr edge;
+miPolyBuildEdge (
+    double	x0,
+    double	y0,
+    double	k,  /* x0 * dy - y0 * dx */
+    int		dx,
+    int		dy,
+    int		xi,
+    int		yi,
+    int		left,
+    PolyEdgePtr edge)
 {
     int	    x, y, e;
     int	    xady;
@@ -311,14 +314,17 @@ miPolyBuildEdge (x0, y0, k, dx, dy, xi, yi, left, edge)
 #define StepAround(v, incr, max) (((v) + (incr) < 0) ? (max - 1) : ((v) + (incr) == max) ? 0 : ((v) + (incr)))
 
 _X_EXPORT /* static */ int
-miPolyBuildPoly (vertices, slopes, count, xi, yi, left, right, pnleft, pnright, h)
-    PolyVertexPtr 	vertices;
-    PolySlopePtr	slopes;
-    int			count;
-    int		   	xi, yi;
-    PolyEdgePtr	    	left, right;
-    int		    	*pnleft, *pnright;
-    int		    	*h;
+miPolyBuildPoly (
+    PolyVertexPtr	vertices,
+    PolySlopePtr	slopes,
+    int			count,
+    int			xi,
+    int			yi,
+    PolyEdgePtr		left,
+    PolyEdgePtr		right,
+    int			*pnleft,
+    int			*pnright,
+    int			*h)
 {
     int 	top, bottom;
     double 	miny, maxy;
@@ -910,11 +916,9 @@ miRoundJoinFace (LineFacePtr face, PolyEdgePtr edge, Bool *leftEdge)
 }
 
 _X_EXPORT void
-miRoundJoinClip (pLeft, pRight, edge1, edge2, y1, y2, left1, left2)
-    LineFacePtr pLeft, pRight;
-    PolyEdgePtr	edge1, edge2;
-    int		*y1, *y2;
-    Bool	*left1, *left2;
+miRoundJoinClip (LineFacePtr pLeft, LineFacePtr pRight,
+		 PolyEdgePtr edge1, PolyEdgePtr edge2,
+		 int *y1, int *y2, Bool *left1, Bool *left2)
 {
     double	denom;
 
@@ -935,11 +939,7 @@ miRoundJoinClip (pLeft, pRight, edge1, edge2, y1, y2, left1, left2)
 }
 
 _X_EXPORT int
-miRoundCapClip (face, isInt, edge, leftEdge)
-    LineFacePtr face;
-    Bool	isInt;
-    PolyEdgePtr edge;
-    Bool	*leftEdge;
+miRoundCapClip (LineFacePtr face, Bool isInt, PolyEdgePtr edge, Bool *leftEdge)
 {
     int		y;
     int 	dx, dy;
@@ -1525,12 +1525,8 @@ miCleanupSpanData (DrawablePtr pDrawable, GCPtr pGC, SpanDataPtr spanData)
 }
 
 _X_EXPORT void
-miWideLine (pDrawable, pGC, mode, npt, pPts)
-    DrawablePtr	pDrawable;
-    GCPtr 	pGC;
-    int		mode;
-    int 	npt;
-    DDXPointPtr pPts;
+miWideLine (DrawablePtr pDrawable, GCPtr pGC,
+	    int mode, int npt, DDXPointPtr pPts)
 {
     int		x1, y1, x2, y2;
     SpanDataRec	spanDataRec;
@@ -2023,12 +2019,8 @@ miWideDashSegment (
 }
 
 _X_EXPORT void
-miWideDash (pDrawable, pGC, mode, npt, pPts)
-    DrawablePtr	pDrawable;
-    GCPtr 	pGC;
-    int		mode;
-    int 	npt;
-    DDXPointPtr pPts;
+miWideDash (DrawablePtr pDrawable, GCPtr pGC,
+	    int mode, int npt, DDXPointPtr pPts)
 {
     int			x1, y1, x2, y2;
     unsigned long	pixel;
