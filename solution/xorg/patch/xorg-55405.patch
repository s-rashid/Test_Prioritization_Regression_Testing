diff --git a/hw/vfb/InitInput.c b/hw/vfb/InitInput.c
index 8836bbd..9d0fd98 100644
--- a/hw/vfb/InitInput.c
+++ b/hw/vfb/InitInput.c
@@ -56,7 +56,8 @@ ProcessInputEvents(void)
     mieqProcessInputEvents();
 }
 
-void DDXRingBell(int volume, int pitch, int duration)
+void
+DDXRingBell(int volume, int pitch, int duration)
 {
 }
 
@@ -68,8 +69,7 @@ vfbKeybdProc(DeviceIntPtr pDevice, int onoff)
 {
     DevicePtr pDev = (DevicePtr)pDevice;
 
-    switch (onoff)
-    {
+    switch (onoff) {
     case DEVICE_INIT:
 	InitKeyboardDeviceStruct(pDevice, NULL, NULL, NULL);
         break;
@@ -96,8 +96,7 @@ vfbMouseProc(DeviceIntPtr pDevice, int onoff)
     Atom btn_labels[NBUTTONS] = {0};
     Atom axes_labels[NAXES] = {0};
 
-    switch (onoff)
-    {
+    switch (onoff) {
     case DEVICE_INIT:
 	    map[1] = 1;
 	    map[2] = 2;
@@ -111,7 +110,8 @@ vfbMouseProc(DeviceIntPtr pDevice, int onoff)
             axes_labels[1] = XIGetKnownProperty(AXIS_LABEL_PROP_REL_Y);
 
 	    InitPointerDeviceStruct(pDev, map, NBUTTONS, btn_labels,
-		(PtrCtrlProcPtr)NoopDDA, GetMotionHistorySize(), NAXES, axes_labels);
+                                (PtrCtrlProcPtr) NoopDDA,
+                                GetMotionHistorySize(), NAXES, axes_labels);
 	    break;
 
     case DEVICE_ON:
@@ -136,6 +136,7 @@ InitInput(int argc, char *argv[])
 {
     DeviceIntPtr p, k;
     Atom xiclass;
+
     p = AddInputDevice(serverClient, vfbMouseProc, TRUE);
     k = AddInputDevice(serverClient, vfbKeybdProc, TRUE);
     xiclass = MakeAtom(XI_MOUSE, sizeof(XI_MOUSE) - 1, TRUE);
