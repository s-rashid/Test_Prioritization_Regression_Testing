diff --git a/hw/xquartz/GL/visualConfigs.c b/hw/xquartz/GL/visualConfigs.c
index 2c2a9a2..c02427c 100644
--- a/hw/xquartz/GL/visualConfigs.c
+++ b/hw/xquartz/GL/visualConfigs.c
@@ -58,7 +58,9 @@
 #include "darwinfb.h"
 
 /* Based originally on code from indirect.c which was based on code from i830_dri.c. */
-__GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber) {
+__GLXconfig *
+__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
+{
     int numConfigs = 0;
     __GLXconfig *visualConfigs, *c;
     struct glCapabilities caps;
@@ -104,11 +106,12 @@ __GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
         numConfigs += (conf->stereo ? 2 : 1) 
 	    * (conf->aux_buffers ? 2 : 1) 
 	    * conf->buffers
-	    * ((conf->total_stencil_bit_depths > 0) ? conf->total_stencil_bit_depths : 1)
-	    * conf->total_color_buffers
-	    * ((conf->total_accum_buffers > 0) ? conf->total_accum_buffers : 1)
-	    * conf->total_depth_buffer_depths
-	    * (conf->multisample_buffers + 1);
+            *
+            ((conf->total_stencil_bit_depths >
+              0) ? conf->total_stencil_bit_depths : 1)
+            * conf->total_color_buffers *
+            ((conf->total_accum_buffers > 0) ? conf->total_accum_buffers : 1)
+            * conf->total_depth_buffer_depths * (conf->multisample_buffers + 1);
     }
     
     if(numConfigsPtr)
@@ -127,13 +130,25 @@ __GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
         for(stereo = 0; stereo < (conf->stereo ? 2 : 1); ++stereo) {
             for(aux = 0; aux < (conf->aux_buffers ? 2 : 1); ++aux) {
                 for(buffers = 0; buffers < conf->buffers; ++buffers) {
-                    for(stencil = 0; stencil < ((conf->total_stencil_bit_depths > 0) ? 
-                                                conf->total_stencil_bit_depths : 1); ++stencil) {
-                        for(color = 0; color < conf->total_color_buffers; ++color) {
-                            for(accum = 0; accum < ((conf->total_accum_buffers > 0) ?
-                                                    conf->total_accum_buffers : 1); ++accum) {
-                                for(depth = 0; depth < conf->total_depth_buffer_depths; ++depth) {
-                                    for(msample = 0; msample < (conf->multisample_buffers + 1); ++msample) {
+                    for (stencil = 0;
+                         stencil <
+                         ((conf->total_stencil_bit_depths >
+                           0) ? conf->total_stencil_bit_depths : 1);
+                         ++stencil) {
+                        for (color = 0; color < conf->total_color_buffers;
+                             ++color) {
+                            for (accum = 0;
+                                 accum <
+                                 ((conf->total_accum_buffers >
+                                   0) ? conf->total_accum_buffers : 1);
+                                 ++accum) {
+                                for (depth = 0;
+                                     depth < conf->total_depth_buffer_depths;
+                                     ++depth) {
+                                    for (msample = 0;
+                                         msample <
+                                         (conf->multisample_buffers + 1);
+                                         ++msample) {
                                         
                                         // Global
                                         c->visualID = -1;
@@ -148,8 +163,10 @@ __GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
                                         
                                         if(conf->accelerated) {
                                             c->visualRating = GLX_NONE;
-                                        } else {
-                                            c->visualRating = GLX_SLOW_VISUAL_EXT;
+                                        }
+                                        else {
+                                            c->visualRating =
+                                                GLX_SLOW_VISUAL_EXT;
                                         }
                                         
                                         c->transparentPixel = GLX_NONE;
@@ -167,46 +184,76 @@ __GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
                                         c->stereoMode = stereo ? TRUE : FALSE;
 
                                         // Aux buffers
-                                        c->numAuxBuffers = aux ? conf->aux_buffers : 0;
+                                        c->numAuxBuffers =
+                                            aux ? conf->aux_buffers : 0;
                                         
                                         // Double Buffered
-                                        c->doubleBufferMode = buffers ? TRUE : FALSE;
+                                        c->doubleBufferMode =
+                                            buffers ? TRUE : FALSE;
 
                                         // Stencil Buffer
                                         if(conf->total_stencil_bit_depths > 0) {
-                                            c->stencilBits = conf->stencil_bit_depths[stencil];
-                                        } else {
+                                            c->stencilBits =
+                                                conf->
+                                                stencil_bit_depths[stencil];
+                                        }
+                                        else {
                                             c->stencilBits = 0;
                                         }
                                         
                                         // Color
-                                        if(GLCAPS_COLOR_BUF_INVALID_VALUE != conf->color_buffers[color].a) {
-                                            c->alphaBits = conf->color_buffers[color].a;
-                                        } else {
+                                        if (GLCAPS_COLOR_BUF_INVALID_VALUE !=
+                                            conf->color_buffers[color].a) {
+                                            c->alphaBits =
+                                                conf->color_buffers[color].a;
+                                        }
+                                        else {
                                             c->alphaBits = 0;
                                         }
-                                        c->redBits   = conf->color_buffers[color].r;
-                                        c->greenBits = conf->color_buffers[color].g;
-                                        c->blueBits  = conf->color_buffers[color].b;
-                                        
-                                        c->rgbBits = c->alphaBits + c->redBits + c->greenBits + c->blueBits;
-
-                                        c->alphaMask = AM_ARGB(c->alphaBits, c->redBits, c->greenBits, c->blueBits);
-                                        c->redMask   = RM_ARGB(c->alphaBits, c->redBits, c->greenBits, c->blueBits);
-                                        c->greenMask = GM_ARGB(c->alphaBits, c->redBits, c->greenBits, c->blueBits);
-                                        c->blueMask  = BM_ARGB(c->alphaBits, c->redBits, c->greenBits, c->blueBits);
+                                        c->redBits =
+                                            conf->color_buffers[color].r;
+                                        c->greenBits =
+                                            conf->color_buffers[color].g;
+                                        c->blueBits =
+                                            conf->color_buffers[color].b;
+
+                                        c->rgbBits =
+                                            c->alphaBits + c->redBits +
+                                            c->greenBits + c->blueBits;
+
+                                        c->alphaMask =
+                                            AM_ARGB(c->alphaBits, c->redBits,
+                                                    c->greenBits, c->blueBits);
+                                        c->redMask =
+                                            RM_ARGB(c->alphaBits, c->redBits,
+                                                    c->greenBits, c->blueBits);
+                                        c->greenMask =
+                                            GM_ARGB(c->alphaBits, c->redBits,
+                                                    c->greenBits, c->blueBits);
+                                        c->blueMask =
+                                            BM_ARGB(c->alphaBits, c->redBits,
+                                                    c->greenBits, c->blueBits);
                                                                                 
                                         // Accumulation Buffers
                                         if(conf->total_accum_buffers > 0) {
-                                            c->accumRedBits = conf->accum_buffers[accum].r;
-                                            c->accumGreenBits = conf->accum_buffers[accum].g;
-                                            c->accumBlueBits = conf->accum_buffers[accum].b;
-                                            if(GLCAPS_COLOR_BUF_INVALID_VALUE != conf->accum_buffers[accum].a) {
-                                                c->accumAlphaBits = conf->accum_buffers[accum].a;
-                                            } else {
+                                            c->accumRedBits =
+                                                conf->accum_buffers[accum].r;
+                                            c->accumGreenBits =
+                                                conf->accum_buffers[accum].g;
+                                            c->accumBlueBits =
+                                                conf->accum_buffers[accum].b;
+                                            if (GLCAPS_COLOR_BUF_INVALID_VALUE
+                                                !=
+                                                conf->accum_buffers[accum].a) {
+                                                c->accumAlphaBits =
+                                                    conf->accum_buffers[accum].
+                                                    a;
+                                            }
+                                            else {
                                                 c->accumAlphaBits = 0;
                                             }
-                                        } else {
+                                        }
+                                        else {
                                             c->accumRedBits = 0;
                                             c->accumGreenBits = 0;
                                             c->accumBlueBits = 0;
@@ -214,13 +261,17 @@ __GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
                                         } 
 
                                         // Depth
-                                        c->depthBits = conf->depth_buffers[depth];
+                                        c->depthBits =
+                                            conf->depth_buffers[depth];
                                         
                                         // MultiSample
                                         if(msample > 0) {
-                                            c->samples = conf->multisample_samples;
-                                            c->sampleBuffers = conf->multisample_buffers;
-                                        } else {
+                                            c->samples =
+                                                conf->multisample_samples;
+                                            c->sampleBuffers =
+                                                conf->multisample_buffers;
+                                        }
+                                        else {
                                             c->samples = 0;
                                             c->sampleBuffers = 0;
                                         }
@@ -230,7 +281,9 @@ __GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
                                          * GLXPbuffers in direct mode.
                                          */
                                         /* SGIX_fbconfig / GLX 1.3 */
-                                        c->drawableType = GLX_WINDOW_BIT | GLX_PIXMAP_BIT | GLX_PBUFFER_BIT;
+                                        c->drawableType =
+                                            GLX_WINDOW_BIT | GLX_PIXMAP_BIT |
+                                            GLX_PBUFFER_BIT;
                                         c->renderType = GLX_RGBA_BIT;
                                         c->xRenderable = GL_TRUE;
                                         c->fbconfigID = -1;
@@ -247,7 +300,8 @@ __GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
                                          */
                                         c->maxPbufferWidth = 8192;
                                         c->maxPbufferHeight = 8192;
-                                        c->maxPbufferPixels = /*Do we need this?*/ 0;
+                                        c->maxPbufferPixels =
+                                            /*Do we need this? */ 0;
                                         /* 
                                          * There is no introspection for this sort of thing
                                          * with CGL.  What should we do realistically?
@@ -276,7 +330,9 @@ __GLXconfig *__glXAquaCreateVisualConfigs(int *numConfigsPtr, int screenNumber)
     (c-1)->next = NULL;
 
     if (c - visualConfigs != numConfigs) {
-        FatalError("numConfigs calculation error in setVisualConfigs!  numConfigs is %d  i is %d\n", numConfigs, (int)(c - visualConfigs));
+        FatalError
+            ("numConfigs calculation error in setVisualConfigs!  numConfigs is %d  i is %d\n",
+             numConfigs, (int) (c - visualConfigs));
     }
     
     freeGlCapabilities(&caps);
