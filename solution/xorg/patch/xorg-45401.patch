diff --git a/hw/dmx/dmx.c b/hw/dmx/dmx.c
index 56e5bb6..87d408d 100644
--- a/hw/dmx/dmx.c
+++ b/hw/dmx/dmx.c
@@ -360,10 +360,10 @@ static int ProcDMXGetScreenAttributes(ClientPtr client)
     rep.rootWindowYorigin   = attr.rootWindowYorigin;
                                  
     length                  = attr.displayName ? strlen(attr.displayName) : 0;
-    paddedLength            = (length + 3) & ~3;
+    paddedLength            = pad_to_int32(length);
     rep.type                = X_Reply;
     rep.sequenceNumber      = client->sequence;
-    rep.length              = paddedLength >> 2;
+    rep.length              = bytes_to_int32(paddedLength);
     rep.displayNameLength   = length;
 
     if (client->swapped) {
@@ -405,7 +405,7 @@ static int ProcDMXChangeScreensAttributes(ClientPtr client)
     
 
     REQUEST_AT_LEAST_SIZE(xDMXChangeScreensAttributesReq);
-    len = client->req_len - (sizeof(xDMXChangeScreensAttributesReq) >> 2);
+    len = client->req_len - bytes_to_int32(sizeof(xDMXChangeScreensAttributesReq));
     if (len < stuff->screenCount + stuff->maskCount)
         return BadLength;
 
@@ -474,8 +474,8 @@ static int ProcDMXAddScreen(ClientPtr client)
     int                    paddedLength;
 
     REQUEST_AT_LEAST_SIZE(xDMXAddScreenReq);
-    paddedLength = (stuff->displayNameLength + 3) & ~3;
-    len          = client->req_len - (sizeof(xDMXAddScreenReq) >> 2);
+    paddedLength = pad_to_int32(stuff->displayNameLength);
+    len          = client->req_len - bytes_to_int32(sizeof(xDMXAddScreenReq));
     if (len != Ones(stuff->valueMask) + paddedLength/4)
         return BadLength;
 
@@ -795,10 +795,10 @@ static int ProcDMXGetInputAttributes(ClientPtr client)
     rep.detached       = attr.detached;
     
     length             = attr.name ? strlen(attr.name) : 0;
-    paddedLength       = (length + 3) & ~3;
+    paddedLength       = pad_to_int32(length);
     rep.type           = X_Reply;
     rep.sequenceNumber = client->sequence;
-    rep.length         = paddedLength >> 2;
+    rep.length         = bytes_to_int32(paddedLength);
     rep.nameLength     = length;
     if (client->swapped) {
     	swaps(&rep.sequenceNumber, n);
@@ -828,7 +828,7 @@ static int ProcDMXAddInput(ClientPtr client)
     int                    id     = -1;
 
     REQUEST_AT_LEAST_SIZE(xDMXAddInputReq);
-    paddedLength = (stuff->displayNameLength + 3) & ~3;
+    paddedLength = pad_to_int32(stuff->displayNameLength);
     len          = client->req_len - (sizeof(xDMXAddInputReq) >> 2);
     if (len != Ones(stuff->valueMask) + paddedLength/4)
         return BadLength;
@@ -997,7 +997,7 @@ static int SProcDMXAddScreen(ClientPtr client)
     REQUEST_AT_LEAST_SIZE(xDMXAddScreenReq);
     swapl(&stuff->displayNameLength, n);
     swapl(&stuff->valueMask, n);
-    paddedLength = (stuff->displayNameLength + 3) & ~3;
+    paddedLength = pad_to_int32(stuff->displayNameLength);
     SwapLongs((CARD32 *)(stuff+1), LengthRestL(stuff) - paddedLength/4);
     return ProcDMXAddScreen(client);
 }
@@ -1077,7 +1077,7 @@ static int SProcDMXAddInput(ClientPtr client)
     REQUEST_AT_LEAST_SIZE(xDMXAddInputReq);
     swapl(&stuff->displayNameLength, n);
     swapl(&stuff->valueMask, n);
-    paddedLength = (stuff->displayNameLength + 3) & ~3;
+    paddedLength = pad_to_int32(stuff->displayNameLength);
     SwapLongs((CARD32 *)(stuff+1), LengthRestL(stuff) - paddedLength/4);
     return ProcDMXAddInput(client);
 }
