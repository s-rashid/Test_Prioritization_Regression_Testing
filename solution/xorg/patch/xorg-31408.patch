diff --git a/hw/xfree86/os-support/linux/lnxResource.c b/hw/xfree86/os-support/linux/lnxResource.c
index 6f89cdb..bb42d8a 100644
--- a/hw/xfree86/os-support/linux/lnxResource.c
+++ b/hw/xfree86/os-support/linux/lnxResource.c
@@ -31,121 +31,6 @@ _X_EXPORT resRange PciAvoid[] =
 #ifdef __alpha__
 
 resPtr
-xf86BusAccWindowsFromOS(void)
-{
-    resPtr ret = NULL;
-    resRange range;
-
-    RANGE(range, 0x00000000, 0xffffffff, ResExcMemBlock);
-    ret = xf86AddResToList(ret, &range, -1);
-
-    RANGE(range, 0x00000000, 0xffffffff, ResExcIoBlock);
-    ret = xf86AddResToList(ret, &range, -1);
-    return ret;
-}
-
-resPtr
-xf86PciBusAccWindowsFromOS(void)
-{
-    resPtr ret = NULL;
-    resRange range;
-    /*
-     * On the Alpha the first 16MB of every 128 Mb segment in
-     * sparse address space are an image of the ISA bus range
-     */
-    if (_bus_base_sparse()) {
-	RANGE(range, 0x00000000, 0x07ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x09000000, 0x0fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x11000000, 0x17ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x19000000, 0x1fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x21000000, 0x27ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x29000000, 0x2fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x31000000, 0x37ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x39000000, 0x3fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x41000000, 0x47ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x49000000, 0x4fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x51000000, 0x57ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x59000000, 0x5fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x61000000, 0x67ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x69000000, 0x6fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x71000000, 0x77ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x79000000, 0x7fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x81000000, 0x87ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x89000000, 0x8fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x91000000, 0x97ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0x99000000, 0x9fffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xa1000000, 0xa7ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xa9000000, 0xafffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xb1000000, 0xb7ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xb9000000, 0xbfffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xc1000000, 0xc7ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xc9000000, 0xcfffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xd1000000, 0xd7ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xd9000000, 0xdfffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xe1000000, 0xe7ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xe9000000, 0xefffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xf1000000, 0xf7ffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-	RANGE(range, 0xf9000000, 0xffffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-    } else {
-	RANGE(range, 0x00000000, 0xffffffff, ResExcMemBlock);
-	ret = xf86AddResToList(ret, &range, -1);
-    }
-    RANGE(range, 0x00000000, 0xffffffff, ResExcIoBlock);
-    ret = xf86AddResToList(ret, &range, -1);
-    return ret;
-}
-
-#ifdef INCLUDE_UNUSED
-
-resPtr
-xf86IsaBusAccWindowsFromOS(void)
-{
-    resPtr ret = NULL;
-    resRange range;
-
-    RANGE(range, 0x00000000, 0xffffffff, ResExcMemBlock);
-    ret = xf86AddResToList(ret, &range, -1);
-
-    RANGE(range, 0x00000000, 0xffffffff, ResExcIoBlock);
-    ret = xf86AddResToList(ret, &range, -1);
-    return ret;
-}
-
-#endif /* INCLUDE_UNUSED */
-
-resPtr
 xf86AccResFromOS(resPtr ret)
 {
     resRange range;
@@ -193,69 +78,6 @@ xf86AccResFromOS(resPtr ret)
       defined(__s390__) || \
       defined(__hppa__)
 
- /*
-  * XXX this isn't exactly correct but it will get the server working 
-  * for now until we get something better.
-  */
-  
-resPtr
-xf86BusAccWindowsFromOS(void)
-{
-    resPtr ret = NULL;
-    resRange range;
-
-    RANGE(range, 0x00000000, 0xffffffff, ResExcMemBlock);
-    ret = xf86AddResToList(ret, &range, -1);
-
-#if defined(__sparc__) || defined(__powerpc__)
-    RANGE(range, 0x00000000, 0x00ffffff, ResExcIoBlock);
-#else
-    RANGE(range, 0x00000000, 0x0000ffff, ResExcIoBlock);
-#endif
-    ret = xf86AddResToList(ret, &range, -1);
-    return ret;
-}
-
-resPtr
-xf86PciBusAccWindowsFromOS(void)
-{
-    resPtr ret = NULL;
-    resRange range;
-
-    RANGE(range, 0x00000000, 0xffffffff, ResExcMemBlock);
-    ret = xf86AddResToList(ret, &range, -1);
-
-#if defined(__sparc__) || defined(__powerpc__)
-    RANGE(range, 0x00000000, 0x00ffffff, ResExcIoBlock);
-#else
-    RANGE(range, 0x00000000, 0x0000ffff, ResExcIoBlock);
-#endif
-    ret = xf86AddResToList(ret, &range, -1);
-    return ret;
-}
-
-#ifdef INCLUDE_UNUSED
-
-resPtr
-xf86IsaBusAccWindowsFromOS(void)
-{
-    resPtr ret = NULL;
-    resRange range;
-
-    RANGE(range, 0x00000000, 0xffffffff, ResExcMemBlock);
-    ret = xf86AddResToList(ret, &range, -1);
-
-#if defined(__sparc__) || defined(__powerpc__)
-    RANGE(range, 0x00000000, 0x00ffffff, ResExcIoBlock);
-#else
-    RANGE(range, 0x00000000, 0x0000ffff, ResExcIoBlock);
-#endif
-    ret = xf86AddResToList(ret, &range, -1);
-    return ret;
-}
-
-#endif /* INCLUDE_UNUSED */
-
 resPtr
 xf86AccResFromOS(resPtr ret)
 {
