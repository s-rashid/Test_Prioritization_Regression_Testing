diff --git a/xkb/XKBAlloc.c b/xkb/XKBAlloc.c
index 559a524..7265d83 100644
--- a/xkb/XKBAlloc.c
+++ b/xkb/XKBAlloc.c
@@ -58,7 +58,7 @@ XkbSymInterpretRec *prev_interpret;
 	compat->sym_interpret= _XkbTypedRealloc(compat->sym_interpret,
 						     nSI,XkbSymInterpretRec);
 	if (compat->sym_interpret==NULL) {
-	    _XkbFree(prev_interpret);
+	    xfree(prev_interpret);
 	    compat->size_si= compat->num_si= 0;
 	    return BadAlloc;
 	}
@@ -74,7 +74,7 @@ XkbSymInterpretRec *prev_interpret;
     if (nSI>0) {
 	compat->sym_interpret= _XkbTypedCalloc(nSI,XkbSymInterpretRec);
 	if (!compat->sym_interpret) {
-	    _XkbFree(compat);
+	    xfree(compat);
 	    return BadAlloc;
 	}
     }
@@ -100,12 +100,12 @@ register XkbCompatMapPtr compat;
 	bzero((char *)&compat->groups[0],XkbNumKbdGroups*sizeof(XkbModsRec));
     if (which&XkbSymInterpMask) {
 	if ((compat->sym_interpret)&&(compat->size_si>0))
-	    _XkbFree(compat->sym_interpret);
+	    xfree(compat->sym_interpret);
 	compat->size_si= compat->num_si= 0;
 	compat->sym_interpret= NULL;
     }
     if (freeMap) {
-	_XkbFree(compat);
+	xfree(compat);
 	xkb->compat= NULL;
     }
     return;
@@ -161,7 +161,7 @@ XkbNamesPtr	names;
 		_XkbClearElems(names->key_aliases,names->num_key_aliases,
 						nTotalAliases-1,XkbKeyAliasRec);
 	    } else {
-		_XkbFree(prev_aliases);
+		xfree(prev_aliases);
 	    }
 	}
 	if (names->key_aliases==NULL) {
@@ -183,7 +183,7 @@ XkbNamesPtr	names;
 		_XkbClearElems(names->radio_groups,names->num_rg,nTotalRG-1,
 									Atom);
 	    } else {
-		_XkbFree(prev_radio_groups);
+		xfree(prev_radio_groups);
 	    }
 	}
 	if (names->radio_groups==NULL)
@@ -211,29 +211,29 @@ XkbNamesPtr	names;
 	    type= map->types;
 	    for (i=0;i<map->num_types;i++,type++) {
 		if (type->level_names!=NULL) {
-		    _XkbFree(type->level_names);
+		    xfree(type->level_names);
 		    type->level_names= NULL;
 		}
 	    }
 	}
     }
     if ((which&XkbKeyNamesMask)&&(names->keys!=NULL)) {
-	_XkbFree(names->keys);
+	xfree(names->keys);
 	names->keys= NULL;
 	names->num_keys= 0;
     }
     if ((which&XkbKeyAliasesMask)&&(names->key_aliases)){
-	_XkbFree(names->key_aliases);
+	xfree(names->key_aliases);
 	names->key_aliases=NULL;
 	names->num_key_aliases=0;
     }
     if ((which&XkbRGNamesMask)&&(names->radio_groups)) {
-	_XkbFree(names->radio_groups);
+	xfree(names->radio_groups);
 	names->radio_groups= NULL;
 	names->num_rg= 0;
     }
     if (freeMap) {
-	_XkbFree(names);
+	xfree(names);
 	xkb->names= NULL;
     }
     return;
@@ -261,7 +261,7 @@ static void
 XkbFreeControls(XkbDescPtr xkb,unsigned which,Bool freeMap)
 {
     if (freeMap && (xkb!=NULL) && (xkb->ctrls!=NULL)) {
-	_XkbFree(xkb->ctrls);
+	xfree(xkb->ctrls);
 	xkb->ctrls= NULL;
     }
     return;
@@ -286,7 +286,7 @@ static void
 XkbFreeIndicatorMaps(XkbDescPtr xkb)
 {
     if ((xkb!=NULL)&&(xkb->indicators!=NULL)) {
-	_XkbFree(xkb->indicators);
+	xfree(xkb->indicators);
 	xkb->indicators= NULL;
     }
     return;
@@ -330,6 +330,6 @@ XkbFreeKeyboard(XkbDescPtr xkb,unsigned which,Bool freeAll)
     if (which&XkbControlsMask)
 	XkbFreeControls(xkb,XkbAllControlsMask,True);
     if (freeAll)
-	_XkbFree(xkb);
+	xfree(xkb);
     return;
 }
