diff --git a/hw/xfree86/os-support/shared/sigio.c b/hw/xfree86/os-support/shared/sigio.c
index 54c02cc..2565782 100644
--- a/hw/xfree86/os-support/shared/sigio.c
+++ b/hw/xfree86/os-support/shared/sigio.c
@@ -63,6 +63,10 @@
 # include "xf86_OSlib.h"
 # include "inputstr.h"
 
+#ifdef HAVE_STROPTS_H
+# include <stropts.h>
+#endif
+
 /*
  * Linux libc5 defines FASYNC, but not O_ASYNC.  Don't know if it is
  * functional or not.
@@ -139,6 +143,7 @@ xf86InstallSIGIOHandler(int fd, void (*f)(int, void *), void *closure)
     struct sigaction osa;
     int	i;
     int blocked;
+    int installed = FALSE;
 
     for (i = 0; i < MAX_FUNCS; i++)
     {
@@ -147,15 +152,30 @@ xf86InstallSIGIOHandler(int fd, void (*f)(int, void *), void *closure)
 	    if (xf86IsPipe (fd))
 		return 0;
 	    blocked = xf86BlockSIGIO();
+#ifdef O_ASYNC
 	    if (fcntl(fd, F_SETFL, fcntl(fd, F_GETFL) | O_ASYNC) == -1) {
 		xf86Msg(X_WARNING, "fcntl(%d, O_ASYNC): %s\n", 
 			fd, strerror(errno));
-		xf86UnblockSIGIO(blocked);
-		return 0;
-	    }
-	    if (fcntl(fd, F_SETOWN, getpid()) == -1) {
+	    } else {
+		if (fcntl(fd, F_SETOWN, getpid()) != -1) {
 		xf86Msg(X_WARNING, "fcntl(%d, F_SETOWN): %s\n", 
 			fd, strerror(errno));
+		} else {
+		    installed = TRUE;
+		}
+	    }
+#endif
+#ifdef I_SETSIG /* System V Streams - used on Solaris for input devices */
+	    if (!installed && isastream(fd)) {
+		if (ioctl(fd, I_SETSIG, S_INPUT | S_ERROR | S_HANGUP) == -1) {
+		    xf86Msg(X_WARNING, "fcntl(%d, I_SETSIG): %s\n",
+			    fd, strerror(errno));
+		} else {
+		    installed = TRUE;
+		}
+	    }
+#endif
+	    if (!installed) {
 		xf86UnblockSIGIO(blocked);
 		return 0;
 	    }
@@ -221,7 +241,17 @@ xf86RemoveSIGIOHandler(int fd)
     }
     if (ret)
     {
+#ifdef O_ASYNC
 	fcntl(fd, F_SETFL, fcntl(fd, F_GETFL) & ~O_ASYNC);
+#endif
+#ifdef I_SETSIG
+	if (isastream(fd)) {
+	    if (ioctl(fd, I_SETSIG, 0) == -1) {
+		xf86Msg(X_WARNING, "fcntl(%d, I_SETSIG, 0): %s\n",
+			fd, strerror(errno));
+	    }
+	}
+#endif
 	xf86SigIOMax = max;
 	xf86SigIOMaxFd = maxfd;
 	if (!max)
