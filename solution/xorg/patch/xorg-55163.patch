diff --git a/glx/glthread.c b/glx/glthread.c
index 5da7e43..fd4c6cc 100644
--- a/glx/glthread.c
+++ b/glx/glthread.c
@@ -22,13 +22,11 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-
 /*
  * XXX There's probably some work to do in order to make this file
  * truly reusable outside of Mesa.
  */
 
-
 #ifdef HAVE_DIX_CONFIG_H
 #include <dix-config.h>
 #include <X11/Xfuncproto.h>
@@ -38,7 +36,6 @@
 #include <stdio.h>
 #include "glthread.h"
 
-
 /*
  * This file should still compile even when THREADS is not defined.
  * This is to make things easier to deal with on the makefile scene..
@@ -53,7 +50,6 @@
 #define GET_TSD_ERROR "_glthread_: failed to get thread specific data"
 #define SET_TSD_ERROR "_glthread_: thread failed to set thread specific data"
 
-
 /*
  * Magic number to determine if a TSD object has been initialized.
  * Kind of a hack but there doesn't appear to be a better cross-platform
@@ -61,8 +57,6 @@
  */
 #define INIT_MAGIC 0xff8adc98
 
-
-
 /*
  * POSIX Threads -- The best way to go if your platform supports them.
  *                  Solaris >= 2.5 have POSIX threads, IRIX >= 6.4 reportedly
@@ -78,7 +72,6 @@ _glthread_GetID(void)
    return (unsigned long) pthread_self();
 }
 
-
 void
 _glthread_InitTSD(_glthread_TSD *tsd)
 {
@@ -89,7 +82,6 @@ _glthread_InitTSD(_glthread_TSD *tsd)
    tsd->initMagic = INIT_MAGIC;
 }
 
-
 void *
 _glthread_GetTSD(_glthread_TSD *tsd)
 {
@@ -99,7 +91,6 @@ _glthread_GetTSD(_glthread_TSD *tsd)
    return pthread_getspecific(tsd->key);
 }
 
-
 void
 _glthread_SetTSD(_glthread_TSD *tsd, void *ptr)
 {
@@ -121,7 +112,8 @@ _glthread_SetTSD(_glthread_TSD *tsd, void *ptr)
  */
 #ifdef WIN32_THREADS
 
-void FreeTSD(_glthread_TSD *p)
+void
+FreeTSD(_glthread_TSD * p)
 {
    if (p->initMagic==INIT_MAGIC) {
       TlsFree(p->key);
@@ -129,7 +121,8 @@ void FreeTSD(_glthread_TSD *p)
    }
 }
 
-void InsteadOf_exit(int nCode)
+void
+InsteadOf_exit(int nCode)
 {
    DWORD dwErr=GetLastError();
 }
@@ -140,7 +133,6 @@ _glthread_GetID(void)
    return GetCurrentThreadId();
 }
 
-
 void
 _glthread_InitTSD(_glthread_TSD *tsd)
 {
@@ -152,7 +144,6 @@ _glthread_InitTSD(_glthread_TSD *tsd)
    tsd->initMagic = INIT_MAGIC;
 }
 
-
 void *
 _glthread_GetTSD(_glthread_TSD *tsd)
 {
@@ -162,7 +153,6 @@ _glthread_GetTSD(_glthread_TSD *tsd)
    return TlsGetValue(tsd->key);
 }
 
-
 void
 _glthread_SetTSD(_glthread_TSD *tsd, void *ptr)
 {
@@ -191,14 +181,12 @@ _glthread_GetID(void)
    return 0;
 }
 
-
 void
 _glthread_InitTSD(_glthread_TSD *tsd)
 {
    (void) tsd;
 }
 
-
 void *
 _glthread_GetTSD(_glthread_TSD *tsd)
 {
@@ -206,7 +194,6 @@ _glthread_GetTSD(_glthread_TSD *tsd)
    return NULL;
 }
 
-
 void
 _glthread_SetTSD(_glthread_TSD *tsd, void *ptr)
 {
@@ -214,5 +201,4 @@ _glthread_SetTSD(_glthread_TSD *tsd, void *ptr)
    (void) ptr;
 }
 
-
 #endif /* THREADS */
