diff --git a/hw/xfree86/xaa/xaaFillRect.c b/hw/xfree86/xaa/xaaFillRect.c
index e1fecab..ec0fb9d 100644
--- a/hw/xfree86/xaa/xaaFillRect.c
+++ b/hw/xfree86/xaa/xaaFillRect.c
@@ -14,7 +14,6 @@
 #include "xaa.h"
 #include "xaalocal.h"
 
-
 static void XAARenderSolidRects(GCPtr, int, BoxPtr, int, int);
 static void XAARenderColor8x8Rects(GCPtr, int, BoxPtr, int, int);
 static void XAARenderMono8x8Rects(GCPtr, int, BoxPtr, int, int);
@@ -25,12 +24,10 @@ static void XAARenderImageWriteRects(GCPtr, int, BoxPtr, int, int);
 static void XAARenderPixmapCopyRects(GCPtr, int, BoxPtr, int, int);
 
 void
-XAAPolyFillRect(
-    DrawablePtr pDraw,
-    GCPtr pGC,
-    int		nrectFill, 	/* number of rectangles to fill */
+XAAPolyFillRect(DrawablePtr pDraw, GCPtr pGC, int nrectFill,    /* number of rectangles to fill */
     xRectangle	*prectInit   	/* Pointer to first rectangle to fill */
-){
+    )
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     int		xorg = pDraw->x;
     int		yorg = pDraw->y;
@@ -106,41 +103,32 @@ XAAPolyFillRect(
 	}
     }
 
-    
     XAAClipAndRenderRects(pGC, function, nrectFill, prectInit, xorg, yorg);
 }
 
-
-
 	/*********************\
 	|     Solid Rects     |
 	\*********************/
 
 static void
-XAARenderSolidRects(
-   GCPtr pGC,
-   int nboxes,
-   BoxPtr pClipBoxes,
-   int xorg, int yorg
-){
+XAARenderSolidRects(GCPtr pGC,
+                    int nboxes, BoxPtr pClipBoxes, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
 
    (*infoRec->FillSolidRects) (infoRec->pScrn, 
-               pGC->fgPixel, pGC->alu, pGC->planemask, nboxes, pClipBoxes);
+                                pGC->fgPixel, pGC->alu, pGC->planemask, nboxes,
+                                pClipBoxes);
 }
 
-
 	/************************\
 	|     Mono 8x8 Rects     |
 	\************************/
 
 static void
-XAARenderMono8x8Rects(
-   GCPtr pGC,
-   int nboxes,
-   BoxPtr pClipBoxes,
-   int xorg, int yorg
-){
+XAARenderMono8x8Rects(GCPtr pGC,
+                      int nboxes, BoxPtr pClipBoxes, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    XAAPixmapPtr pPriv;
    int fg, bg;
@@ -148,26 +136,32 @@ XAARenderMono8x8Rects(
    switch(pGC->fillStyle) {
    case FillStippled:
       pPriv = XAA_GET_PIXMAP_PRIVATE(pGC->stipple);
-      fg = pGC->fgPixel;  bg = -1;
+        fg = pGC->fgPixel;
+        bg = -1;
       break;
    case FillOpaqueStippled:
       pPriv = XAA_GET_PIXMAP_PRIVATE(pGC->stipple);
-      fg = pGC->fgPixel;  bg = pGC->bgPixel;
+        fg = pGC->fgPixel;
+        bg = pGC->bgPixel;
       break;
    case FillTiled:
       pPriv = XAA_GET_PIXMAP_PRIVATE(pGC->tile.pixmap);
-      fg = pPriv->fg;  bg = pPriv->bg;
+        fg = pPriv->fg;
+        bg = pPriv->bg;
       break;
    default:	/* Muffle compiler */
       pPriv = NULL;	/* Kaboom */
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    }
 
    (*infoRec->FillMono8x8PatternRects) (infoRec->pScrn, 
                 fg, bg, pGC->alu, pGC->planemask, 
-                nboxes, pClipBoxes, pPriv->pattern0, pPriv->pattern1, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y));
+                                         nboxes, pClipBoxes, pPriv->pattern0,
+                                         pPriv->pattern1,
+                                         (xorg + pGC->patOrg.x),
+                                         (yorg + pGC->patOrg.y));
 }
 
 	/*************************\
@@ -175,12 +169,9 @@ XAARenderMono8x8Rects(
 	\*************************/
 
 static void
-XAARenderColor8x8Rects(
-   GCPtr pGC,
-   int nboxes,
-   BoxPtr pClipBoxes,
-   int xorg, int yorg
-){
+XAARenderColor8x8Rects(GCPtr pGC,
+                       int nboxes, BoxPtr pClipBoxes, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    XAACacheInfoPtr pCache;
    PixmapPtr pPix;
@@ -189,73 +180,73 @@ XAARenderColor8x8Rects(
    switch(pGC->fillStyle) {
    case FillStippled:
       pPix = pGC->stipple;
-      fg = pGC->fgPixel;  bg = -1;
+        fg = pGC->fgPixel;
+        bg = -1;
       break;
    case FillOpaqueStippled:
       pPix = pGC->stipple;
-      fg = pGC->fgPixel;  bg = pGC->bgPixel;
+        fg = pGC->fgPixel;
+        bg = pGC->bgPixel;
       break;
    case FillTiled:
       pPix = pGC->tile.pixmap;
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    default:	/* Muffle compiler */
       pPix = NULL;
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    }
 
    pCache = (*infoRec->CacheColor8x8Pattern)(infoRec->pScrn, pPix, fg, bg);
    (*infoRec->FillColor8x8PatternRects) (infoRec->pScrn,
-                pGC->alu, pGC->planemask, nboxes, pClipBoxes, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y), pCache);
+                                          pGC->alu, pGC->planemask, nboxes,
+                                          pClipBoxes, (xorg + pGC->patOrg.x),
+                                          (yorg + pGC->patOrg.y), pCache);
 }
 
-
 	/****************************\
 	|     Color Expand Rects     |
 	\****************************/
 
 static void
-XAARenderColorExpandRects(
-   GCPtr pGC,
-   int nboxes,
-   BoxPtr pClipBoxes,
-   int xorg, int yorg
-){
+XAARenderColorExpandRects(GCPtr pGC,
+                          int nboxes, BoxPtr pClipBoxes, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    int fg, bg;
 
    switch(pGC->fillStyle) {
    case FillStippled:
-      fg = pGC->fgPixel;  bg = -1;
+        fg = pGC->fgPixel;
+        bg = -1;
       break;
    case FillOpaqueStippled:
-      fg = pGC->fgPixel;  bg = pGC->bgPixel;
+        fg = pGC->fgPixel;
+        bg = pGC->bgPixel;
       break;
    default:	/* Muffle compiler */
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    }
 
    (*infoRec->FillColorExpandRects) (infoRec->pScrn, fg, bg, 
-                pGC->alu, pGC->planemask, nboxes, pClipBoxes, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y),
-		pGC->stipple);
+                                      pGC->alu, pGC->planemask, nboxes,
+                                      pClipBoxes, (xorg + pGC->patOrg.x),
+                                      (yorg + pGC->patOrg.y), pGC->stipple);
 }
 
-
 	/*************************\
 	|     Cache Blt Rects     |
 	\*************************/
 
 static void
-XAARenderCacheBltRects(
-   GCPtr pGC,
-   int nboxes,
-   BoxPtr pClipBoxes,
-   int xorg, int yorg
-){
+XAARenderCacheBltRects(GCPtr pGC,
+                       int nboxes, BoxPtr pClipBoxes, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    XAACacheInfoPtr pCache;
 
@@ -278,162 +269,144 @@ XAARenderCacheBltRects(
 
    (*infoRec->FillCacheBltRects) (infoRec->pScrn, pGC->alu, 
                 pGC->planemask, nboxes, pClipBoxes, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y), pCache);
+                                   (xorg + pGC->patOrg.x),
+                                   (yorg + pGC->patOrg.y), pCache);
 }
 
-
 	/****************************\
 	|     Cache Expand Rects     |
 	\****************************/
 
 static void
-XAARenderCacheExpandRects(
-   GCPtr pGC,
-   int nboxes,
-   BoxPtr pClipBoxes,
-   int xorg, int yorg
-){
+XAARenderCacheExpandRects(GCPtr pGC,
+                          int nboxes, BoxPtr pClipBoxes, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    int fg, bg;
 
    switch(pGC->fillStyle) {
    case FillStippled:
-      fg = pGC->fgPixel;  bg = -1;
+        fg = pGC->fgPixel;
+        bg = -1;
       break;
    case FillOpaqueStippled:
-      fg = pGC->fgPixel;  bg = pGC->bgPixel;
+        fg = pGC->fgPixel;
+        bg = pGC->bgPixel;
       break;
    default:	/* Muffle compiler */
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    }
 
    (*infoRec->FillCacheExpandRects) (infoRec->pScrn, fg, bg,
-                pGC->alu, pGC->planemask, nboxes, pClipBoxes, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y), 
-                pGC->stipple);
+                                      pGC->alu, pGC->planemask, nboxes,
+                                      pClipBoxes, (xorg + pGC->patOrg.x),
+                                      (yorg + pGC->patOrg.y), pGC->stipple);
 }
 
-
-
 	/***************************\
 	|     Image Write Rects     |
 	\***************************/
 
 static void
-XAARenderImageWriteRects(
-   GCPtr pGC,
-   int nboxes,
-   BoxPtr pClipBoxes,
-   int xorg, int yorg
-){
+XAARenderImageWriteRects(GCPtr pGC,
+                         int nboxes, BoxPtr pClipBoxes, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
 
    (*infoRec->FillImageWriteRects) (infoRec->pScrn, pGC->alu, 
                 pGC->planemask, nboxes, pClipBoxes, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y),
-                pGC->tile.pixmap);
+                                     (xorg + pGC->patOrg.x),
+                                     (yorg + pGC->patOrg.y), pGC->tile.pixmap);
 }
 
-
-
 	/***************************\
 	|     Pixmap Copy Rects     |
 	\***************************/
 
 static void
-XAARenderPixmapCopyRects(
-   GCPtr pGC,
-   int nboxes,
-   BoxPtr pClipBoxes,
-   int xorg, int yorg
-){
+XAARenderPixmapCopyRects(GCPtr pGC,
+                         int nboxes, BoxPtr pClipBoxes, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    XAACacheInfoPtr pCache = &(infoRec->ScratchCacheInfoRec);
    XAAPixmapPtr pPriv = XAA_GET_PIXMAP_PRIVATE(pGC->tile.pixmap);
 
    pCache->x = pPriv->offscreenArea->box.x1;
    pCache->y = pPriv->offscreenArea->box.y1;
-   pCache->w = pCache->orig_w = 
-		pPriv->offscreenArea->box.x2 - pCache->x;
-   pCache->h = pCache->orig_h = 
-		pPriv->offscreenArea->box.y2 - pCache->y;
+    pCache->w = pCache->orig_w = pPriv->offscreenArea->box.x2 - pCache->x;
+    pCache->h = pCache->orig_h = pPriv->offscreenArea->box.y2 - pCache->y;
    pCache->trans_color = -1;
 
    (*infoRec->FillCacheBltRects) (infoRec->pScrn, pGC->alu, 
                 pGC->planemask, nboxes, pClipBoxes, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y), 
-                pCache);
+                                   (xorg + pGC->patOrg.x),
+                                   (yorg + pGC->patOrg.y), pCache);
 }
 
-
-
 	/************\
 	|   Solid    |
 	\************/
 
 void
-XAAFillSolidRects(
-    ScrnInfoPtr pScrn,
-    int	fg, int rop,
-    unsigned int planemask,
-    int		nBox, 		/* number of rectangles to fill */
+XAAFillSolidRects(ScrnInfoPtr pScrn, int fg, int rop, unsigned int planemask, int nBox, /* number of rectangles to fill */
     BoxPtr	pBox  		/* Pointer to first rectangle to fill */
-){
+    )
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
 
     (*infoRec->SetupForSolidFill)(pScrn, fg, rop, planemask);
      while(nBox--) {
         (*infoRec->SubsequentSolidFillRect)(pScrn, pBox->x1, pBox->y1,
- 			pBox->x2 - pBox->x1, pBox->y2 - pBox->y1);
+                                             pBox->x2 - pBox->x1,
+                                             pBox->y2 - pBox->y1);
 	pBox++;
      }
      SET_SYNC_FLAG(infoRec);
 }
 
-
-
-
 	/*********************\
 	|  8x8 Mono Patterns  |
 	\*********************/
 
-
 void
-XAAFillMono8x8PatternRectsScreenOrigin(
-    ScrnInfoPtr pScrn,
+XAAFillMono8x8PatternRectsScreenOrigin(ScrnInfoPtr pScrn,
     int	fg, int bg, int rop,
     unsigned int planemask,
     int	nBox,
     BoxPtr pBox,
     int pattern0, int pattern1,
-    int xorigin, int yorigin
-)
+                                       int xorigin, int yorigin)
 {
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int patx = pattern0, paty = pattern1;
     int xorg = (-xorigin) & 0x07;
     int yorg = (-yorigin) & 0x07;
 
-
     if(infoRec->Mono8x8PatternFillFlags & HARDWARE_PATTERN_PROGRAMMED_BITS) {
    	if(!(infoRec->Mono8x8PatternFillFlags & 		
 				HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	    XAARotateMonoPattern(&patx, &paty, xorg, yorg,
 				(infoRec->Mono8x8PatternFillFlags &
 				 BIT_ORDER_IN_BYTE_MSBFIRST));
-	    xorg = patx; yorg = paty;
+            xorg = patx;
+            yorg = paty;
         }
-    } else {
+    }
+    else {
 	XAACacheInfoPtr pCache =
 		(*infoRec->CacheMono8x8Pattern)(pScrn, pattern0, pattern1);
-	patx = pCache->x;  paty = pCache->y;
+        patx = pCache->x;
+        paty = pCache->y;
    	if(!(infoRec->Mono8x8PatternFillFlags & 
 				HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	    int slot = (yorg << 3) + xorg;
+
 	    patx += pCache->offsets[slot].x;
 	    paty += pCache->offsets[slot].y;
-	    xorg = patx;  yorg = paty;
+            xorg = patx;
+            yorg = paty;
 	}	
     }
 
@@ -442,40 +415,37 @@ XAAFillMono8x8PatternRectsScreenOrigin(
 
      while(nBox--) {
         (*infoRec->SubsequentMono8x8PatternFillRect)(pScrn, 
-			xorg, yorg, pBox->x1, pBox->y1,
- 			pBox->x2 - pBox->x1, pBox->y2 - pBox->y1);
+                                                      xorg, yorg, pBox->x1,
+                                                      pBox->y1,
+                                                      pBox->x2 - pBox->x1,
+                                                      pBox->y2 - pBox->y1);
 	pBox++;
      }
      SET_SYNC_FLAG(infoRec);
 }
 
 void
-XAAFillMono8x8PatternRects(
-    ScrnInfoPtr pScrn,
+XAAFillMono8x8PatternRects(ScrnInfoPtr pScrn,
     int	fg, int bg, int rop,
     unsigned int planemask,
     int	nBox,
     BoxPtr pBox,
-    int pattern0, int pattern1,
-    int xorigin, int yorigin
-)
+                           int pattern0, int pattern1, int xorigin, int yorigin)
 {
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int patx = pattern0, paty = pattern1;
     int xorg, yorg;
     XAACacheInfoPtr pCache = NULL;
 
-
     if(!(infoRec->Mono8x8PatternFillFlags & HARDWARE_PATTERN_PROGRAMMED_BITS)){
 	pCache = (*infoRec->CacheMono8x8Pattern)(pScrn, pattern0, pattern1);
-	patx = pCache->x;  paty = pCache->y;
+        patx = pCache->x;
+        paty = pCache->y;
     }
 
-
     (*infoRec->SetupForMono8x8PatternFill)(pScrn, patx, paty,
 					fg, bg, rop, planemask);
 
-
      while(nBox--) {
 	xorg = (pBox->x1 - xorigin) & 0x07;
 	yorg = (pBox->y1 - yorigin) & 0x07;
@@ -484,43 +454,46 @@ XAAFillMono8x8PatternRects(
 				HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	    if(infoRec->Mono8x8PatternFillFlags & 
 				HARDWARE_PATTERN_PROGRAMMED_BITS) {
-		patx = pattern0; paty = pattern1;
+                patx = pattern0;
+                paty = pattern1;
 		XAARotateMonoPattern(&patx, &paty, xorg, yorg,
 				(infoRec->Mono8x8PatternFillFlags & 		
 				BIT_ORDER_IN_BYTE_MSBFIRST));
-		xorg = patx; yorg = paty;
-	    } else {
+                xorg = patx;
+                yorg = paty;
+            }
+            else {
 		int slot = (yorg << 3) + xorg;
+
 	    	xorg = patx + pCache->offsets[slot].x;
 	    	yorg = paty + pCache->offsets[slot].y;
 	    }
         }
 
         (*infoRec->SubsequentMono8x8PatternFillRect)(pScrn, 
-			xorg, yorg, pBox->x1, pBox->y1,
- 			pBox->x2 - pBox->x1, pBox->y2 - pBox->y1);
+                                                      xorg, yorg, pBox->x1,
+                                                      pBox->y1,
+                                                      pBox->x2 - pBox->x1,
+                                                      pBox->y2 - pBox->y1);
 	pBox++;
      }
 
      SET_SYNC_FLAG(infoRec);
 }
 
-
 	/**********************\
 	|  8x8 Color Patterns  |
 	\**********************/
 
-
 void
-XAAFillColor8x8PatternRectsScreenOrigin(
-   ScrnInfoPtr pScrn,
+XAAFillColor8x8PatternRectsScreenOrigin(ScrnInfoPtr pScrn,
    int rop,
    unsigned int planemask,
    int nBox,
    BoxPtr pBox,
    int xorigin, int yorigin,
-   XAACacheInfoPtr pCache
-){
+                                        XAACacheInfoPtr pCache)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int patx = pCache->x, paty = pCache->y;
     int xorg = (-xorigin) & 0x07;
@@ -529,38 +502,42 @@ XAAFillColor8x8PatternRectsScreenOrigin(
     if(!(infoRec->Color8x8PatternFillFlags & 
 					HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	int slot = (yorg << 3) + xorg;
+
 	paty += pCache->offsets[slot].y;
 	patx += pCache->offsets[slot].x;
-	xorg = patx;  yorg = paty;
+        xorg = patx;
+        yorg = paty;
     }	
 
     (*infoRec->SetupForColor8x8PatternFill)(pScrn, patx, paty,
-			 rop, planemask, pCache->trans_color);
+                                             rop, planemask,
+                                             pCache->trans_color);
 
     while(nBox--) {
         (*infoRec->SubsequentColor8x8PatternFillRect)(pScrn, 
-			xorg, yorg, pBox->x1, pBox->y1,
- 			pBox->x2 - pBox->x1, pBox->y2 - pBox->y1);
+                                                       xorg, yorg, pBox->x1,
+                                                       pBox->y1,
+                                                       pBox->x2 - pBox->x1,
+                                                       pBox->y2 - pBox->y1);
 	pBox++;
     }
     SET_SYNC_FLAG(infoRec);
 }
 
 void
-XAAFillColor8x8PatternRects(
-   ScrnInfoPtr pScrn,
+XAAFillColor8x8PatternRects(ScrnInfoPtr pScrn,
    int rop,
    unsigned int planemask,
    int nBox,
    BoxPtr pBox,
-   int xorigin, int yorigin,
-   XAACacheInfoPtr pCache
-){
+                            int xorigin, int yorigin, XAACacheInfoPtr pCache)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int xorg, yorg;
 
     (*infoRec->SetupForColor8x8PatternFill)(pScrn, pCache->x, pCache->y,
-			 rop, planemask, pCache->trans_color);
+                                             rop, planemask,
+                                             pCache->trans_color);
 
      while(nBox--) {
 	xorg = (pBox->x1 - xorigin) & 0x07;
@@ -569,34 +546,33 @@ XAAFillColor8x8PatternRects(
    	if(!(infoRec->Color8x8PatternFillFlags & 		
 				HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	    int slot = (yorg << 3) + xorg;
+
 	    yorg = pCache->y + pCache->offsets[slot].y;
 	    xorg = pCache->x + pCache->offsets[slot].x;
         }
 
         (*infoRec->SubsequentColor8x8PatternFillRect)(pScrn, 
-			xorg, yorg, pBox->x1, pBox->y1,
- 			pBox->x2 - pBox->x1, pBox->y2 - pBox->y1);
+                                                       xorg, yorg, pBox->x1,
+                                                       pBox->y1,
+                                                       pBox->x2 - pBox->x1,
+                                                       pBox->y2 - pBox->y1);
 	pBox++;
      }
 
      SET_SYNC_FLAG(infoRec);
 }
 
-
 	/***************\
 	|  Cache Blits  |
 	\***************/
 
 void
-XAAFillCacheBltRects(
-   ScrnInfoPtr pScrn,
+XAAFillCacheBltRects(ScrnInfoPtr pScrn,
    int rop,
    unsigned int planemask,
    int nBox,
-   BoxPtr pBox,
-   int xorg, int yorg,
-   XAACacheInfoPtr pCache
-){
+                     BoxPtr pBox, int xorg, int yorg, XAACacheInfoPtr pCache)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int x, y, phaseY, phaseX, skipleft, height, width, w, blit_w, blit_h;
 
@@ -606,41 +582,57 @@ XAAFillCacheBltRects(
     while(nBox--) {
 	y = pBox->y1;
 	phaseY = (y - yorg) % pCache->orig_h;
-	if(phaseY < 0) phaseY += pCache->orig_h;
+        if (phaseY < 0)
+            phaseY += pCache->orig_h;
 	phaseX = (pBox->x1 - xorg) % pCache->orig_w;
-	if(phaseX < 0) phaseX += pCache->orig_w;
+        if (phaseX < 0)
+            phaseX += pCache->orig_w;
 	height = pBox->y2 - y;
 	width = pBox->x2 - pBox->x1;
 	
 #if 0
 	if (rop == GXcopy) {
 	    while(1) {
-		w = width; skipleft = phaseX; x = pBox->x1;
+                w = width;
+                skipleft = phaseX;
+                x = pBox->x1;
 		blit_h = pCache->h - phaseY;
-		if(blit_h > height) blit_h = height;
+                if (blit_h > height)
+                    blit_h = height;
 	
 		while(1) {
 		    blit_w = pCache->w - skipleft;
-		    if(blit_w > w) blit_w = w;
+                    if (blit_w > w)
+                        blit_w = w;
 		    (*infoRec->SubsequentScreenToScreenCopy)(pScrn,
-			pCache->x + skipleft, pCache->y + phaseY,
-			x, y, blit_w, blit_h);
+                                                              pCache->x +
+                                                              skipleft,
+                                                              pCache->y +
+                                                              phaseY, x, y,
+                                                              blit_w, blit_h);
 		    w -= blit_w;
-		    if(!w) break;
+                    if (!w)
+                        break;
 		    x += blit_w;
 		    skipleft = (skipleft + blit_w) % pCache->orig_w;
-		    if(blit_w >= pCache->orig_w) break;
+                    if (blit_w >= pCache->orig_w)
+                        break;
 		}
 
 		/* Expand horizontally */
 		if (w) {
 		    skipleft -= phaseX;
-		    if (skipleft < 0) skipleft += pCache->orig_w;
+                    if (skipleft < 0)
+                        skipleft += pCache->orig_w;
 		    blit_w = x - pBox->x1 - skipleft;
 		    while(w) {
-			if (blit_w > w) blit_w = w;
+                        if (blit_w > w)
+                            blit_w = w;
 			(*infoRec->SubsequentScreenToScreenCopy)(pScrn,
-			    pBox->x1 + skipleft, y, x, y, blit_w, blit_h);
+                                                                  pBox->x1 +
+                                                                  skipleft, y,
+                                                                  x, y, blit_w,
+                                                                  blit_h);
 			w -= blit_w;
 			x += blit_w;
 			blit_w <<= 1;
@@ -648,48 +640,64 @@ XAAFillCacheBltRects(
 		}
 
 		height -= blit_h;
-		if(!height) break;
+                if (!height)
+                    break;
 		y += blit_h;
 		phaseY = (phaseY + blit_h) % pCache->orig_h;
-		if(blit_h >= pCache->orig_h) break;
+                if (blit_h >= pCache->orig_h)
+                    break;
 	    }
 
 	    /* Expand vertically */
 	    if (height) {
 		blit_w = pBox->x2 - pBox->x1;
 		phaseY -= (pBox->y1 - yorg) % pCache->orig_h;
-		if (phaseY < 0) phaseY += pCache->orig_h;
+                if (phaseY < 0)
+                    phaseY += pCache->orig_h;
 		blit_h = y - pBox->y1  - phaseY;
 		while(height) {
-		    if (blit_h > height) blit_h = height;
+                    if (blit_h > height)
+                        blit_h = height;
 		    (*infoRec->SubsequentScreenToScreenCopy)(pScrn, pBox->x1,
-			pBox->y1 + phaseY, pBox->x1, y, blit_w, blit_h);
+                                                              pBox->y1 + phaseY,
+                                                              pBox->x1, y,
+                                                              blit_w, blit_h);
 		    height -= blit_h;
 		    y += blit_h;
 		    blit_h <<= 1;
 		}
 	    }
-	} else 
+        }
+        else
 #endif
 	{
 	    while(1) {
-		w = width; skipleft = phaseX; x = pBox->x1;
+                w = width;
+                skipleft = phaseX;
+                x = pBox->x1;
 		blit_h = pCache->h - phaseY;
-		if(blit_h > height) blit_h = height;
+                if (blit_h > height)
+                    blit_h = height;
 	
 		while(1) {
 		    blit_w = pCache->w - skipleft;
-		    if(blit_w > w) blit_w = w;
+                    if (blit_w > w)
+                        blit_w = w;
 		    (*infoRec->SubsequentScreenToScreenCopy)(pScrn,
-			pCache->x + skipleft, pCache->y + phaseY,
-			x, y, blit_w, blit_h);
+                                                              pCache->x +
+                                                              skipleft,
+                                                              pCache->y +
+                                                              phaseY, x, y,
+                                                              blit_w, blit_h);
 		    w -= blit_w;
-		    if(!w) break;
+                    if (!w)
+                        break;
 		    x += blit_w;
 		    skipleft = (skipleft + blit_w) % pCache->orig_w;
 		}
 		height -= blit_h;
-		if(!height) break;
+                if (!height)
+                    break;
 		y += blit_h;
 		phaseY = (phaseY + blit_h) % pCache->orig_h;
 	    }
@@ -700,25 +708,17 @@ XAAFillCacheBltRects(
     SET_SYNC_FLAG(infoRec);
 }
 
-
-
-
 	/*******************\
 	|  Cache Expansion  |
 	\*******************/
 
-
-
 void
-XAAFillCacheExpandRects(
-   ScrnInfoPtr pScrn,
+XAAFillCacheExpandRects(ScrnInfoPtr pScrn,
    int fg, int bg, int rop,
    unsigned int planemask,
    int nBox,
-   BoxPtr pBox,
-   int xorg, int yorg,
-   PixmapPtr pPix
-){
+                        BoxPtr pBox, int xorg, int yorg, PixmapPtr pPix)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int x, y, phaseY, phaseX, skipleft, height, width, w, blit_w, blit_h;
     int cacheWidth;
@@ -735,30 +735,42 @@ XAAFillCacheExpandRects(
     while(nBox--) {
 	y = pBox->y1;
 	phaseY = (y - yorg) % pCache->orig_h;
-	if(phaseY < 0) phaseY += pCache->orig_h;
+        if (phaseY < 0)
+            phaseY += pCache->orig_h;
 	phaseX = (pBox->x1 - xorg) % pCache->orig_w;
-	if(phaseX < 0) phaseX += pCache->orig_w;
+        if (phaseX < 0)
+            phaseX += pCache->orig_w;
 	height = pBox->y2 - y;
 	width = pBox->x2 - pBox->x1;
 	
 	while(1) {
-	    w = width; skipleft = phaseX; x = pBox->x1;
+            w = width;
+            skipleft = phaseX;
+            x = pBox->x1;
 	    blit_h = pCache->h - phaseY;
-	    if(blit_h > height) blit_h = height;
+            if (blit_h > height)
+                blit_h = height;
 	
 	    while(1) {
 		blit_w = cacheWidth - skipleft;
-		if(blit_w > w) blit_w = w;
-		(*infoRec->SubsequentScreenToScreenColorExpandFill)(
-			pScrn, x, y, blit_w, blit_h,
-			pCache->x, pCache->y + phaseY, skipleft);
+                if (blit_w > w)
+                    blit_w = w;
+                (*infoRec->SubsequentScreenToScreenColorExpandFill) (pScrn, x,
+                                                                     y, blit_w,
+                                                                     blit_h,
+                                                                     pCache->x,
+                                                                     pCache->y +
+                                                                     phaseY,
+                                                                     skipleft);
 		w -= blit_w;
-		if(!w) break;
+                if (!w)
+                    break;
 		x += blit_w;
 		skipleft = (skipleft + blit_w) % pCache->orig_w;
 	    }
 	    height -= blit_h;
-	    if(!height) break;
+            if (!height)
+                break;
 	    y += blit_h;
 	    phaseY = (phaseY + blit_h) % pCache->orig_h;
 	}
@@ -768,26 +780,19 @@ XAAFillCacheExpandRects(
     SET_SYNC_FLAG(infoRec);
 }
 
-
 	/******************\
 	|   Image Writes   |
 	\******************/
 
-
-
 /*  This requires all LEFT_EDGE clipping.  You get too many problems
     with reading past the edge of the pattern otherwise */
 
 static void
-WriteColumn(
-    ScrnInfoPtr pScrn,
+WriteColumn(ScrnInfoPtr pScrn,
     unsigned char *pSrc,
     int x, int y, int w, int h,
-    int xoff, int yoff,
-    int pHeight,
-    int srcwidth,
-    int Bpp
-) {
+            int xoff, int yoff, int pHeight, int srcwidth, int Bpp)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     unsigned char *src;
     Bool PlusOne = FALSE;
@@ -832,15 +837,18 @@ WriteColumn(
 		src = pSrc;
 	    }
         }
-    } else {
+    }
+    else {
         if(srcwidth == (dwords << 2)) {
            int maxLines = infoRec->ImageWriteRange/dwords;
 	   int step;
 
 	   while(h) {
 		step = pHeight - yoff;
-		if(step > maxLines) step = maxLines;
-		if(step > h) step = h;
+                if (step > maxLines)
+                    step = maxLines;
+                if (step > h)
+                    step = h;
 
                 XAAMoveDWORDS((CARD32*)infoRec->ImageWriteBase,
                         (CARD32*)src, dwords * step);
@@ -853,7 +861,8 @@ WriteColumn(
 		}
                 h -= step;		
 	   }
-        } else {
+        }
+        else {
             while(h--) {
                 XAAMoveDWORDS((CARD32*)infoRec->ImageWriteBase,
                         (CARD32*)src, dwords);
@@ -869,20 +878,18 @@ WriteColumn(
 
     if(PlusOne) {
         CARD32* base = (CARD32*)infoRec->ImageWriteBase;
+
         *base = 0x00000000;
     }
 }
 
 void
-XAAFillImageWriteRects(
-    ScrnInfoPtr pScrn,
+XAAFillImageWriteRects(ScrnInfoPtr pScrn,
     int rop,
     unsigned int planemask,
     int nBox,
-    BoxPtr pBox,
-    int xorg, int yorg,
-    PixmapPtr pPix
-){
+                       BoxPtr pBox, int xorg, int yorg, PixmapPtr pPix)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int x, phaseY, phaseX, height, width, blit_w;
     int pHeight = pPix->drawable.height;
@@ -891,26 +898,31 @@ XAAFillImageWriteRects(
     int srcwidth = pPix->devKind;
 
     (*infoRec->SetupForImageWrite)(pScrn, rop, planemask, -1,
-		pPix->drawable.bitsPerPixel, pPix->drawable.depth);
+                                    pPix->drawable.bitsPerPixel,
+                                    pPix->drawable.depth);
 
     while(nBox--) {
 	x = pBox->x1;
 	phaseY = (pBox->y1 - yorg) % pHeight;
-	if(phaseY < 0) phaseY += pHeight;
+        if (phaseY < 0)
+            phaseY += pHeight;
 	phaseX = (x - xorg) % pWidth;
-	if(phaseX < 0) phaseX += pWidth;
+        if (phaseX < 0)
+            phaseX += pWidth;
 	height = pBox->y2 - pBox->y1;
 	width = pBox->x2 - x;
 	
 	while(1) {
 	    blit_w = pWidth - phaseX;
-	    if(blit_w > width) blit_w = width;
+            if (blit_w > width)
+                blit_w = width;
 
 	    WriteColumn(pScrn, pPix->devPrivate.ptr, x, pBox->y1, 
 		blit_w, height, phaseX, phaseY, pHeight, srcwidth, Bpp);
 
 	    width -= blit_w;
-	    if(!width) break;
+            if (!width)
+                break;
 	    x += blit_w;
 	    phaseX = (phaseX + blit_w) % pWidth;
 	}
@@ -919,23 +931,19 @@ XAAFillImageWriteRects(
 
     if(infoRec->ImageWriteFlags & SYNC_AFTER_IMAGE_WRITE)
         (*infoRec->Sync)(pScrn);
-    else SET_SYNC_FLAG(infoRec);
+    else
+        SET_SYNC_FLAG(infoRec);
 }
 
-
 	/*************\
 	|  Utilities  |
 	\*************/
 
-
 void
-XAAClipAndRenderRects(
-   GCPtr pGC, 
+XAAClipAndRenderRects(GCPtr pGC,
    ClipAndRenderRectsFunc BoxFunc, 
-   int nrectFill, 
-   xRectangle *prect, 
-   int xorg, int yorg
-){
+                      int nrectFill, xRectangle *prect, int xorg, int yorg)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     int 	Right, Bottom, MaxBoxes;
     BoxPtr 	pextent, pboxClipped, pboxClippedBase;
@@ -966,7 +974,8 @@ XAAClipAndRenderRects(
 		}
 	    }
     	}
-    } else {
+    }
+    else {
 	pextent = RegionExtents(pGC->pCompositeClip);
     	while (nrectFill--) {
 	    int n;
@@ -1017,14 +1026,11 @@ XAAClipAndRenderRects(
 					xorg, yorg); 
 }
 
-
 int
-XAAGetRectClipBoxes(
-    GCPtr pGC,
+XAAGetRectClipBoxes(GCPtr pGC,
     BoxPtr pboxClippedBase,
-    int nrectFill,
-    xRectangle *prectInit
-){
+                    int nrectFill, xRectangle *prectInit)
+{
     int 	Right, Bottom;
     BoxPtr 	pextent, pboxClipped = pboxClippedBase;
     xRectangle	*prect = prectInit;
@@ -1048,7 +1054,8 @@ XAAGetRectClipBoxes(
 		pboxClipped++;
 	    }
     	}
-    } else {
+    }
+    else {
 	pextent = RegionExtents(prgnClip);
     	while (nrectFill--) {
 	    int n;
@@ -1092,4 +1099,3 @@ XAAGetRectClipBoxes(
 
     return pboxClipped - pboxClippedBase;
 }
-
