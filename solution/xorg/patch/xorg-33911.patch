diff --git a/Xext/shape.c b/Xext/shape.c
index 0f49f73..12ab53a 100644
--- a/Xext/shape.c
+++ b/Xext/shape.c
@@ -43,6 +43,7 @@ in this Software without prior written authorization from The Open Group.
 #include "dixstruct.h"
 #include "resource.h"
 #include "opaque.h"
+#include "registry.h"
 #define _SHAPE_SERVER_	/* don't want Xlib structures */
 #include <X11/extensions/shapestr.h>
 #include "regionstr.h"
@@ -111,9 +112,6 @@ static DISPATCH_PROC(SProcShapeSelectInput);
 #include "panoramiXsrv.h"
 #endif
 
-#if 0
-static unsigned char ShapeReqCode = 0;
-#endif
 static int ShapeEventBase = 0;
 static RESTYPE ClientType, EventType; /* resource types for event masks */
 
@@ -154,12 +152,32 @@ ShapeExtensionInit(void)
 				 ProcShapeDispatch, SProcShapeDispatch,
 				 ShapeResetProc, StandardMinorOpcode)))
     {
-#if 0
-	ShapeReqCode = (unsigned char)extEntry->base;
-#endif
 	ShapeEventBase = extEntry->eventBase;
 	EventSwapVector[ShapeEventBase] = (EventSwapPtr) SShapeNotifyEvent;
-    }
+    } else
+	return;
+
+    RegisterRequestName(extEntry->base, X_ShapeQueryVersion,
+			SHAPENAME ":QueryVersion");
+    RegisterRequestName(extEntry->base, X_ShapeRectangles,
+			SHAPENAME ":Rectangles");
+    RegisterRequestName(extEntry->base, X_ShapeMask,
+			SHAPENAME ":Mask");
+    RegisterRequestName(extEntry->base, X_ShapeCombine,
+			SHAPENAME ":Combine");
+    RegisterRequestName(extEntry->base, X_ShapeOffset,
+			SHAPENAME ":Offset");
+    RegisterRequestName(extEntry->base, X_ShapeQueryExtents,
+			SHAPENAME ":QueryExtents");
+    RegisterRequestName(extEntry->base, X_ShapeSelectInput,
+			SHAPENAME ":SelectInput");
+    RegisterRequestName(extEntry->base, X_ShapeInputSelected,
+			SHAPENAME ":InputSelected");
+    RegisterRequestName(extEntry->base, X_ShapeGetRectangles,
+			SHAPENAME ":GetRectangles");
+
+    RegisterEventName(ShapeEventBase + ShapeNotify,
+		      SHAPENAME ":Notify");
 }
 
 /*ARGSUSED*/
