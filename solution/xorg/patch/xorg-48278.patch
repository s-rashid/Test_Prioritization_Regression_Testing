diff --git a/dix/gc.c b/dix/gc.c
index 6490165..3058e15 100644
--- a/dix/gc.c
+++ b/dix/gc.c
@@ -263,21 +263,23 @@ dixChangeGC(ClientPtr client, GC *pGC, BITS32 mask, CARD32 *pC32, ChangeGCValPtr
 		break;
 	    }
 	    case GCTile:
-	    {
-		XID newpix = 0;
 		if (pUnion)
 		{
 		    NEXT_PTR(PixmapPtr, pPixmap);
-		    rc = Success;
 		}
 		else
 		{
+		    XID newpix;
 		    NEXTVAL(XID, newpix);
 		    rc = dixLookupResourceByType((pointer *)&pPixmap, newpix,
 					   RT_PIXMAP, client, DixReadAccess);
-		}
-		if (rc == Success)
+		    if (rc != Success)
 		{
+			clientErrorValue = newpix;
+			error = (rc == BadValue) ? BadPixmap : rc;
+			break;
+		    }
+		}
 		    if ((pPixmap->drawable.depth != pGC->depth) ||
 			(pPixmap->drawable.pScreen != pGC->pScreen))
 		    {
@@ -291,30 +293,25 @@ dixChangeGC(ClientPtr client, GC *pGC, BITS32 mask, CARD32 *pC32, ChangeGCValPtr
 			pGC->tileIsPixel = FALSE;
 			pGC->tile.pixmap = pPixmap;
 		    }
-		}
-		else
-		{
-		    clientErrorValue = newpix;
-		    error = (rc == BadValue) ? BadPixmap : rc;
-		}
 		break;
-	    }
 	    case GCStipple:
-	    {
-		XID newstipple = 0;
 		if (pUnion)
 		{
 		    NEXT_PTR(PixmapPtr, pPixmap);
-		    rc = Success;
 		}
 		else
 		{
+		    XID newstipple;
 		    NEXTVAL(XID, newstipple)
 		    rc = dixLookupResourceByType((pointer *)&pPixmap, newstipple,
 					   RT_PIXMAP, client, DixReadAccess);
-		}
-		if (rc == Success)
+		    if (rc != Success)
 		{
+			clientErrorValue = newstipple;
+			error = (rc == BadValue) ? BadPixmap : rc;
+			break;
+		    }
+		}
 		    if ((pPixmap->drawable.depth != 1) ||
 			(pPixmap->drawable.pScreen != pGC->pScreen))
 		    {
@@ -327,14 +324,7 @@ dixChangeGC(ClientPtr client, GC *pGC, BITS32 mask, CARD32 *pC32, ChangeGCValPtr
 			    (* pGC->pScreen->DestroyPixmap)(pGC->stipple);
 			pGC->stipple = pPixmap;
 		    }
-		}
-		else
-		{
-		    clientErrorValue = newstipple;
-		    error = (rc == BadValue) ? BadPixmap : rc;
-		}
 		break;
-	    }
 	    case GCTileStipXOrigin:
 		NEXTVAL(INT16, pGC->patOrg.x);
 		break;
@@ -344,30 +334,27 @@ dixChangeGC(ClientPtr client, GC *pGC, BITS32 mask, CARD32 *pC32, ChangeGCValPtr
 	    case GCFont:
     	    {
 		FontPtr	pFont;
-		XID newfont = 0;
 		if (pUnion)
 		{
 		    NEXT_PTR(FontPtr, pFont);
-		    rc = Success;
 		}
 		else
 		{
+		    XID newfont;
 		    NEXTVAL(XID, newfont)
 		    rc = dixLookupResourceByType((pointer *)&pFont, newfont,
 					   RT_FONT, client, DixUseAccess);
-		}
-		if (rc == Success)
+		    if (rc != Success)
 		{
+			clientErrorValue = newfont;
+			error = (rc == BadValue) ? BadFont : rc;
+			break;
+		    }
+		}
 		    pFont->refcnt++;
 		    if (pGC->font)
     		        CloseFont(pGC->font, (Font)0);
 		    pGC->font = pFont;
-		 }
-		else
-		{
-		    clientErrorValue = newfont;
-		    error = (rc == BadValue) ? BadFont : rc;
-		}
 		break;
 	    }
 	    case GCSubwindowMode:
@@ -403,22 +390,16 @@ dixChangeGC(ClientPtr client, GC *pGC, BITS32 mask, CARD32 *pC32, ChangeGCValPtr
 		NEXTVAL(INT16, pGC->clipOrg.y);
 		break;
 	    case GCClipMask:
-	    {
-		Pixmap pid = 0;
-		int    clipType = 0;
-
 		if (pUnion)
 		{
 		    NEXT_PTR(PixmapPtr, pPixmap);
 		}
 		else
 		{
+		    Pixmap pid;
 		    NEXTVAL(Pixmap, pid)
 		    if (pid == None)
-		    {
-			clipType = CT_NONE;
 			pPixmap = NullPixmap;
-		    }
 		    else {
 			rc = dixLookupResourceByType((pointer *)&pPixmap, pid,
 					       RT_PIXMAP, client,
@@ -426,6 +407,7 @@ dixChangeGC(ClientPtr client, GC *pGC, BITS32 mask, CARD32 *pC32, ChangeGCValPtr
 			if (rc != Success) {
 			    clientErrorValue = pid;
 			    error = (rc == BadValue) ? BadPixmap : rc;
+			    break;
 			}
 		    }
 		}
@@ -436,20 +418,13 @@ dixChangeGC(ClientPtr client, GC *pGC, BITS32 mask, CARD32 *pC32, ChangeGCValPtr
 			(pPixmap->drawable.pScreen != pGC->pScreen))
 		    {
 			error = BadMatch;
+			break;
 		    }
-		    else
-		    {
-			clipType = CT_PIXMAP;
 			pPixmap->refcnt++;
 		    }
-		}
-		if(error == Success)
-		{
-		    (*pGC->funcs->ChangeClip)(pGC, clipType,
+		(*pGC->funcs->ChangeClip)(pGC, pPixmap ? CT_PIXMAP : CT_NONE,
 					      (pointer)pPixmap, 0);
-		}
 		break;
-	    }
 	    case GCDashOffset:
 		NEXTVAL(INT16, pGC->dashOffset);
 		break;
