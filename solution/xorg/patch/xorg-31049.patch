diff --git a/hw/xfree86/int10/xf86int10.c b/hw/xfree86/int10/xf86int10.c
index d67fc42..7538042 100644
--- a/hw/xfree86/int10/xf86int10.c
+++ b/hw/xfree86/int10/xf86int10.c
@@ -594,14 +594,19 @@ int42_handler(xf86Int10InfoPtr pInt)
 #define DEVICE_NOT_FOUND        0x86
 #define BAD_REGISTER_NUMBER     0x87
 
+/**
+ * \todo
+ * Eliminate the reliance on \c xf86FindPciDeviceVendor and
+ * \c xf86FindPciDeviceClass in this function.  Create new functions in this
+ * file that directly use libpciaccess to replace them.
+ */
 static int
 int1A_handler(xf86Int10InfoPtr pInt)
 {
-    PCITAG tag;
-    struct pci_device * pvp;
+    struct pci_device * const pvp = xf86GetPciInfoForEntity(pInt->entityIndex);
     struct pci_device * dev;
 
-    if (!(pvp = xf86GetPciInfoForEntity(pInt->entityIndex)))
+    if (pvp == NULL)
 	return 0; /* oops */
 
 #ifdef PRINT_INT
@@ -631,10 +636,10 @@ int1A_handler(xf86Int10InfoPtr pInt)
 	}
 #ifdef SHOW_ALL_DEVICES
 	else
-	if ((pvp = xf86FindPciDeviceVendor(X86_EDX, X86_ECX, X86_ESI, pvp))) {
+	if ((dev = xf86FindPciDeviceVendor(X86_EDX, X86_ECX, X86_ESI, pvp))) {
 	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
-	    X86_EBX = pciSlotBX(pvp);
+	    X86_EBX = pciSlotBX(dev);
 	}
 #endif
 	else {
@@ -652,12 +657,12 @@ int1A_handler(xf86Int10InfoPtr pInt)
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
 	}
 #ifdef SHOW_ALL_DEVICES
-	else if ((pvp = xf86FindPciClass(X86_CL, X86_CH,
+	else if ((dev = xf86FindPciClass(X86_CL, X86_CH,
 					 (X86_ECX & 0xffff0000) >> 16,
 					 X86_ESI, pvp))) {
-	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
+p	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
-	    X86_EBX = pciSlotBX(pvp);
+	    X86_EBX = pciSlotBX(dev);
 	}
 #endif
 	else {
