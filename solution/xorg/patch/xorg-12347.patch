diff --git a/hw/kdrive/ati/radeon_composite.c b/hw/kdrive/ati/radeon_composite.c
index e2fdbe8..19b2d25 100644
--- a/hw/kdrive/ati/radeon_composite.c
+++ b/hw/kdrive/ati/radeon_composite.c
@@ -196,25 +196,28 @@ R100TextureSetup(PicturePtr pPict, PixmapPtr pPix, int unit)
 	if ((txpitch & 0x1f) != 0)
 		ATI_FALLBACK(("Bad texture pitch 0x%x\n", txpitch));
 
-	/* RADEON_REG_PP_TXFILTER_0,
-	 * RADEON_REG_PP_TXFORMAT_0,
-	 * RADEON_REG_PP_TXOFFSET_0
-	 */
-	BEGIN_DMA(4);
-	OUT_RING(DMA_PACKET0(RADEON_REG_PP_TXFILTER_0 + 0x18 * unit, 3));
-	OUT_RING(0);
-	OUT_RING(txformat);
-	OUT_RING(txoffset);
-	END_DMA();
-
-	/* RADEON_REG_PP_TEX_SIZE_0,
-	 * RADEON_REG_PP_TEX_PITCH_0
-	 */
-	BEGIN_DMA(3);
-	OUT_RING(DMA_PACKET0(RADEON_REG_PP_TEX_SIZE_0 + 0x8 * unit, 2));
-	OUT_RING((pPix->drawable.width - 1) |
+	BEGIN_DMA(7);
+	if (unit == 0) {
+		OUT_RING(DMA_PACKET0(RADEON_REG_PP_TXFILTER_0, 3));
+		OUT_RING_REG(RADEON_REG_PP_TXFILTER_0, 0);
+		OUT_RING_REG(RADEON_REG_PP_TXFORMAT_0, txformat);
+		OUT_RING_REG(RADEON_REG_PP_TXOFFSET_0, txoffset);
+		OUT_RING(DMA_PACKET0(RADEON_REG_PP_TEX_SIZE_0, 2));
+		OUT_RING_REG(RADEON_REG_PP_TEX_SIZE_0,
+		    (pPix->drawable.width - 1) |
 	    ((pPix->drawable.height - 1) << RADEON_TEX_VSIZE_SHIFT));
-	OUT_RING(txpitch - 32);
+		OUT_RING_REG(RADEON_REG_PP_TEX_PITCH_0, txpitch - 32);
+	} else {
+		OUT_RING(DMA_PACKET0(RADEON_REG_PP_TXFILTER_1, 3));
+		OUT_RING_REG(RADEON_REG_PP_TXFILTER_1, 0);
+		OUT_RING_REG(RADEON_REG_PP_TXFORMAT_1, txformat);
+		OUT_RING_REG(RADEON_REG_PP_TXOFFSET_1, txoffset);
+		OUT_RING(DMA_PACKET0(RADEON_REG_PP_TEX_SIZE_1, 2));
+		OUT_RING_REG(RADEON_REG_PP_TEX_SIZE_1,
+		    (pPix->drawable.width - 1) |
+		    ((pPix->drawable.height - 1) << RADEON_TEX_VSIZE_SHIFT));
+		OUT_RING_REG(RADEON_REG_PP_TEX_PITCH_1, txpitch - 32);
+	}
 	END_DMA();
 
 	if (pPict->transform != 0) {
@@ -302,14 +305,11 @@ R100PrepareComposite(int op, PicturePtr pSrcPicture, PicturePtr pMaskPicture,
 
 	BEGIN_DMA(12);
 
-	/* RADEON_REG_PP_CNTL,
-	 * RADEON_REG_RB3D_CNTL, 
-	 * RADEON_REG_RB3D_COLOROFFSET
-	 */
 	OUT_RING(DMA_PACKET0(RADEON_REG_PP_CNTL, 3));
-	OUT_RING(pp_cntl);
-	OUT_RING(dst_format | RADEON_ALPHA_BLEND_ENABLE);
-	OUT_RING(dst_offset);
+	OUT_RING_REG(RADEON_REG_PP_CNTL, pp_cntl);
+	OUT_RING_REG(RADEON_REG_RB3D_CNTL,
+	    dst_format | RADEON_ALPHA_BLEND_ENABLE);
+	OUT_RING_REG(RADEON_REG_RB3D_COLOROFFSET, dst_offset);
 
 	OUT_REG(RADEON_REG_RB3D_COLORPITCH, dst_pitch >> pixel_shift);
 
@@ -428,21 +428,29 @@ R200TextureSetup(PicturePtr pPict, PixmapPtr pPix, int unit)
 	if ((txpitch & 0x1f) != 0)
 		ATI_FALLBACK(("Bad texture pitch 0x%x\n", txpitch));
 
-	/* R200_REG_PP_TXFILTER_0,
-	 * R200_REG_PP_TXFORMAT_0,
-	 * R200_REG_PP_TXFORMAT_X_0,
-	 * R200_REG_PP_TXSIZE_0,
-	 * R200_REG_PP_TXPITCH_0
-	 */
+	if (unit == 0) {
 	BEGIN_DMA(6);
 	OUT_RING(DMA_PACKET0(R200_REG_PP_TXFILTER_0 + 0x20 * unit, 5));
-	OUT_RING(0);
-	OUT_RING(txformat);
-	OUT_RING(0);
-	OUT_RING((pPix->drawable.width - 1) |
+		OUT_RING_REG(R200_REG_PP_TXFILTER_0, 0);
+		OUT_RING_REG(R200_REG_PP_TXFORMAT_0, txformat);
+		OUT_RING_REG(R200_REG_PP_TXFORMAT_X_0, 0);
+		OUT_RING_REG(R200_REG_PP_TXSIZE_0,
+		    (pPix->drawable.width - 1) |
+		    ((pPix->drawable.height - 1) << RADEON_TEX_VSIZE_SHIFT));
+		OUT_RING_REG(R200_REG_PP_TXPITCH_0, txpitch - 32);
+		END_DMA();
+	} else {
+		BEGIN_DMA(6);
+		OUT_RING(DMA_PACKET0(R200_REG_PP_TXFILTER_1, 5));
+		OUT_RING_REG(R200_REG_PP_TXFILTER_1, 0);
+		OUT_RING_REG(R200_REG_PP_TXFORMAT_1, txformat);
+		OUT_RING_REG(R200_REG_PP_TXFORMAT_X_1, 0);
+		OUT_RING_REG(R200_REG_PP_TXSIZE_1,
+		    (pPix->drawable.width - 1) |
 	    ((pPix->drawable.height - 1) << RADEON_TEX_VSIZE_SHIFT));
-	OUT_RING(txpitch - 32);
+		OUT_RING_REG(R200_REG_PP_TXPITCH_1, txpitch - 32);
 	END_DMA();
+	}
 
 	BEGIN_DMA(2);
 	OUT_REG(R200_PP_TXOFFSET_0 + 0x18 * unit, txoffset);
@@ -521,16 +529,12 @@ R200PrepareComposite(int op, PicturePtr pSrcPicture, PicturePtr pMaskPicture,
 
 	RadeonSwitchTo3D(atis);
 
-	BEGIN_DMA(20);
+	BEGIN_DMA(17);
 
-	/* RADEON_REG_PP_CNTL,
-	 * RADEON_REG_RB3D_CNTL, 
-	 * RADEON_REG_RB3D_COLOROFFSET
-	 */
 	OUT_RING(DMA_PACKET0(RADEON_REG_PP_CNTL, 3));
-	OUT_RING(pp_cntl);
-	OUT_RING(dst_format | RADEON_ALPHA_BLEND_ENABLE);
-	OUT_RING(dst_offset);
+	OUT_RING_REG(RADEON_REG_PP_CNTL, pp_cntl);
+	OUT_RING_REG(RADEON_REG_RB3D_CNTL, dst_format | RADEON_ALPHA_BLEND_ENABLE);
+	OUT_RING_REG(RADEON_REG_RB3D_COLOROFFSET, dst_offset);
 
 	OUT_REG(R200_REG_SE_VTX_FMT_0, R200_VTX_XY);
 	OUT_REG(R200_REG_SE_VTX_FMT_1,
@@ -567,14 +571,13 @@ R200PrepareComposite(int op, PicturePtr pSrcPicture, PicturePtr pMaskPicture,
 		ablend |= R200_TXA_ARG_B_ZERO | R200_TXA_COMP_ARG_B;
 	}
 
-	OUT_REG(R200_REG_PP_TXCBLEND_0, cblend);
-	OUT_REG(R200_REG_PP_TXABLEND_0, ablend);
-	OUT_REG(R200_REG_PP_TXCBLEND2_0,
-	    R200_TXC_CLAMP_0_1 |
-	    R200_TXC_OUTPUT_REG_R0);
-	OUT_REG(R200_REG_PP_TXABLEND2_0,
-	    R200_TXA_CLAMP_0_1 |
-	    R200_TXA_OUTPUT_REG_R0);
+	OUT_RING(DMA_PACKET0(R200_REG_PP_TXCBLEND_0, 4));
+	OUT_RING_REG(R200_REG_PP_TXCBLEND_0, cblend);
+	OUT_RING_REG(R200_REG_PP_TXCBLEND2_0,
+	    R200_TXC_CLAMP_0_1 | R200_TXC_OUTPUT_REG_R0);
+	OUT_RING_REG(R200_REG_PP_TXABLEND_0, ablend);
+	OUT_RING_REG(R200_REG_PP_TXABLEND2_0,
+	    R200_TXA_CLAMP_0_1 | R200_TXA_OUTPUT_REG_R0);
 
 	/* Op operator. */
 	blendcntl = RadeonBlendOp[op].blend_cntl;
@@ -730,34 +733,28 @@ RadeonPrepareTrapezoids(PicturePtr pDstPicture, PixmapPtr pDst)
 
 	BEGIN_DMA(8);
 
-	/* RADEON_REG_PP_CNTL,
-	 * RADEON_REG_RB3D_CNTL, 
-	 * RADEON_REG_RB3D_COLOROFFSET,
-	 * RADEON_REG_RE_WIDTH_HEIGHT,
-	 * RADEON_REG_RB3D_COLORPITCH
-	 */
 	OUT_RING(DMA_PACKET0(RADEON_REG_PP_CNTL, 5));
-	OUT_RING(RADEON_TEX_BLEND_0_ENABLE);
-	OUT_RING(RADEON_COLOR_FORMAT_RGB8 | RADEON_ALPHA_BLEND_ENABLE);
-	OUT_RING(dst_offset);
-	OUT_RING(((pDst->drawable.height - 1) << 16) |
+	OUT_RING_REG(RADEON_REG_PP_CNTL, RADEON_TEX_BLEND_0_ENABLE);
+	OUT_RING_REG(RADEON_REG_RB3D_CNTL,
+	    RADEON_COLOR_FORMAT_RGB8 | RADEON_ALPHA_BLEND_ENABLE);
+	OUT_RING_REG(RADEON_REG_RB3D_COLOROFFSET, dst_offset);
+	OUT_RING_REG(RADEON_REG_RE_WIDTH_HEIGHT,
+	    ((pDst->drawable.height - 1) << 16) |
 	    (pDst->drawable.width - 1));
-	OUT_RING(dst_pitch >> pixel_shift);
+	OUT_RING_REG(RADEON_REG_RB3D_COLORPITCH, dst_pitch >> pixel_shift);
 	OUT_REG(RADEON_REG_RB3D_BLENDCNTL, RadeonBlendOp[PictOpAdd].blend_cntl);
 	END_DMA();
 
 	if (atic->is_r100) {
 		BEGIN_DMA(4);
-		/* RADEON_REG_PP_TXCBLEND_0,
-		 * RADEON_REG_PP_TXABLEND_0,
-		 * RADEON_REG_PP_TFACTOR_0
-		 */
 		OUT_RING(DMA_PACKET0(RADEON_REG_PP_TXCBLEND_0, 3));
-		OUT_RING(RADEON_BLEND_CTL_ADD | RADEON_CLAMP_TX |
+		OUT_RING_REG(RADEON_REG_PP_TXCBLEND_0,
+		    RADEON_BLEND_CTL_ADD | RADEON_CLAMP_TX |
 		    RADEON_COLOR_ARG_C_TFACTOR_ALPHA);
-		OUT_RING(RADEON_BLEND_CTL_ADD | RADEON_CLAMP_TX |
+		OUT_RING_REG(RADEON_REG_PP_TXABLEND_0,
+		    RADEON_BLEND_CTL_ADD | RADEON_CLAMP_TX |
 		    RADEON_ALPHA_ARG_C_TFACTOR_ALPHA);
-		OUT_RING(0x01000000);
+		OUT_RING_REG(RADEON_REG_PP_TFACTOR_0, 0x01000000);
 		END_DMA();
 	} else if (atic->is_r200) {
 		BEGIN_DMA(14);
