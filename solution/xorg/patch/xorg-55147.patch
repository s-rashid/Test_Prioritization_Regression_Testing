diff --git a/fb/fbsolid.c b/fb/fbsolid.c
index 4143785..cad286a 100644
--- a/fb/fbsolid.c
+++ b/fb/fbsolid.c
@@ -31,21 +31,13 @@
 void
 fbSolid (FbBits	    *dst,
 	 FbStride   dstStride,
-	 int	    dstX,
-	 int	    bpp,
-
-	 int	    width,
-	 int	    height,
-
-	 FbBits	    and,
-	 FbBits	    xor)
+        int dstX, int bpp, int width, int height, FbBits and, FbBits xor)
 {
     FbBits  startmask, endmask;
     int	    n, nmiddle;
     int	    startbyte, endbyte;
 
-    if (bpp == 24 && (!FbCheck24Pix(and) || !FbCheck24Pix(xor)))
-    {
+    if (bpp == 24 && (!FbCheck24Pix(and) || !FbCheck24Pix(xor))) {
 	fbSolid24 (dst, dstStride, dstX, width, height, and, xor);
 	return;
     }
@@ -56,10 +48,8 @@ fbSolid (FbBits	    *dst,
     if (startmask)
 	dstStride--;
     dstStride -= nmiddle;
-    while (height--)
-    {
-	if (startmask)
-	{
+    while (height--) {
+        if (startmask) {
 	    FbDoLeftMaskByteRRop(dst,startbyte,startmask,and,xor);
 	    dst++;
 	}
@@ -68,8 +58,7 @@ fbSolid (FbBits	    *dst,
 	    while (n--)
 		WRITE(dst++, xor);
 	else
-	    while (n--)
-	    {
+            while (n--) {
 		WRITE(dst, FbDoRRop (READ(dst), and, xor));
                 dst++;
 	    }
@@ -82,13 +71,7 @@ fbSolid (FbBits	    *dst,
 void
 fbSolid24 (FbBits   *dst,
 	   FbStride dstStride,
-	   int	    dstX,
-
-	   int	    width,
-	   int	    height,
-
-	   FbBits   and,
-	   FbBits   xor)
+          int dstX, int width, int height, FbBits and, FbBits xor)
 {
     FbBits  startmask, endmask;
     FbBits  xor0 = 0, xor1 = 0, xor2 = 0;
@@ -115,16 +98,14 @@ fbSolid24 (FbBits   *dst,
     rotS = rot;
     xor = FbRot24(xor,rotS);
     and = FbRot24(and,rotS);
-    if (startmask)
-    {
+    if (startmask) {
 	xorS = xor;
 	andS = and;
 	xor = FbNext24Pix(xor);
 	and = FbNext24Pix(and);
     }
     
-    if (nmiddle)
-    {
+    if (nmiddle) {
 	xor0 = xor;
 	and0 = and;
 	xor1 = FbNext24Pix(xor0);
@@ -133,8 +114,7 @@ fbSolid24 (FbBits   *dst,
 	and2 = FbNext24Pix(and1);
     }
     
-    if (endmask)
-    {
+    if (endmask) {
 	switch (nmiddle % 3) {
 	case 0:
 	    xorE = xor;
@@ -151,37 +131,29 @@ fbSolid24 (FbBits   *dst,
 	}
     }
     
-    while (height--)
-    {
-	if (startmask)
-	{
+    while (height--) {
+        if (startmask) {
 	    WRITE(dst, FbDoMaskRRop(READ(dst), andS, xorS, startmask));
             dst++;
 	}
 	n = nmiddle;
-	if (!and0)
-	{
-	    while (n >= 3)
-	    {
+        if (!and0) {
+            while (n >= 3) {
 		WRITE(dst++, xor0);
 		WRITE(dst++, xor1);
 		WRITE(dst++, xor2);
 		n -= 3;
 	    }
-	    if (n)
-	    {
+            if (n) {
 		WRITE(dst++, xor0);
 		n--;
-		if (n)
-		{
+                if (n) {
 		    WRITE(dst++, xor1);
 		}
 	    }
 	}
-	else
-	{
-	    while (n >= 3)
-	    {
+        else {
+            while (n >= 3) {
 		WRITE(dst, FbDoRRop (READ(dst), and0, xor0));
                 dst++;
 		WRITE(dst, FbDoRRop (READ(dst), and1, xor1));
@@ -190,13 +162,11 @@ fbSolid24 (FbBits   *dst,
                 dst++;
 		n -= 3;
 	    }
-	    if (n)
-	    {
+            if (n) {
 		WRITE(dst, FbDoRRop (READ(dst), and0, xor0));
                 dst++;
 		n--;
-		if (n)
-		{
+                if (n) {
 		    WRITE(dst, FbDoRRop (READ(dst), and1, xor1));
                     dst++;
 		}
