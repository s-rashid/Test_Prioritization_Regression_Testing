diff --git a/hw/xfree86/dixmods/glxmodule.c b/hw/xfree86/dixmods/glxmodule.c
index f1c861b..847f0d4 100644
--- a/hw/xfree86/dixmods/glxmodule.c
+++ b/hw/xfree86/dixmods/glxmodule.c
@@ -41,17 +41,7 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #include "colormap.h"
 #include "micmap.h"
 #include "globals.h"
-
-typedef struct __GLXscreen __GLXscreen;
-typedef struct __GLXprovider __GLXprovider;
-struct __GLXprovider {
-    __GLXscreen *(*screenProbe)(ScreenPtr pScreen);
-    const char    *name;
-    __GLXprovider *next;
-};
-
-extern void GlxPushProvider(__GLXprovider *provider);
-extern void GlxExtensionInit(void);
+#include "glxserver.h"
 
 static MODULESETUPPROTO(glxSetup);
 
@@ -113,7 +103,6 @@ static __GLXprovider __glXMesaProxyProvider = {
     NULL
 };
 
-
 static pointer
 glxSetup(pointer module, pointer opts, int *errmaj, int *errmin)
 {
@@ -138,8 +127,22 @@ glxSetup(pointer module, pointer opts, int *errmaj, int *errmin)
 	GlxPushProvider(provider);
     }
 
+    switch (xf86Info.glxVisuals) {
+    case XF86_GlxVisualsMinimal:
+	GlxSetVisualConfig(GLX_MINIMAL_VISUALS);
+	xf86Msg(xf86Info.aiglxFrom, "Exporting only minimal set of GLX visuals\n");
+	break;
+    case XF86_GlxVisualsTypical:
+	GlxSetVisualConfig(GLX_TYPICAL_VISUALS);
+	xf86Msg(xf86Info.aiglxFrom, "Exporting typical set of GLX visuals\n");
+	break;
+    case XF86_GlxVisualsAll:
+	GlxSetVisualConfig(GLX_ALL_VISUALS);
+	xf86Msg(xf86Info.aiglxFrom, "Exporting all GLX visuals\n");
+	break;
+    }
+
     LoadExtension(&GLXExt, FALSE);
 
- bail:
     return module;
 }
