diff --git a/render/picturestr.h b/render/picturestr.h
index 500f800..194db11 100644
--- a/render/picturestr.h
+++ b/render/picturestr.h
@@ -396,11 +396,11 @@ typedef struct _PictureScreen {
 
 } PictureScreenRec, *PictureScreenPtr;
 
-extern DevPrivateKey	PictureScreenPrivateKey;
-extern DevPrivateKey	PictureWindowPrivateKey;
-extern RESTYPE		PictureType;
-extern RESTYPE		PictFormatType;
-extern RESTYPE		GlyphSetType;
+extern _X_EXPORT DevPrivateKey	PictureScreenPrivateKey;
+extern _X_EXPORT DevPrivateKey	PictureWindowPrivateKey;
+extern _X_EXPORT RESTYPE	PictureType;
+extern _X_EXPORT RESTYPE	PictFormatType;
+extern _X_EXPORT RESTYPE	GlyphSetType;
 
 #define GetPictureScreen(s) ((PictureScreenPtr)dixLookupPrivate(&(s)->devPrivates, PictureScreenPrivateKey))
 #define GetPictureScreenIfSet(s) GetPictureScreen(s)
@@ -424,76 +424,76 @@ extern RESTYPE		GlyphSetType;
     } \
 } \
 
-Bool
+extern _X_EXPORT Bool
 PictureDestroyWindow (WindowPtr pWindow);
 
-Bool
+extern _X_EXPORT Bool
 PictureCloseScreen (int Index, ScreenPtr pScreen);
 
-void
+extern _X_EXPORT void
 PictureStoreColors (ColormapPtr pColormap, int ndef, xColorItem *pdef);
 
-Bool
+extern _X_EXPORT Bool
 PictureInitIndexedFormat (ScreenPtr pScreen, PictFormatPtr format);
 
-Bool
+extern _X_EXPORT Bool
 PictureSetSubpixelOrder (ScreenPtr pScreen, int subpixel);
 
-int
+extern _X_EXPORT int
 PictureGetSubpixelOrder (ScreenPtr pScreen);
 
-PictFormatPtr
+extern _X_EXPORT PictFormatPtr
 PictureCreateDefaultFormats (ScreenPtr pScreen, int *nformatp);
 
-PictFormatPtr
+extern _X_EXPORT PictFormatPtr
 PictureMatchVisual (ScreenPtr pScreen, int depth, VisualPtr pVisual);
 
-PictFormatPtr
+extern _X_EXPORT PictFormatPtr
 PictureMatchFormat (ScreenPtr pScreen, int depth, CARD32 format);
 
-Bool
+extern _X_EXPORT Bool
 PictureInit (ScreenPtr pScreen, PictFormatPtr formats, int nformats);
 
-int
+extern _X_EXPORT int
 PictureGetFilterId (char *filter, int len, Bool makeit);
 
-char *
+extern _X_EXPORT char *
 PictureGetFilterName (int id);
 
-int
+extern _X_EXPORT int
 PictureAddFilter (ScreenPtr			    pScreen,
 		  char				    *filter,
 		  PictFilterValidateParamsProcPtr   ValidateParams,
 		  int				    width,
 		  int				    height);
 
-Bool
+extern _X_EXPORT Bool
 PictureSetFilterAlias (ScreenPtr pScreen, char *filter, char *alias);
 
-Bool
+extern _X_EXPORT Bool
 PictureSetDefaultFilters (ScreenPtr pScreen);
 
-void
+extern _X_EXPORT void
 PictureResetFilters (ScreenPtr pScreen);
 
-PictFilterPtr
+extern _X_EXPORT PictFilterPtr
 PictureFindFilter (ScreenPtr pScreen, char *name, int len);
 
-int
+extern _X_EXPORT int
 SetPicturePictFilter (PicturePtr pPicture, PictFilterPtr pFilter,
 		      xFixed *params, int nparams);
 
-int
+extern _X_EXPORT int
 SetPictureFilter (PicturePtr pPicture, char *name, int len,
 		  xFixed *params, int nparams);
 
-Bool
+extern _X_EXPORT Bool
 PictureFinishInit (void);
 
-void
+extern _X_EXPORT void
 SetPictureToDefaults (PicturePtr pPicture);
 
-PicturePtr
+extern _X_EXPORT PicturePtr
 CreatePicture (Picture		pid,
 	       DrawablePtr	pDrawable,
 	       PictFormatPtr	pFormat,
@@ -502,47 +502,47 @@ CreatePicture (Picture		pid,
 	       ClientPtr	client,
 	       int		*error);
 
-int
+extern _X_EXPORT int
 ChangePicture (PicturePtr	pPicture,
 	       Mask		vmask,
 	       XID		*vlist,
 	       DevUnion		*ulist,
 	       ClientPtr	client);
 
-int
+extern _X_EXPORT int
 SetPictureClipRects (PicturePtr	pPicture,
 		     int	xOrigin,
 		     int	yOrigin,
 		     int	nRect,
 		     xRectangle	*rects);
 
-int
+extern _X_EXPORT int
 SetPictureClipRegion (PicturePtr    pPicture,
 		      int	    xOrigin,
 		      int	    yOrigin,
 		      RegionPtr	    pRegion);
 
-int
+extern _X_EXPORT int
 SetPictureTransform (PicturePtr	    pPicture,
 		     PictTransform  *transform);
 
-void
+extern _X_EXPORT void
 CopyPicture (PicturePtr	pSrc,
 	     Mask	mask,
 	     PicturePtr	pDst);
 
-void
+extern _X_EXPORT void
 ValidatePicture(PicturePtr pPicture);
 
-int
+extern _X_EXPORT int
 FreePicture (pointer	pPicture,
 	     XID	pid);
 
-int
+extern _X_EXPORT int
 FreePictFormat (pointer	pPictFormat,
 		XID     pid);
 
-void
+extern _X_EXPORT void
 CompositePicture (CARD8		op,
 		  PicturePtr	pSrc,
 		  PicturePtr	pMask,
@@ -556,7 +556,7 @@ CompositePicture (CARD8		op,
 		  CARD16	width,
 		  CARD16	height);
 
-void
+extern _X_EXPORT void
 CompositeGlyphs (CARD8		op,
 		 PicturePtr	pSrc,
 		 PicturePtr	pDst,
@@ -567,14 +567,14 @@ CompositeGlyphs (CARD8		op,
 		 GlyphListPtr	lists,
 		 GlyphPtr	*glyphs);
 
-void
+extern _X_EXPORT void
 CompositeRects (CARD8		op,
 		PicturePtr	pDst,
 		xRenderColor	*color,
 		int		nRect,
 		xRectangle      *rects);
 
-void
+extern _X_EXPORT void
 CompositeTrapezoids (CARD8	    op,
 		     PicturePtr	    pSrc,
 		     PicturePtr	    pDst,
@@ -584,7 +584,7 @@ CompositeTrapezoids (CARD8	    op,
 		     int	    ntrap,
 		     xTrapezoid	    *traps);
 
-void
+extern _X_EXPORT void
 CompositeTriangles (CARD8	    op,
 		    PicturePtr	    pSrc,
 		    PicturePtr	    pDst,
@@ -594,7 +594,7 @@ CompositeTriangles (CARD8	    op,
 		    int		    ntriangles,
 		    xTriangle	    *triangles);
 
-void
+extern _X_EXPORT void
 CompositeTriStrip (CARD8	    op,
 		   PicturePtr	    pSrc,
 		   PicturePtr	    pDst,
@@ -604,7 +604,7 @@ CompositeTriStrip (CARD8	    op,
 		   int		    npoints,
 		   xPointFixed	    *points);
 
-void
+extern _X_EXPORT void
 CompositeTriFan (CARD8		op,
 		 PicturePtr	pSrc,
 		 PicturePtr	pDst,
@@ -614,32 +614,32 @@ CompositeTriFan (CARD8		op,
 		 int		npoints,
 		 xPointFixed	*points);
 
-CARD32
+extern _X_EXPORT CARD32
 PictureGradientColor (PictGradientStopPtr stop1,
 		      PictGradientStopPtr stop2,
 		      CARD32	          x);
 
-void RenderExtensionInit (void);
+extern _X_EXPORT void RenderExtensionInit (void);
 
-Bool
+extern _X_EXPORT Bool
 AnimCurInit (ScreenPtr pScreen);
 
-int
+extern _X_EXPORT int
 AnimCursorCreate (CursorPtr *cursors, CARD32 *deltas, int ncursor, CursorPtr *ppCursor, ClientPtr client, XID cid);
 
-void
+extern _X_EXPORT void
 AddTraps (PicturePtr	pPicture,
 	  INT16		xOff,
 	  INT16		yOff,
 	  int		ntraps,
 	  xTrap		*traps);
 
-PicturePtr
+extern _X_EXPORT PicturePtr
 CreateSolidPicture (Picture pid,
                     xRenderColor *color,
                     int *error);
 
-PicturePtr
+extern _X_EXPORT PicturePtr
 CreateLinearGradientPicture (Picture pid,
                              xPointFixed *p1,
                              xPointFixed *p2,
@@ -648,7 +648,7 @@ CreateLinearGradientPicture (Picture pid,
                              xRenderColor *colors,
                              int *error);
 
-PicturePtr
+extern _X_EXPORT PicturePtr
 CreateRadialGradientPicture (Picture pid,
                              xPointFixed *inner,
                              xPointFixed *outer,
@@ -659,7 +659,7 @@ CreateRadialGradientPicture (Picture pid,
                              xRenderColor *colors,
                              int *error);
 
-PicturePtr
+extern _X_EXPORT PicturePtr
 CreateConicalGradientPicture (Picture pid,
                               xPointFixed *center,
                               xFixed angle,
@@ -669,27 +669,27 @@ CreateConicalGradientPicture (Picture pid,
                               int *error);
 
 #ifdef PANORAMIX
-void PanoramiXRenderInit (void);
-void PanoramiXRenderReset (void);
+extern _X_EXPORT void PanoramiXRenderInit (void);
+extern _X_EXPORT void PanoramiXRenderReset (void);
 #endif
 
 /*
  * matrix.c
  */
 
-void
+extern _X_EXPORT void
 PictTransform_from_xRenderTransform (PictTransformPtr pict,
 				     xRenderTransform *render);
 
-void
+extern _X_EXPORT void
 xRenderTransform_from_PictTransform (xRenderTransform *render,
 				     PictTransformPtr pict);
 
-Bool
+extern _X_EXPORT Bool
 PictureTransformPoint (PictTransformPtr transform,
 		       PictVectorPtr	vector);
 
-Bool
+extern _X_EXPORT Bool
 PictureTransformPoint3d (PictTransformPtr transform,
                          PictVectorPtr	vector);
 
