diff --git a/hw/xfree86/xaa/xaaSpans.c b/hw/xfree86/xaa/xaaSpans.c
index a742cba..f03452a 100644
--- a/hw/xfree86/xaa/xaaSpans.c
+++ b/hw/xfree86/xaa/xaaSpans.c
@@ -16,31 +16,26 @@
 #include "xaa.h"
 #include "xaalocal.h"
 
-
-static void XAARenderSolidSpans(
-	GCPtr, int, DDXPointPtr, int*, int, int, int);
-static void XAARenderColor8x8Spans(
-	GCPtr, int, DDXPointPtr, int*, int, int, int);
-static void XAARenderMono8x8Spans(
-	GCPtr, int, DDXPointPtr, int*, int, int, int);
-static void XAARenderCacheBltSpans(
-	GCPtr, int, DDXPointPtr, int*, int, int, int);
-static void XAARenderColorExpandSpans(
-	GCPtr, int, DDXPointPtr, int*, int, int, int);
-static void XAARenderCacheExpandSpans(
-	GCPtr, int, DDXPointPtr, int*, int, int, int);
-static void XAARenderPixmapCopySpans(
-	GCPtr, int, DDXPointPtr, int*, int, int, int);
+static void XAARenderSolidSpans(GCPtr, int, DDXPointPtr, int *, int, int, int);
+static void XAARenderColor8x8Spans(GCPtr, int, DDXPointPtr, int *, int, int,
+                                   int);
+static void XAARenderMono8x8Spans(GCPtr, int, DDXPointPtr, int *, int, int,
+                                  int);
+static void XAARenderCacheBltSpans(GCPtr, int, DDXPointPtr, int *, int, int,
+                                   int);
+static void XAARenderColorExpandSpans(GCPtr, int, DDXPointPtr, int *, int, int,
+                                      int);
+static void XAARenderCacheExpandSpans(GCPtr, int, DDXPointPtr, int *, int, int,
+                                      int);
+static void XAARenderPixmapCopySpans(GCPtr, int, DDXPointPtr, int *, int, int,
+                                     int);
 
 void
-XAAFillSpans(
-    DrawablePtr pDraw,
-    GC		*pGC,
-    int		nInit,		/* number of spans to fill */
+XAAFillSpans(DrawablePtr pDraw, GC * pGC, int nInit,    /* number of spans to fill */
     DDXPointPtr pptInit,	/* pointer to list of start points */
     int *pwidthInit,		/* pointer to list of n widths */
-    int fSorted 
-){
+             int fSorted)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     int type = 0;
     ClipAndRenderSpansFunc function;
@@ -116,7 +111,6 @@ XAAFillSpans(
 	return;
     }
 
-
     if((nInit < 10) || (RegionNumRects(pGC->pCompositeClip) != 1))
 	fastClip = FALSE;
 
@@ -125,47 +119,39 @@ XAAFillSpans(
 	(*function)(pGC, nInit, pptInit, pwidthInit, fSorted, 
 					pDraw->x, pDraw->y);
 	infoRec->ClipBox = NULL;
-    } else
+    }
+    else
 	XAAClipAndRenderSpans(pGC, pptInit, pwidthInit, nInit, fSorted,
 					function, pDraw->x, pDraw->y);
 }
 
-
 	/*********************\
 	|     Solid Spans     |
 	\*********************/
 
-
 static void
-XAARenderSolidSpans(
-    GCPtr pGC,
+XAARenderSolidSpans(GCPtr pGC,
     int	n,
     DDXPointPtr ppt,
-    int *pwidth,
-    int fSorted,
-    int xorg, int yorg 
-){
+                    int *pwidth, int fSorted, int xorg, int yorg)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
 
     (*infoRec->FillSolidSpans) (infoRec->pScrn, pGC->fgPixel, 
-		pGC->alu, pGC->planemask, n, ppt, pwidth, fSorted);    
+                                pGC->alu, pGC->planemask, n, ppt, pwidth,
+                                fSorted);
 }
 
-
 	/************************\
 	|     Mono 8x8 Spans     |
 	\************************/
 
-
 static void
-XAARenderMono8x8Spans(
-    GCPtr pGC,
+XAARenderMono8x8Spans(GCPtr pGC,
     int	n,
     DDXPointPtr ppt,
-    int *pwidth,
-    int fSorted,
-    int xorg, int yorg 
-){
+                      int *pwidth, int fSorted, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    XAAPixmapPtr pPriv;
    int fg, bg;
@@ -173,43 +159,44 @@ XAARenderMono8x8Spans(
    switch(pGC->fillStyle) {
    case FillStippled:
       pPriv = XAA_GET_PIXMAP_PRIVATE(pGC->stipple);
-      fg = pGC->fgPixel;  bg = -1;
+        fg = pGC->fgPixel;
+        bg = -1;
       break;
    case FillOpaqueStippled:
       pPriv = XAA_GET_PIXMAP_PRIVATE(pGC->stipple);
-      fg = pGC->fgPixel;  bg = pGC->bgPixel;
+        fg = pGC->fgPixel;
+        bg = pGC->bgPixel;
       break;
    case FillTiled:
       pPriv = XAA_GET_PIXMAP_PRIVATE(pGC->tile.pixmap);
-      fg = pPriv->fg;  bg = pPriv->bg;
+        fg = pPriv->fg;
+        bg = pPriv->bg;
       break;
    default:	/* Muffle compiler */
       pPriv = NULL;	/* Kaboom */
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    }
 
    (*infoRec->FillMono8x8PatternSpans) (infoRec->pScrn, 
                 fg, bg, pGC->alu, pGC->planemask, 
-                n, ppt, pwidth, fSorted, pPriv->pattern0, pPriv->pattern1, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y));	  
+                                         n, ppt, pwidth, fSorted,
+                                         pPriv->pattern0, pPriv->pattern1,
+                                         (xorg + pGC->patOrg.x),
+                                         (yorg + pGC->patOrg.y));
 }
 
-
 	/*************************\
 	|     Color 8x8 Spans     |
 	\*************************/
 
-
 static void
-XAARenderColor8x8Spans(
-    GCPtr pGC,
+XAARenderColor8x8Spans(GCPtr pGC,
     int	n,
     DDXPointPtr ppt,
-    int *pwidth,
-    int fSorted,
-    int xorg, int yorg 
-){
+                       int *pwidth, int fSorted, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    XAACacheInfoPtr pCache;
    PixmapPtr pPix;
@@ -218,81 +205,80 @@ XAARenderColor8x8Spans(
    switch(pGC->fillStyle) {
    case FillStippled:
       pPix = pGC->stipple;
-      fg = pGC->fgPixel;  bg = -1;
+        fg = pGC->fgPixel;
+        bg = -1;
       break;
    case FillOpaqueStippled:
       pPix = pGC->stipple;
-      fg = pGC->fgPixel;  bg = pGC->bgPixel;
+        fg = pGC->fgPixel;
+        bg = pGC->bgPixel;
       break;
    case FillTiled:
       pPix = pGC->tile.pixmap;
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    default:	/* Muffle compiler */
       pPix = NULL;
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    }
 
    pCache = (*infoRec->CacheColor8x8Pattern)(infoRec->pScrn, pPix, fg, bg);
 
    (*infoRec->FillColor8x8PatternSpans) (infoRec->pScrn, 
-                pGC->alu, pGC->planemask, n, ppt, pwidth, fSorted, pCache,
-                (yorg + pGC->patOrg.x), (xorg + pGC->patOrg.y));
+                                          pGC->alu, pGC->planemask, n, ppt,
+                                          pwidth, fSorted, pCache,
+                                          (yorg + pGC->patOrg.x),
+                                          (xorg + pGC->patOrg.y));
 }
 
-
 	/****************************\
 	|     Color Expand Spans     |
 	\****************************/
 
-
 static void
-XAARenderColorExpandSpans(
-    GCPtr pGC,
+XAARenderColorExpandSpans(GCPtr pGC,
     int	n,
     DDXPointPtr ppt,
-    int *pwidth,
-    int fSorted,
-    int xorg, int yorg 
-){
+                          int *pwidth, int fSorted, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    int fg, bg;
 
    switch(pGC->fillStyle) {
    case FillStippled:
-      fg = pGC->fgPixel;  bg = -1;
+        fg = pGC->fgPixel;
+        bg = -1;
       break;
    case FillOpaqueStippled:
-      fg = pGC->fgPixel;  bg = pGC->bgPixel;
+        fg = pGC->fgPixel;
+        bg = pGC->bgPixel;
       break;
    default:	/* Muffle compiler */
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    }
 
    (*infoRec->FillColorExpandSpans) (infoRec->pScrn, fg, bg,
-                pGC->alu, pGC->planemask, n, ppt, pwidth, fSorted,
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y),
-                pGC->stipple); 
+                                      pGC->alu, pGC->planemask, n, ppt, pwidth,
+                                      fSorted, (xorg + pGC->patOrg.x),
+                                      (yorg + pGC->patOrg.y), pGC->stipple);
 
 }
 
-
 	/*************************\
 	|     Cache Blt Spans     |
 	\*************************/
 
-
 static void
-XAARenderCacheBltSpans(
-    GCPtr pGC,
+XAARenderCacheBltSpans(GCPtr pGC,
     int	n,
     DDXPointPtr ppt,
-    int *pwidth,
-    int fSorted,
-    int xorg, int yorg 
-){
+                       int *pwidth, int fSorted, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    XAACacheInfoPtr pCache;
 
@@ -314,111 +300,99 @@ XAARenderCacheBltSpans(
    }
 
    (*infoRec->FillCacheBltSpans) (infoRec->pScrn, 
-                pGC->alu, pGC->planemask, n, ppt, pwidth, fSorted, pCache, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y));
+                                   pGC->alu, pGC->planemask, n, ppt, pwidth,
+                                   fSorted, pCache, (xorg + pGC->patOrg.x),
+                                   (yorg + pGC->patOrg.y));
 
 }
 
-
 	/****************************\
 	|     Cache Expand Spans     |
 	\****************************/
 
-
 static void
-XAARenderCacheExpandSpans(
-    GCPtr pGC,
+XAARenderCacheExpandSpans(GCPtr pGC,
     int	n,
     DDXPointPtr ppt,
-    int *pwidth,
-    int fSorted,
-    int xorg, int yorg 
-){
+                          int *pwidth, int fSorted, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    int fg, bg;
 
    switch(pGC->fillStyle) {
    case FillStippled:
-      fg = pGC->fgPixel;  bg = -1;
+        fg = pGC->fgPixel;
+        bg = -1;
       break;
    case FillOpaqueStippled:
-      fg = pGC->fgPixel;  bg = pGC->bgPixel;
+        fg = pGC->fgPixel;
+        bg = pGC->bgPixel;
       break;
    default:	/* Muffle compiler */
-      fg = -1;  bg = -1;
+        fg = -1;
+        bg = -1;
       break;
    }
 
    (*infoRec->FillCacheExpandSpans) (infoRec->pScrn, fg, bg,
-                pGC->alu, pGC->planemask, n, ppt, pwidth, fSorted,
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y),
-                pGC->stipple); 
+                                      pGC->alu, pGC->planemask, n, ppt, pwidth,
+                                      fSorted, (xorg + pGC->patOrg.x),
+                                      (yorg + pGC->patOrg.y), pGC->stipple);
 }
 
-
 	/***************************\
 	|     Pixmap Copy Spans     |
 	\***************************/
 
-
 static void
-XAARenderPixmapCopySpans(
-    GCPtr pGC,
+XAARenderPixmapCopySpans(GCPtr pGC,
     int	n,
     DDXPointPtr ppt,
-    int *pwidth,
-    int fSorted,
-    int xorg, int yorg 
-){
+                         int *pwidth, int fSorted, int xorg, int yorg)
+{
    XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
    XAACacheInfoPtr pCache = &(infoRec->ScratchCacheInfoRec);
    XAAPixmapPtr pPriv = XAA_GET_PIXMAP_PRIVATE(pGC->tile.pixmap);
 
    pCache->x = pPriv->offscreenArea->box.x1;
    pCache->y = pPriv->offscreenArea->box.y1;
-   pCache->w = pCache->orig_w = 
-		pPriv->offscreenArea->box.x2 - pCache->x;
-   pCache->h = pCache->orig_h = 
-		pPriv->offscreenArea->box.y2 - pCache->y;
+    pCache->w = pCache->orig_w = pPriv->offscreenArea->box.x2 - pCache->x;
+    pCache->h = pCache->orig_h = pPriv->offscreenArea->box.y2 - pCache->y;
    pCache->trans_color = -1;
 
    (*infoRec->FillCacheBltSpans) (infoRec->pScrn, 
-                pGC->alu, pGC->planemask, n, ppt, pwidth, fSorted, pCache, 
-                (xorg + pGC->patOrg.x), (yorg + pGC->patOrg.y));
+                                   pGC->alu, pGC->planemask, n, ppt, pwidth,
+                                   fSorted, pCache, (xorg + pGC->patOrg.x),
+                                   (yorg + pGC->patOrg.y));
 }
 
-
-
-
-
 	/****************\
 	|     Solid      |
 	\****************/
 
-
 void
-XAAFillSolidSpans(
-   ScrnInfoPtr pScrn,
+XAAFillSolidSpans(ScrnInfoPtr pScrn,
    int fg, int rop,
    unsigned int planemask,
-   int n,
-   DDXPointPtr ppt,
-   int *pwidth, int fSorted 
-){
+                  int n, DDXPointPtr ppt, int *pwidth, int fSorted)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
 
     (*infoRec->SetupForSolidFill)(pScrn, fg, rop, planemask);
 
     if(infoRec->ClipBox)
 	(*infoRec->SetClippingRectangle)(infoRec->pScrn,
-		infoRec->ClipBox->x1, infoRec->ClipBox->y1, 
-		infoRec->ClipBox->x2 - 1, infoRec->ClipBox->y2 - 1);
+                                          infoRec->ClipBox->x1,
+                                          infoRec->ClipBox->y1,
+                                          infoRec->ClipBox->x2 - 1,
+                                          infoRec->ClipBox->y2 - 1);
 
     while(n--) {
 	if (*pwidth > 0)
             (*infoRec->SubsequentSolidFillRect)(pScrn, ppt->x, ppt->y, 
 								*pwidth, 1);
-	ppt++; pwidth++;
+        ppt++;
+        pwidth++;
     }
 
     if(infoRec->ClipBox)
@@ -431,42 +405,44 @@ XAAFillSolidSpans(
 	|   Mono 8x8    |
 	\***************/
 
-
 void
-XAAFillMono8x8PatternSpansScreenOrigin(
-   ScrnInfoPtr pScrn,
+XAAFillMono8x8PatternSpansScreenOrigin(ScrnInfoPtr pScrn,
    int fg, int bg, int rop,
    unsigned int planemask,
    int n,
    DDXPointPtr ppt,
    int *pwidth, int fSorted,
    int pattern0, int pattern1,
-   int xorigin, int yorigin 
-){
+                                       int xorigin, int yorigin)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int patx = pattern0, paty = pattern1;
     int xorg = (-xorigin) & 0x07;
     int yorg = (-yorigin) & 0x07;
 
-
     if(infoRec->Mono8x8PatternFillFlags & HARDWARE_PATTERN_PROGRAMMED_BITS) {
    	if(!(infoRec->Mono8x8PatternFillFlags & 		
 				HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	    XAARotateMonoPattern(&patx, &paty, xorg, yorg,
 				(infoRec->Mono8x8PatternFillFlags & 		
 				BIT_ORDER_IN_BYTE_MSBFIRST));
-	    xorg = patx; yorg = paty;
+            xorg = patx;
+            yorg = paty;
+        }
         }
-    } else {
+    else {
 	XAACacheInfoPtr pCache =
 		(*infoRec->CacheMono8x8Pattern)(pScrn, pattern0, pattern1);
-	patx = pCache->x;  paty = pCache->y;
+        patx = pCache->x;
+        paty = pCache->y;
    	if(!(infoRec->Mono8x8PatternFillFlags & 
 				HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	    int slot = (yorg << 3) + xorg;
+
 	    patx += pCache->offsets[slot].x;
 	    paty += pCache->offsets[slot].y;
-	    xorg = patx;  yorg = paty;
+            xorg = patx;
+            yorg = paty;
 	}	
     }
 
@@ -475,13 +451,17 @@ XAAFillMono8x8PatternSpansScreenOrigin(
 
     if(infoRec->ClipBox)
 	(*infoRec->SetClippingRectangle)(infoRec->pScrn,
-		infoRec->ClipBox->x1, infoRec->ClipBox->y1, 
-		infoRec->ClipBox->x2 - 1, infoRec->ClipBox->y2 - 1);
+                                          infoRec->ClipBox->x1,
+                                          infoRec->ClipBox->y1,
+                                          infoRec->ClipBox->x2 - 1,
+                                          infoRec->ClipBox->y2 - 1);
 
      while(n--) {
         (*infoRec->SubsequentMono8x8PatternFillRect)(pScrn, 
-			xorg, yorg, ppt->x, ppt->y, *pwidth, 1);
-	ppt++; pwidth++;
+                                                      xorg, yorg, ppt->x,
+                                                      ppt->y, *pwidth, 1);
+        ppt++;
+        pwidth++;
      }
 
      if(infoRec->ClipBox)
@@ -490,27 +470,24 @@ XAAFillMono8x8PatternSpansScreenOrigin(
      SET_SYNC_FLAG(infoRec);
 }
 
-
 void
-XAAFillMono8x8PatternSpans(
-   ScrnInfoPtr pScrn,
+XAAFillMono8x8PatternSpans(ScrnInfoPtr pScrn,
    int fg, int bg, int rop,
    unsigned int planemask,
    int n,
    DDXPointPtr ppt,
    int *pwidth, int fSorted,
-   int pattern0, int pattern1,
-   int xorigin, int yorigin 
-){
+                           int pattern0, int pattern1, int xorigin, int yorigin)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int patx = pattern0, paty = pattern1;
     int xorg, yorg, slot;
     XAACacheInfoPtr pCache = NULL;
 
-
     if(!(infoRec->Mono8x8PatternFillFlags & HARDWARE_PATTERN_PROGRAMMED_BITS)){
 	pCache = (*infoRec->CacheMono8x8Pattern)(pScrn, pattern0, pattern1);
-	patx = pCache->x;  paty = pCache->y;
+        patx = pCache->x;
+        paty = pCache->y;
     }
 
     (*infoRec->SetupForMono8x8PatternFill)(pScrn, patx, paty,
@@ -518,8 +495,10 @@ XAAFillMono8x8PatternSpans(
 
     if(infoRec->ClipBox)
 	(*infoRec->SetClippingRectangle)(infoRec->pScrn,
-		infoRec->ClipBox->x1, infoRec->ClipBox->y1, 
-		infoRec->ClipBox->x2 - 1, infoRec->ClipBox->y2 - 1);
+                                          infoRec->ClipBox->x1,
+                                          infoRec->ClipBox->y1,
+                                          infoRec->ClipBox->x2 - 1,
+                                          infoRec->ClipBox->y2 - 1);
 
      while(n--) {
 	xorg = (ppt->x - xorigin) & 0x07;
@@ -529,12 +508,15 @@ XAAFillMono8x8PatternSpans(
 				HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	    if(infoRec->Mono8x8PatternFillFlags & 
 				HARDWARE_PATTERN_PROGRAMMED_BITS) {
-		patx = pattern0; paty = pattern1;
+                patx = pattern0;
+                paty = pattern1;
 		XAARotateMonoPattern(&patx, &paty, xorg, yorg,
 				(infoRec->Mono8x8PatternFillFlags & 		
 				BIT_ORDER_IN_BYTE_MSBFIRST));
-		xorg = patx; yorg = paty;
-	    } else {
+                xorg = patx;
+                yorg = paty;
+            }
+            else {
 		slot = (yorg << 3) + xorg;
 	    	xorg = patx + pCache->offsets[slot].x;
 	    	yorg = paty + pCache->offsets[slot].y;
@@ -542,8 +524,10 @@ XAAFillMono8x8PatternSpans(
         }
 
         (*infoRec->SubsequentMono8x8PatternFillRect)(pScrn, 
-			xorg, yorg, ppt->x, ppt->y, *pwidth, 1);
-	ppt++; pwidth++;
+                                                      xorg, yorg, ppt->x,
+                                                      ppt->y, *pwidth, 1);
+        ppt++;
+        pwidth++;
      }
 
      if(infoRec->ClipBox)
@@ -552,50 +536,52 @@ XAAFillMono8x8PatternSpans(
      SET_SYNC_FLAG(infoRec);
 }
 
-
-
 	/****************\
 	|   Color 8x8    |
 	\****************/
 
-
 void
-XAAFillColor8x8PatternSpansScreenOrigin(
-   ScrnInfoPtr pScrn,
+XAAFillColor8x8PatternSpansScreenOrigin(ScrnInfoPtr pScrn,
    int rop,
    unsigned int planemask,
    int n,
    DDXPointPtr ppt,
    int *pwidth, int fSorted,
    XAACacheInfoPtr pCache,
-   int xorigin, int yorigin 
-){
+                                        int xorigin, int yorigin)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int patx = pCache->x, paty = pCache->y;
     int xorg = (-xorigin) & 0x07;
     int yorg = (-yorigin) & 0x07;
 
-
     if(!(infoRec->Color8x8PatternFillFlags & 
 					HARDWARE_PATTERN_PROGRAMMED_ORIGIN)){
 	int slot = (yorg << 3) + xorg;
+
 	paty += pCache->offsets[slot].y;
 	patx += pCache->offsets[slot].x;
-	xorg = patx;  yorg = paty;
+        xorg = patx;
+        yorg = paty;
     }	
 
     (*infoRec->SetupForColor8x8PatternFill)(pScrn, patx, paty,
-			 rop, planemask, pCache->trans_color);
+                                             rop, planemask,
+                                             pCache->trans_color);
 
     if(infoRec->ClipBox)
 	(*infoRec->SetClippingRectangle)(infoRec->pScrn,
-		infoRec->ClipBox->x1, infoRec->ClipBox->y1, 
-		infoRec->ClipBox->x2 - 1, infoRec->ClipBox->y2 - 1);
+                                          infoRec->ClipBox->x1,
+                                          infoRec->ClipBox->y1,
+                                          infoRec->ClipBox->x2 - 1,
+                                          infoRec->ClipBox->y2 - 1);
 
      while(n--) {
         (*infoRec->SubsequentColor8x8PatternFillRect)(pScrn, 
-			xorg, yorg, ppt->x, ppt->y, *pwidth, 1);
-	ppt++; pwidth++;
+                                                       xorg, yorg, ppt->x,
+                                                       ppt->y, *pwidth, 1);
+        ppt++;
+        pwidth++;
      }
  
     if(infoRec->ClipBox)
@@ -604,28 +590,28 @@ XAAFillColor8x8PatternSpansScreenOrigin(
      SET_SYNC_FLAG(infoRec);
 }
 
-
 void
-XAAFillColor8x8PatternSpans(
-   ScrnInfoPtr pScrn,
+XAAFillColor8x8PatternSpans(ScrnInfoPtr pScrn,
    int rop,
    unsigned int planemask,
    int n,
    DDXPointPtr ppt,
    int *pwidth, int fSorted,
-   XAACacheInfoPtr pCache,
-   int xorigin, int yorigin 
-){
+                            XAACacheInfoPtr pCache, int xorigin, int yorigin)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int xorg, yorg, slot;
 
     (*infoRec->SetupForColor8x8PatternFill)(pScrn, pCache->x, pCache->y,
-			 rop, planemask, pCache->trans_color);
+                                             rop, planemask,
+                                             pCache->trans_color);
 
     if(infoRec->ClipBox)
 	(*infoRec->SetClippingRectangle)(infoRec->pScrn,
-		infoRec->ClipBox->x1, infoRec->ClipBox->y1, 
-		infoRec->ClipBox->x2 - 1, infoRec->ClipBox->y2 - 1);
+                                          infoRec->ClipBox->x1,
+                                          infoRec->ClipBox->y1,
+                                          infoRec->ClipBox->x2 - 1,
+                                          infoRec->ClipBox->y2 - 1);
 
      while(n--) {
 	xorg = (ppt->x - xorigin) & 0x07;
@@ -639,8 +625,10 @@ XAAFillColor8x8PatternSpans(
         }
 
         (*infoRec->SubsequentColor8x8PatternFillRect)(pScrn, 
-			xorg, yorg, ppt->x, ppt->y, *pwidth, 1);
-	ppt++; pwidth++;
+                                                       xorg, yorg, ppt->x,
+                                                       ppt->y, *pwidth, 1);
+        ppt++;
+        pwidth++;
      }
 
      if(infoRec->ClipBox)
@@ -653,19 +641,15 @@ XAAFillColor8x8PatternSpans(
 	|   Cache Blit    |
 	\*****************/
 
-
 void
-XAAFillCacheBltSpans(
-   ScrnInfoPtr pScrn,
+XAAFillCacheBltSpans(ScrnInfoPtr pScrn,
    int rop,
    unsigned int planemask,
    int n,
    DDXPointPtr ppt,
    int *pwidth,
-   int fSorted,
-   XAACacheInfoPtr pCache,
-   int xorg, int yorg
-){
+                     int fSorted, XAACacheInfoPtr pCache, int xorg, int yorg)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int x, w, phaseX, phaseY, blit_w;  
 
@@ -674,31 +658,39 @@ XAAFillCacheBltSpans(
 
     if(infoRec->ClipBox)
 	(*infoRec->SetClippingRectangle)(infoRec->pScrn,
-		infoRec->ClipBox->x1, infoRec->ClipBox->y1, 
-		infoRec->ClipBox->x2 - 1, infoRec->ClipBox->y2 - 1);
+                                          infoRec->ClipBox->x1,
+                                          infoRec->ClipBox->y1,
+                                          infoRec->ClipBox->x2 - 1,
+                                          infoRec->ClipBox->y2 - 1);
 
      while(n--) {
 	x = ppt->x;
 	w = *pwidth; 
 	phaseX = (x - xorg) % pCache->orig_w;
-	if(phaseX < 0) phaseX += pCache->orig_w;
+        if (phaseX < 0)
+            phaseX += pCache->orig_w;
 	phaseY = (ppt->y - yorg) % pCache->orig_h;
-	if(phaseY < 0) phaseY += pCache->orig_h;
+        if (phaseY < 0)
+            phaseY += pCache->orig_h;
 
 	while(1) {
 	    blit_w = pCache->w - phaseX;
-	    if(blit_w > w) blit_w = w;
+            if (blit_w > w)
+                blit_w = w;
 
             (*infoRec->SubsequentScreenToScreenCopy)(pScrn, 
-		pCache->x + phaseX, pCache->y + phaseY,
-		x, ppt->y, blit_w, 1);
+                                                      pCache->x + phaseX,
+                                                      pCache->y + phaseY, x,
+                                                      ppt->y, blit_w, 1);
 
 	    w -= blit_w;
-	    if(!w) break;
+            if (!w)
+                break;
 	    x += blit_w;
 	    phaseX = (phaseX + blit_w) % pCache->orig_w;
 	}
-	ppt++; pwidth++;
+        ppt++;
+        pwidth++;
      }
 
      if(infoRec->ClipBox)
@@ -707,24 +699,19 @@ XAAFillCacheBltSpans(
      SET_SYNC_FLAG(infoRec);
 }
 
-
 	/****************\
 	|  Cache Expand  |
 	\****************/
 
-
 void
-XAAFillCacheExpandSpans(
-   ScrnInfoPtr pScrn,
+XAAFillCacheExpandSpans(ScrnInfoPtr pScrn,
    int fg, int bg, int rop,
    unsigned int planemask,
    int n,
    DDXPointPtr ppt,
    int *pwidth,
-   int fSorted,
-   int xorg, int yorg,
-   PixmapPtr pPix
-){
+                        int fSorted, int xorg, int yorg, PixmapPtr pPix)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int x, w, phaseX, phaseY, blit_w, cacheWidth;  
     XAACacheInfoPtr pCache;
@@ -739,31 +726,41 @@ XAAFillCacheExpandSpans(
 
     if(infoRec->ClipBox)
 	(*infoRec->SetClippingRectangle)(infoRec->pScrn,
-		infoRec->ClipBox->x1, infoRec->ClipBox->y1, 
-		infoRec->ClipBox->x2 - 1, infoRec->ClipBox->y2 - 1);
+                                          infoRec->ClipBox->x1,
+                                          infoRec->ClipBox->y1,
+                                          infoRec->ClipBox->x2 - 1,
+                                          infoRec->ClipBox->y2 - 1);
 
      while(n--) {
 	x = ppt->x;
 	w = *pwidth; 
 	phaseX = (x - xorg) % pCache->orig_w;
-	if(phaseX < 0) phaseX += pCache->orig_w;
+        if (phaseX < 0)
+            phaseX += pCache->orig_w;
 	phaseY = (ppt->y - yorg) % pCache->orig_h;
-	if(phaseY < 0) phaseY += pCache->orig_h;
+        if (phaseY < 0)
+            phaseY += pCache->orig_h;
 
 	while(1) {
 	    blit_w = cacheWidth - phaseX;
-	    if(blit_w > w) blit_w = w;
+            if (blit_w > w)
+                blit_w = w;
 
-	    (*infoRec->SubsequentScreenToScreenColorExpandFill)(
-			pScrn, x, ppt->y, blit_w, 1,
-			pCache->x, pCache->y + phaseY, phaseX);
+            (*infoRec->SubsequentScreenToScreenColorExpandFill) (pScrn, x,
+                                                                 ppt->y, blit_w,
+                                                                 1, pCache->x,
+                                                                 pCache->y +
+                                                                 phaseY,
+                                                                 phaseX);
 
 	    w -= blit_w;
-	    if(!w) break;
+            if (!w)
+                break;
 	    x += blit_w;
 	    phaseX = (phaseX + blit_w) % pCache->orig_w;
 	}
-	ppt++; pwidth++;
+        ppt++;
+        pwidth++;
      }
 
      if(infoRec->ClipBox)
@@ -772,19 +769,14 @@ XAAFillCacheExpandSpans(
      SET_SYNC_FLAG(infoRec);
 }
 
-
-
 void
-XAAClipAndRenderSpans(
-    GCPtr pGC, 
+XAAClipAndRenderSpans(GCPtr pGC,
     DDXPointPtr	ppt,
     int		*pwidth,
     int		nspans,
     int		fSorted,
-    ClipAndRenderSpansFunc func,
-    int 	xorg,
-    int		yorg
-){
+                      ClipAndRenderSpansFunc func, int xorg, int yorg)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     DDXPointPtr pptNew, pptBase;
     int	*pwidthBase, *pwidthNew;
@@ -824,7 +816,8 @@ XAAClipAndRenderSpans(
 	    ppt++;
 	    pwidth++;
 	}
-    } else if (numRects) {
+    }
+    else if (numRects) {
 	BoxPtr	pbox;
 	int nbox;
 
@@ -840,6 +833,7 @@ XAAClipAndRenderSpans(
 
 	    if(nbox && (pbox->y1 <= ppt->y)) {
 		int orig_y = pbox->y1;
+
 		Right = ppt->x + *pwidth;
 		while(nbox && (orig_y == pbox->y1)) {
 		    if(pbox->x2 <= ppt->x) {
