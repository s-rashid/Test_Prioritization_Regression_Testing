diff --git a/hw/xquartz/keysym2ucs.c b/hw/xquartz/keysym2ucs.c
index 8626ebc..73ea55a 100644
--- a/hw/xquartz/keysym2ucs.c
+++ b/hw/xquartz/keysym2ucs.c
@@ -828,7 +828,8 @@ const static struct codepair keysymtab[] = {
   { 0xffff, 0x007f },			/* XK_Delete */
 };
 
-long keysym2ucs(int keysym)
+long
+keysym2ucs(int keysym)
 {
     int min = 0;
     int max = sizeof(keysymtab) / sizeof(struct codepair) - 1;
@@ -860,14 +861,16 @@ long keysym2ucs(int keysym)
     return -1;
 }
 
-static int reverse_compare (const void *a, const void *b)
+static int
+reverse_compare(const void *a, const void *b)
 {
     const struct codepair *ca = a, *cb = b;
 
     return ca->ucs - cb->ucs;
 }
 
-int ucs2keysym(long ucs)
+int
+ucs2keysym(long ucs)
 {
     static struct codepair *reverse_keysymtab;
 
@@ -875,20 +878,17 @@ int ucs2keysym(long ucs)
     int max = sizeof(keysymtab) / sizeof(struct codepair) - 1;
     int mid;
 
-    if (reverse_keysymtab == NULL)
-    {
+    if (reverse_keysymtab == NULL) {
 	reverse_keysymtab = malloc (sizeof (keysymtab));
 	memcpy (reverse_keysymtab, keysymtab, sizeof (keysymtab));
 
 	qsort (reverse_keysymtab,
 	       sizeof (keysymtab) / sizeof (struct codepair),
-	       sizeof (struct codepair),
-	       reverse_compare);
+              sizeof(struct codepair), reverse_compare);
     }
 
     /* first check for Latin-1 characters (1:1 mapping) */
-    if ((ucs >= 0x0020 && ucs <= 0x007e) ||
-        (ucs >= 0x00a0 && ucs <= 0x00ff))
+    if ((ucs >= 0x0020 && ucs <= 0x007e) || (ucs >= 0x00a0 && ucs <= 0x00ff))
         return ucs;
 
     /* binary search in table */
