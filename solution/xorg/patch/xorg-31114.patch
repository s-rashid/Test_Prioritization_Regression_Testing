diff --git a/hw/xfree86/os-support/bus/axpPci.c b/hw/xfree86/os-support/bus/axpPci.c
index 99c451f..22c5029 100644
--- a/hw/xfree86/os-support/bus/axpPci.c
+++ b/hw/xfree86/os-support/bus/axpPci.c
@@ -327,12 +327,11 @@ xf86MapDomainMemory(int ScreenNum, int Flags, PCITAG Tag,
 			 pDomain->dense_mem + Base - _bus_base(), Size);
 }
 
-_X_EXPORT IOADDRESS
-xf86MapDomainIO(int ScreenNum, int Flags, PCITAG Tag,
-		IOADDRESS Base, unsigned long Size)
+IOADDRESS
+xf86MapLegacyIO(struct pci_device *dev)
 {
     axpDomainPtr pDomain;
-    int domain = PCI_DOM_FROM_TAG(Tag);
+    const int domain = dev->domain;
 
     if ((domain < 0) || (domain >= pciNumDomains) ||
 	!(pDomain = xf86DomainInfo[domain])) 
@@ -343,7 +342,7 @@ xf86MapDomainIO(int ScreenNum, int Flags, PCITAG Tag,
      * base [this is ok since we also constrain sparse I/O systems to
      * a single domain in axpSetupDomains()]
      */
-    if (pDomain->sparse_io) return Base;
+    if (pDomain->sparse_io) return 0;
 
     /*
      * I/O addresses on Alpha are really just different physical memory
@@ -356,11 +355,11 @@ xf86MapDomainIO(int ScreenNum, int Flags, PCITAG Tag,
      * Map the entire I/O space (64kB) at once and only once.
      */
     if (!pDomain->mapped_io)
-        pDomain->mapped_io = (IOADDRESS)xf86MapVidMem(ScreenNum, Flags, 
+        pDomain->mapped_io = (IOADDRESS)xf86MapVidMem(-1, VIDMEM_MMIO,
 		   	            pDomain->dense_io - _bus_base(), 
                                     0x10000);
 
-    return pDomain->mapped_io + Base;
+    return pDomain->mapped_io;
 }
 
 _X_EXPORT int
