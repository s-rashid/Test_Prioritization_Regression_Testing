diff --git a/hw/xfree86/xaa/xaaNonTEText.c b/hw/xfree86/xaa/xaaNonTEText.c
index 7bfddcb..35b4391 100644
--- a/hw/xfree86/xaa/xaaNonTEText.c
+++ b/hw/xfree86/xaa/xaaNonTEText.c
@@ -38,17 +38,18 @@
 #include "gcstruct.h"
 #include "pixmapstr.h"
 
-
 static void ImageGlyphBltNonTEColorExpansion(ScrnInfoPtr pScrn,
 				int xInit, int yInit, FontPtr font,
 				int fg, int bg, unsigned planemask,
 				RegionPtr cclip, int nglyph,
-				unsigned char* gBase, CharInfoPtr *ppci);
-static int PolyGlyphBltNonTEColorExpansion(ScrnInfoPtr pScrn,
-				int xInit, int yInit, FontPtr font,
-				int fg, int rop, unsigned planemask,
+                                             unsigned char *gBase,
+                                             CharInfoPtr * ppci);
+static int PolyGlyphBltNonTEColorExpansion(ScrnInfoPtr pScrn, int xInit,
+                                           int yInit, FontPtr font, int fg,
+                                           int rop, unsigned planemask,
 				RegionPtr cclip, int nglyph,
-				unsigned char* gBase, CharInfoPtr *ppci);
+                                           unsigned char *gBase,
+                                           CharInfoPtr * ppci);
 
 /********************************************************************
 
@@ -57,74 +58,64 @@ static int PolyGlyphBltNonTEColorExpansion(ScrnInfoPtr pScrn,
 
 ********************************************************************/
 
-
 int
-XAAPolyText8NonTEColorExpansion(
-    DrawablePtr pDraw,
-    GCPtr	pGC,
-    int		x, 
-    int 	y,
-    int 	count,
-    char	*chars )
+XAAPolyText8NonTEColorExpansion(DrawablePtr pDraw,
+                                GCPtr pGC, int x, int y, int count, char *chars)
 {
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     unsigned long n;
     int width = 0;
 
     (*pGC->font->get_glyphs)(pGC->font, (unsigned long)count, 
-		(unsigned char *)chars, Linear8Bit, &n, infoRec->CharInfo);
+                              (unsigned char *) chars, Linear8Bit, &n,
+                              infoRec->CharInfo);
 
     if(n) {
 	width = PolyGlyphBltNonTEColorExpansion( infoRec->pScrn, 
-		x + pDraw->x, y + pDraw->y, pGC->font, 
-		pGC->fgPixel, pGC->alu, pGC->planemask, 
-		pGC->pCompositeClip, n, FONTGLYPHS(pGC->font),
+                                                x + pDraw->x, y + pDraw->y,
+                                                pGC->font, pGC->fgPixel,
+                                                pGC->alu, pGC->planemask,
+                                                pGC->pCompositeClip, n,
+                                                FONTGLYPHS(pGC->font),
  		infoRec->CharInfo);
     }
 
     return x + width;
 }
 
-
 int
-XAAPolyText16NonTEColorExpansion(
-    DrawablePtr pDraw,
+XAAPolyText16NonTEColorExpansion(DrawablePtr pDraw,
     GCPtr	pGC,
-    int		x, 
-    int		y,
-    int		count,
-    unsigned short *chars )
+                                 int x, int y, int count, unsigned short *chars)
 {
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     unsigned long n;
     int width = 0;
 
-    (*pGC->font->get_glyphs)(
-		pGC->font, (unsigned long)count, (unsigned char *)chars,
-		(FONTLASTROW(pGC->font) == 0) ? Linear16Bit : TwoD16Bit,
-		&n, infoRec->CharInfo);
+    (*pGC->font->get_glyphs) (pGC->font, (unsigned long) count,
+                              (unsigned char *) chars,
+                              (FONTLASTROW(pGC->font) ==
+                               0) ? Linear16Bit : TwoD16Bit, &n,
+                              infoRec->CharInfo);
 
     if(n) {
 	width = PolyGlyphBltNonTEColorExpansion( infoRec->pScrn, 
-		x + pDraw->x, y + pDraw->y, pGC->font, 
-		pGC->fgPixel, pGC->alu, pGC->planemask, 
-		pGC->pCompositeClip, n, FONTGLYPHS(pGC->font),
+                                                x + pDraw->x, y + pDraw->y,
+                                                pGC->font, pGC->fgPixel,
+                                                pGC->alu, pGC->planemask,
+                                                pGC->pCompositeClip, n,
+                                                FONTGLYPHS(pGC->font),
 		infoRec->CharInfo);
     }
 
     return x + width;
 }
 
-
 void
-XAAImageText8NonTEColorExpansion(
-    DrawablePtr pDraw,
+XAAImageText8NonTEColorExpansion(DrawablePtr pDraw,
     GCPtr	pGC,
-    int		x, 
-    int		y,
-    int		count,
-    char	*chars 
-){
+                                 int x, int y, int count, char *chars)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     unsigned long n;
 
@@ -132,43 +123,45 @@ XAAImageText8NonTEColorExpansion(
 	return;
 
     (*pGC->font->get_glyphs)(pGC->font, (unsigned long)count, 
-		(unsigned char *)chars, Linear8Bit, &n, infoRec->CharInfo);
+                              (unsigned char *) chars, Linear8Bit, &n,
+                              infoRec->CharInfo);
 
-    if(n) ImageGlyphBltNonTEColorExpansion(
-	infoRec->pScrn, x + pDraw->x, y + pDraw->y,
-	pGC->font, pGC->fgPixel, pGC->bgPixel, pGC->planemask, 
-	pGC->pCompositeClip, n, FONTGLYPHS(pGC->font), infoRec->CharInfo);
+    if (n)
+        ImageGlyphBltNonTEColorExpansion(infoRec->pScrn, x + pDraw->x,
+                                         y + pDraw->y, pGC->font, pGC->fgPixel,
+                                         pGC->bgPixel, pGC->planemask,
+                                         pGC->pCompositeClip, n,
+                                         FONTGLYPHS(pGC->font),
+                                         infoRec->CharInfo);
 }
 
-
 void
-XAAImageText16NonTEColorExpansion(
-    DrawablePtr pDraw,
+XAAImageText16NonTEColorExpansion(DrawablePtr pDraw,
     GCPtr	pGC,
     int		x, 
-    int		y,
-    int		count,
-    unsigned short *chars 
-){
+                                  int y, int count, unsigned short *chars)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
     unsigned long n;
 
     if(!RegionNumRects(pGC->pCompositeClip))
 	return;
 
-    (*pGC->font->get_glyphs)(
-		pGC->font, (unsigned long)count, (unsigned char *)chars,
-		(FONTLASTROW(pGC->font) == 0) ? Linear16Bit : TwoD16Bit,
-		&n, infoRec->CharInfo);
+    (*pGC->font->get_glyphs) (pGC->font, (unsigned long) count,
+                              (unsigned char *) chars,
+                              (FONTLASTROW(pGC->font) ==
+                               0) ? Linear16Bit : TwoD16Bit, &n,
+                              infoRec->CharInfo);
 
-    if(n) ImageGlyphBltNonTEColorExpansion(
-	infoRec->pScrn, x + pDraw->x, y + pDraw->y,
-	pGC->font, pGC->fgPixel, pGC->bgPixel, pGC->planemask, 
-	pGC->pCompositeClip, n, FONTGLYPHS(pGC->font), infoRec->CharInfo);
+    if (n)
+        ImageGlyphBltNonTEColorExpansion(infoRec->pScrn, x + pDraw->x,
+                                         y + pDraw->y, pGC->font, pGC->fgPixel,
+                                         pGC->bgPixel, pGC->planemask,
+                                         pGC->pCompositeClip, n,
+                                         FONTGLYPHS(pGC->font),
+                                         infoRec->CharInfo);
 }
 
-
-
 /********************************************************************
 
    GC level replacements for ImageGlyphBlt and PolyGlyphBlt for
@@ -176,50 +169,40 @@ XAAImageText16NonTEColorExpansion(
 
 ********************************************************************/
 
-
 void
-XAAImageGlyphBltNonTEColorExpansion(
-    DrawablePtr pDraw,
-    GCPtr pGC,
-    int xInit, int yInit,
-    unsigned int nglyph,
-    CharInfoPtr *ppci,      /* array of character info */
+XAAImageGlyphBltNonTEColorExpansion(DrawablePtr pDraw, GCPtr pGC, int xInit, int yInit, unsigned int nglyph, CharInfoPtr * ppci,        /* array of character info */
     pointer pglyphBase	       /* start of array of glyphs */
-){
+    )
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
 
     if(!RegionNumRects(pGC->pCompositeClip))
 	return;
 
-    ImageGlyphBltNonTEColorExpansion(
-	infoRec->pScrn, xInit + pDraw->x, yInit + pDraw->y,
-	pGC->font, pGC->fgPixel, pGC->bgPixel, pGC->planemask, 
-	pGC->pCompositeClip, nglyph, (unsigned char*)pglyphBase, ppci);
+    ImageGlyphBltNonTEColorExpansion(infoRec->pScrn, xInit + pDraw->x,
+                                     yInit + pDraw->y, pGC->font, pGC->fgPixel,
+                                     pGC->bgPixel, pGC->planemask,
+                                     pGC->pCompositeClip, nglyph,
+                                     (unsigned char *) pglyphBase, ppci);
 }
 
 void
-XAAPolyGlyphBltNonTEColorExpansion(
-    DrawablePtr pDraw,
-    GCPtr pGC,
-    int xInit, int yInit,
-    unsigned int nglyph,
-    CharInfoPtr *ppci,      /* array of character info */
+XAAPolyGlyphBltNonTEColorExpansion(DrawablePtr pDraw, GCPtr pGC, int xInit, int yInit, unsigned int nglyph, CharInfoPtr * ppci, /* array of character info */
     pointer pglyphBase	       /* start of array of glyphs */
-){
+    )
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_GC(pGC);
 
     if(!RegionNumRects(pGC->pCompositeClip))
 	return;
 
-    PolyGlyphBltNonTEColorExpansion(
-	infoRec->pScrn, xInit + pDraw->x, yInit + pDraw->y,
-	pGC->font, pGC->fgPixel, pGC->alu, pGC->planemask, 
-	pGC->pCompositeClip, nglyph, (unsigned char*)pglyphBase, ppci);
+    PolyGlyphBltNonTEColorExpansion(infoRec->pScrn, xInit + pDraw->x,
+                                    yInit + pDraw->y, pGC->font, pGC->fgPixel,
+                                    pGC->alu, pGC->planemask,
+                                    pGC->pCompositeClip, nglyph,
+                                    (unsigned char *) pglyphBase, ppci);
 }
 
-
-
-
 /********************************************************************
 
    ImageGlyphBltNonTEColorExpansion -
@@ -231,15 +214,10 @@ XAAPolyGlyphBltNonTEColorExpansion(
   
 ********************************************************************/
 
-
-
 static int
-CollectCharacterInfo(
-    NonTEGlyphPtr glyphs,
-    unsigned int nglyph,
-    CharInfoPtr *ppci,
-    FontPtr pfont
-){
+CollectCharacterInfo(NonTEGlyphPtr glyphs,
+                     unsigned int nglyph, CharInfoPtr * ppci, FontPtr pfont)
+{
    int i, w = 0;
    
    for(i = 0; i < nglyph; i++, ppci++, glyphs++) {
@@ -254,20 +232,15 @@ CollectCharacterInfo(
    return w;
 }
 
-
 static void
-PolyGlyphBltAsSingleBitmap (
-   ScrnInfoPtr pScrn,
+PolyGlyphBltAsSingleBitmap(ScrnInfoPtr pScrn,
    int nglyph,
    FontPtr font,
    int xInit,
    int yInit,
    int nbox,
-   BoxPtr pbox,
-   int fg,
-   int rop,
-   unsigned planemask
-){
+                           BoxPtr pbox, int fg, int rop, unsigned planemask)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     CARD32 *block, *pntr, *bits;
     int pitch, topLine, botLine, top, bot, height;
@@ -284,22 +257,27 @@ PolyGlyphBltAsSingleBitmap (
 
     /* get into the first band that may contain part of our string */
     while(nbox && (Top >= pbox->y2)) {
-	pbox++; nbox--;
+        pbox++;
+        nbox--;
     }
 
-    if(!nbox) return;
+    if (!nbox)
+        return;
 
     pitch = (Right - Left + 31) >> 5;
     size = (pitch << 2) * (Bottom - Top);
     block = calloc(1, size);
 
-    topLine = 10000; botLine = -10000;
+    topLine = 10000;
+    botLine = -10000;
 
     while(nglyph--) {
 	top = -glyphs->yoff;
 	bot = top + glyphs->height;
-	if(top < topLine) topLine = top;
-	if(bot > botLine) botLine = bot;
+        if (top < topLine)
+            topLine = top;
+        if (bot > botLine)
+            botLine = bot;
 	skippix = glyphs->start - infoRec->GlyphInfo[0].start;
 	bits = (CARD32*)glyphs->bits;
 	bitPitch = glyphs->srcwidth >> 2;
@@ -325,7 +303,8 @@ PolyGlyphBltAsSingleBitmap (
     Bottom = yInit + botLine;
 
     while(nbox && (Top >= pbox->y2)) {
-	pbox++; nbox--;
+        pbox++;
+        nbox--;
     }
 
     while(nbox && (Bottom > pbox->y1)) {
@@ -341,29 +320,31 @@ PolyGlyphBltAsSingleBitmap (
 	    if(height > 0) 
 	       (*infoRec->WriteBitmap)(pScrn, LeftEdge, topLine, 
 			RightEdge - LeftEdge, height,
-			(unsigned char*)(pntr + ((topLine - Top) * pitch) +
+                                         (unsigned char *) (pntr +
+                                                            ((topLine -
+                                                              Top) * pitch) +
 				(skippix >> 5)),
-			pitch << 2, skippix & 31, fg, -1, rop, planemask);
+                                         pitch << 2, skippix & 31, fg, -1, rop,
+                                         planemask);
 	}
 
-	nbox--; pbox++;
+        nbox--;
+        pbox++;
     }
 
     free(block);
 }
 
 static void
-ImageGlyphBltNonTEColorExpansion(
-   ScrnInfoPtr pScrn,
+ImageGlyphBltNonTEColorExpansion(ScrnInfoPtr pScrn,
    int xInit, int yInit,
    FontPtr font,
    int fg, int bg,
    unsigned planemask,
    RegionPtr cclip,
    int nglyph,
-   unsigned char* gBase,
-   CharInfoPtr *ppci 
-){
+                                 unsigned char *gBase, CharInfoPtr * ppci)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int skippix, skipglyph, width, n, i;
     int Left, Right, Top, Bottom;
@@ -382,7 +363,8 @@ ImageGlyphBltNonTEColorExpansion(
 
     /* get into the first band that may contain part of our box */
     while(nbox && (Top >= pbox->y2)) {
-	pbox++; nbox--;
+        pbox++;
+        nbox--;
     }
 
     while(nbox && (Bottom >= pbox->y1)) {
@@ -395,14 +377,18 @@ ImageGlyphBltNonTEColorExpansion(
 
 	    if(ybot > ytop) {
 		if(!AlreadySetup) {
-		   (*infoRec->SetupForSolidFill)(pScrn, bg, GXcopy, planemask);
+                    (*infoRec->SetupForSolidFill) (pScrn, bg, GXcopy,
+                                                   planemask);
 		   AlreadySetup = TRUE;
 		}
 		(*infoRec->SubsequentSolidFillRect)(pScrn, 
-			LeftEdge, ytop, RightEdge - LeftEdge, ybot - ytop);
+                                                     LeftEdge, ytop,
+                                                     RightEdge - LeftEdge,
+                                                     ybot - ytop);
 	    }
 	}
-	nbox--; pbox++;
+        nbox--;
+        pbox++;
     }
  
     nbox = RegionNumRects(cclip);
@@ -410,8 +396,7 @@ ImageGlyphBltNonTEColorExpansion(
 
     if(infoRec->WriteBitmap && (nglyph > 1) && 
 			((FONTMAXBOUNDS(font, rightSideBearing) - 
-          		FONTMINBOUNDS(font, leftSideBearing)) <= 32)) 
-   {
+          FONTMINBOUNDS(font, leftSideBearing)) <= 32)) {
 	PolyGlyphBltAsSingleBitmap(pScrn, nglyph, font, 
 				xInit, yInit, nbox, pbox,
 				fg, GXcopy, planemask);
@@ -427,7 +412,8 @@ ImageGlyphBltNonTEColorExpansion(
 
     /* get into the first band that may contain part of our box */
     while(nbox && (Top >= pbox->y2)) {
-	pbox++; nbox--;
+        pbox++;
+        nbox--;
     }
 
     /* stop when the lower edge of the box is beyond our string */
@@ -445,34 +431,37 @@ ImageGlyphBltNonTEColorExpansion(
 		   skipglyph++;
 
 		skippix = RightEdge - xInit;
-		n = 0; i = skipglyph;
+                n = 0;
+                i = skipglyph;
 		while((i < nglyph) && (skippix > infoRec->GlyphInfo[i].start)) {
-		    i++; n++;
+                    i++;
+                    n++;
 		}
 
-		if(n) (*infoRec->NonTEGlyphRenderer)(pScrn,
-			xInit, yInit, n, infoRec->GlyphInfo + skipglyph, 
-			pbox, fg, GXcopy, planemask); 
+                if (n)
+                    (*infoRec->NonTEGlyphRenderer) (pScrn,
+                                                    xInit, yInit, n,
+                                                    infoRec->GlyphInfo +
+                                                    skipglyph, pbox, fg, GXcopy,
+                                                    planemask);
 	    }
 	}
 
-	nbox--; pbox++;
+        nbox--;
+        pbox++;
     }
 }
 
-
 static int
-PolyGlyphBltNonTEColorExpansion(
-   ScrnInfoPtr pScrn,
+PolyGlyphBltNonTEColorExpansion(ScrnInfoPtr pScrn,
    int xInit, int yInit,
    FontPtr font,
    int fg, int rop,
    unsigned planemask,
    RegionPtr cclip,
    int nglyph,
-   unsigned char* gBase,
-   CharInfoPtr *ppci 
-){
+                                unsigned char *gBase, CharInfoPtr * ppci)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int skippix, skipglyph, width, n, i;
     int Left, Right, Top, Bottom;
@@ -504,7 +493,8 @@ PolyGlyphBltNonTEColorExpansion(
 
     /* get into the first band that may contain part of our string */
     while(nbox && (Top >= pbox->y2)) {
-	pbox++; nbox--;
+        pbox++;
+        nbox--;
     }
 
     /* stop when the lower edge of the box is beyond our string */
@@ -520,35 +510,37 @@ PolyGlyphBltNonTEColorExpansion(
 		skipglyph++;
 
 	    skippix = RightEdge - xInit;
-	    n = 0; i = skipglyph;
+            n = 0;
+            i = skipglyph;
 	    while((i < nglyph) && (skippix > infoRec->GlyphInfo[i].start)) {
-		i++; n++;
+                i++;
+                n++;
 	    }
 
-	    if(n) (*infoRec->NonTEGlyphRenderer)(pScrn,
-			xInit, yInit, n, infoRec->GlyphInfo + skipglyph, 
+            if (n)
+                (*infoRec->NonTEGlyphRenderer) (pScrn,
+                                                xInit, yInit, n,
+                                                infoRec->GlyphInfo + skipglyph,
 			pbox, fg, rop, planemask); 
 	}
 
-	nbox--; pbox++;
+        nbox--;
+        pbox++;
     }
     return width;
 }
 
-
 /* It is possible that the none of the glyphs passed to the 
    NonTEGlyphRenderer will be drawn.  This function being called
    indicates that part of the text string's bounding box is visible
    but not necessarily that any of the characters are visible */
 
-void XAANonTEGlyphRenderer(
-   ScrnInfoPtr pScrn,
+void
+XAANonTEGlyphRenderer(ScrnInfoPtr pScrn,
    int x, int y, int n,
    NonTEGlyphPtr glyphs,
-   BoxPtr pbox,
-   int fg, int rop,
-   unsigned int planemask
-){
+                      BoxPtr pbox, int fg, int rop, unsigned int planemask)
+{
     XAAInfoRecPtr infoRec = GET_XAAINFORECPTR_FROM_SCRNINFOPTR(pScrn);
     int x1, x2, y1, y2, i, w, h, skipleft, skiptop;
     unsigned char *src;
@@ -562,16 +554,23 @@ void XAANonTEGlyphRenderer(
 	if(y1 < pbox->y1) {
 	    skiptop = pbox->y1 - y1;
 	    y1 = pbox->y1;
-	} else skiptop = 0;
-	if(y2 > pbox->y2) y2 = pbox->y2;
+        }
+        else
+            skiptop = 0;
+        if (y2 > pbox->y2)
+            y2 = pbox->y2;
 	h = y2 - y1;
-	if(h <= 0) continue;
+        if (h <= 0)
+            continue;
 
 	if(x1 < pbox->x1) {
 	    skipleft = pbox->x1 - x1;
 	    x1 = pbox->x1;
-	} else skipleft = 0;
-	if(x2 > pbox->x2) x2 = pbox->x2;
+        }
+        else
+            skipleft = 0;
+        if (x2 > pbox->x2)
+            x2 = pbox->x2;
 
 	w = x2 - x1;
 
@@ -584,7 +583,8 @@ void XAANonTEGlyphRenderer(
 	    }
 
 	    (*infoRec->WriteBitmap)(pScrn, x1, y1, w, h, src,
-			glyphs->srcwidth, skipleft, fg, -1, rop, planemask);
+                                     glyphs->srcwidth, skipleft, fg, -1, rop,
+                                     planemask);
 	}
     }  
 
