diff --git a/hw/xquartz/xpr/appledri.c b/hw/xquartz/xpr/appledri.c
index 4ef0061..1bb8379 100644
--- a/hw/xquartz/xpr/appledri.c
+++ b/hw/xquartz/xpr/appledri.c
@@ -2,7 +2,7 @@
 
 Copyright 1998-1999 Precision Insight, Inc., Cedar Park, Texas.
 Copyright 2000 VA Linux Systems, Inc.
-Copyright (c) 2002, 2009-2011 Apple Inc.
+   Copyright (c) 2002, 2009-2012 Apple Inc.
 All Rights Reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a
@@ -32,6 +32,7 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *   Kevin E. Martin <martin@valinux.com>
  *   Jens Owen <jens@valinux.com>
  *   Rickard E. (Rik) Faith <faith@valinux.com>
+ *   Jeremy Huddleston <jeremyhu@apple.com>
  *
  */
 
@@ -59,14 +60,16 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 static int DRIErrorBase = 0;
 
-static void AppleDRIResetProc(ExtensionEntry * extEntry);
-static int ProcAppleDRICreatePixmap(ClientPtr client);
+static void
+AppleDRIResetProc(ExtensionEntry* extEntry);
+static int
+ProcAppleDRICreatePixmap(ClientPtr client);
 
 static unsigned char DRIReqCode = 0;
 static int DRIEventBase = 0;
 
-static void SNotifyEvent(xAppleDRINotifyEvent * from,
-                         xAppleDRINotifyEvent * to);
+static void
+SNotifyEvent(xAppleDRINotifyEvent *from, xAppleDRINotifyEvent *to);
 
 typedef struct _DRIEvent *DRIEventPtr;
 typedef struct _DRIEvent {
@@ -76,7 +79,8 @@ typedef struct _DRIEvent {
     unsigned int mask;
 } DRIEventRec;
 
- /*ARGSUSED*/ static void
+/*ARGSUSED*/
+static void
 AppleDRIResetProc(ExtensionEntry * extEntry)
 {
     DRIReset();
@@ -152,7 +156,8 @@ ProcAppleDRIAuthConnection(register ClientPtr client)
     rep.sequenceNumber = client->sequence;
     rep.authenticated = 1;
 
-    if (!DRIAuthConnection(screenInfo.screens[stuff->screen], stuff->magic)) {
+    if (!DRIAuthConnection(screenInfo.screens[stuff->screen],
+                           stuff->magic)) {
         ErrorF("Failed to authenticate %u\n", (unsigned int) stuff->magic);
         rep.authenticated = 0;
     }
@@ -168,7 +173,8 @@ ProcAppleDRIAuthConnection(register ClientPtr client)
 }
 
 static void
-surface_notify(void *_arg, void *data)
+surface_notify(void *_arg,
+               void *data)
 {
     DRISurfaceNotifyArg *arg = _arg;
     int client_index = (int) x_cvt_vptr_to_uint(data);
@@ -209,7 +215,8 @@ ProcAppleDRICreateSurface(ClientPtr client)
     if (!DRICreateSurface(screenInfo.screens[stuff->screen],
                           (Drawable) stuff->drawable, pDrawable,
                           stuff->client_id, &sid, key,
-                          surface_notify, x_cvt_uint_to_vptr(client->index))) {
+                          surface_notify,
+                          x_cvt_uint_to_vptr(client->index))) {
         return BadValue;
     }
 
@@ -233,10 +240,8 @@ static int
 ProcAppleDRIDestroySurface(register ClientPtr client)
 {
     int rc;
-
     REQUEST(xAppleDRIDestroySurfaceReq);
     DrawablePtr pDrawable;
-
     REQUEST_SIZE_MATCH(xAppleDRIDestroySurfaceReq);
 
     rc = dixLookupDrawable(&pDrawable, stuff->drawable, client, 0,
@@ -245,7 +250,8 @@ ProcAppleDRIDestroySurface(register ClientPtr client)
         return rc;
 
     if (!DRIDestroySurface(screenInfo.screens[stuff->screen],
-                           (Drawable) stuff->drawable, pDrawable, NULL, NULL)) {
+                           (Drawable)stuff->drawable,
+                           pDrawable, NULL, NULL)) {
         return BadValue;
     }
 
@@ -273,11 +279,13 @@ ProcAppleDRICreatePixmap(ClientPtr client)
 
     if (!DRICreatePixmap(screenInfo.screens[stuff->screen],
                          (Drawable) stuff->drawable,
-                         pDrawable, path, PATH_MAX)) {
+                         pDrawable,
+                         path, PATH_MAX)) {
         return BadValue;
     }
 
-    if (!DRIGetPixmapData(pDrawable, &width, &height, &pitch, &bpp, &ptr)) {
+    if (!DRIGetPixmapData(pDrawable, &width, &height,
+                          &pitch, &bpp, &ptr)) {
         return BadValue;
     }
 
@@ -317,7 +325,6 @@ ProcAppleDRIDestroyPixmap(ClientPtr client)
 {
     DrawablePtr pDrawable;
     int rc;
-
     REQUEST(xAppleDRIDestroyPixmapReq);
     REQUEST_SIZE_MATCH(xAppleDRIDestroyPixmapReq);
 
@@ -342,6 +349,7 @@ ProcAppleDRIDispatch(register ClientPtr client)
     switch (stuff->data) {
     case X_AppleDRIQueryVersion:
         return ProcAppleDRIQueryVersion(client);
+
     case X_AppleDRIQueryDirectRenderingCapable:
         return ProcAppleDRIQueryDirectRenderingCapable(client);
     }
@@ -352,12 +360,16 @@ ProcAppleDRIDispatch(register ClientPtr client)
     switch (stuff->data) {
     case X_AppleDRIAuthConnection:
         return ProcAppleDRIAuthConnection(client);
+
     case X_AppleDRICreateSurface:
         return ProcAppleDRICreateSurface(client);
+
     case X_AppleDRIDestroySurface:
         return ProcAppleDRIDestroySurface(client);
+
     case X_AppleDRICreatePixmap:
         return ProcAppleDRICreatePixmap(client);
+
     case X_AppleDRIDestroyPixmap:
         return ProcAppleDRIDestroyPixmap(client);
 
@@ -367,7 +379,8 @@ ProcAppleDRIDispatch(register ClientPtr client)
 }
 
 static void
-SNotifyEvent(xAppleDRINotifyEvent * from, xAppleDRINotifyEvent * to)
+SNotifyEvent(xAppleDRINotifyEvent *from,
+             xAppleDRINotifyEvent *to)
 {
     to->type = from->type;
     to->kind = from->kind;
@@ -451,6 +464,7 @@ SProcAppleDRIDispatch(register ClientPtr client)
     switch (stuff->data) {
     case X_AppleDRIQueryVersion:
         return SProcAppleDRIQueryVersion(client);
+
     case X_AppleDRIQueryDirectRenderingCapable:
         return SProcAppleDRIQueryDirectRenderingCapable(client);
     }
@@ -461,12 +475,16 @@ SProcAppleDRIDispatch(register ClientPtr client)
     switch (stuff->data) {
     case X_AppleDRIAuthConnection:
         return SProcAppleDRIAuthConnection(client);
+
     case X_AppleDRICreateSurface:
         return SProcAppleDRICreateSurface(client);
+
     case X_AppleDRIDestroySurface:
         return SProcAppleDRIDestroySurface(client);
+
     case X_AppleDRICreatePixmap:
         return SProcAppleDRICreatePixmap(client);
+
     case X_AppleDRIDestroyPixmap:
         return SProcAppleDRIDestroyPixmap(client);
 
@@ -486,9 +504,9 @@ AppleDRIExtensionInit(void)
                                  AppleDRINumberErrors,
                                  ProcAppleDRIDispatch,
                                  SProcAppleDRIDispatch,
-                                 AppleDRIResetProc, StandardMinorOpcode))) {
+                                 AppleDRIResetProc,
+                                 StandardMinorOpcode))) {
         size_t i;
-
         DRIReqCode = (unsigned char) extEntry->base;
         DRIErrorBase = extEntry->errorBase;
         DRIEventBase = extEntry->eventBase;
