diff --git a/dix/deprecated.c b/dix/deprecated.c
index 2bb8119..d395c96 100644
--- a/dix/deprecated.c
+++ b/dix/deprecated.c
@@ -61,7 +61,7 @@ SOFTWARE.
  */
 
 /* replaced by dixLookupWindow */
-_X_EXPORT WindowPtr
+WindowPtr
 SecurityLookupWindow(XID id, ClientPtr client, Mask access_mode)
 {
     WindowPtr pWin;
@@ -75,14 +75,14 @@ SecurityLookupWindow(XID id, ClientPtr client, Mask access_mode)
 }
 
 /* replaced by dixLookupWindow */
-_X_EXPORT WindowPtr
+WindowPtr
 LookupWindow(XID id, ClientPtr client)
 {
     return SecurityLookupWindow(id, client, DixUnknownAccess);
 }
 
 /* replaced by dixLookupDrawable */
-_X_EXPORT pointer
+pointer
 SecurityLookupDrawable(XID id, ClientPtr client, Mask access_mode)
 {
     DrawablePtr pDraw;
@@ -96,14 +96,14 @@ SecurityLookupDrawable(XID id, ClientPtr client, Mask access_mode)
 }
 
 /* replaced by dixLookupDrawable */
-_X_EXPORT pointer
+pointer
 LookupDrawable(XID id, ClientPtr client)
 {
     return SecurityLookupDrawable(id, client, DixUnknownAccess);
 }
 
 /* replaced by dixLookupClient */
-_X_EXPORT ClientPtr
+ClientPtr
 LookupClient(XID id, ClientPtr client)
 {
     ClientPtr pClient;
@@ -116,7 +116,7 @@ LookupClient(XID id, ClientPtr client)
 }
 
 /* replaced by dixLookupResource */
-_X_EXPORT pointer
+pointer
 SecurityLookupIDByType(ClientPtr client, XID id, RESTYPE rtype,
 		       Mask access_mode)
 {
@@ -131,7 +131,7 @@ SecurityLookupIDByType(ClientPtr client, XID id, RESTYPE rtype,
 }
 
 /* replaced by dixLookupResource */
-_X_EXPORT pointer
+pointer
 SecurityLookupIDByClass(ClientPtr client, XID id, RESTYPE classes,
 			Mask access_mode)
 {
@@ -146,14 +146,14 @@ SecurityLookupIDByClass(ClientPtr client, XID id, RESTYPE classes,
 }
 
 /* replaced by dixLookupResource */
-_X_EXPORT pointer
+pointer
 LookupIDByType(XID id, RESTYPE rtype)
 {
     return SecurityLookupIDByType(NullClient, id, rtype, DixUnknownAccess);
 }
 
 /* replaced by dixLookupResource */
-_X_EXPORT pointer
+pointer
 LookupIDByClass(XID id, RESTYPE classes)
 {
     return SecurityLookupIDByClass(NullClient, id, classes, DixUnknownAccess);
