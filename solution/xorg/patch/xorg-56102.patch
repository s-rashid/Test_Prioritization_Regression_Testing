diff --git a/render/picturestr.h b/render/picturestr.h
index 9b37671..cd4ec49 100644
--- a/render/picturestr.h
+++ b/render/picturestr.h
@@ -189,9 +189,7 @@ typedef struct {
 typedef int	(*CreatePictureProcPtr)	    (PicturePtr pPicture);
 typedef void	(*DestroyPictureProcPtr)    (PicturePtr pPicture);
 typedef int	(*ChangePictureClipProcPtr) (PicturePtr	pPicture,
-					     int	clipType,
-					     pointer    value,
-					     int	n);
+                                         int clipType, pointer value, int n);
 typedef void	(*DestroyPictureClipProcPtr)(PicturePtr	pPicture);
 
 typedef int	(*ChangePictureTransformProcPtr)    (PicturePtr	    pPicture,
@@ -199,15 +197,12 @@ typedef int	(*ChangePictureTransformProcPtr)    (PicturePtr	    pPicture,
 
 typedef int	(*ChangePictureFilterProcPtr)	(PicturePtr	pPicture,
 						 int		filter,
-						 xFixed		*params,
-						 int		nparams);
+                                           xFixed * params, int nparams);
 
 typedef void	(*DestroyPictureFilterProcPtr)	(PicturePtr pPicture);
 
-typedef void	(*ChangePictureProcPtr)	    (PicturePtr pPicture,
-					     Mask	mask);
-typedef void	(*ValidatePictureProcPtr)    (PicturePtr pPicture,
-					     Mask       mask);
+typedef void (*ChangePictureProcPtr) (PicturePtr pPicture, Mask mask);
+typedef void (*ValidatePictureProcPtr) (PicturePtr pPicture, Mask mask);
 typedef void	(*CompositeProcPtr)	    (CARD8	op,
 					     PicturePtr pSrc,
 					     PicturePtr pMask,
@@ -217,9 +212,7 @@ typedef void	(*CompositeProcPtr)	    (CARD8	op,
 					     INT16	xMask,
 					     INT16	yMask,
 					     INT16	xDst,
-					     INT16	yDst,
-					     CARD16	width,
-					     CARD16	height);
+                                  INT16 yDst, CARD16 width, CARD16 height);
 
 typedef void	(*GlyphsProcPtr)	    (CARD8      op,
 					     PicturePtr pSrc,
@@ -228,84 +221,64 @@ typedef void	(*GlyphsProcPtr)	    (CARD8      op,
 					     INT16      xSrc,
 					     INT16      ySrc,
 					     int	nlists,
-					     GlyphListPtr   lists,
-					     GlyphPtr	*glyphs);
+                               GlyphListPtr lists, GlyphPtr * glyphs);
 
 typedef void	(*CompositeRectsProcPtr)    (CARD8	    op,
 					     PicturePtr	    pDst,
 					     xRenderColor   *color,
-					     int	    nRect,
-					     xRectangle	    *rects);
+                                       int nRect, xRectangle *rects);
 
 typedef void	(*RasterizeTrapezoidProcPtr)(PicturePtr	    pMask,
 					     xTrapezoid	    *trap,
-					     int	    x_off,
-					     int	    y_off);
+                                           int x_off, int y_off);
 
 typedef void	(*TrapezoidsProcPtr)	    (CARD8	    op,
 					     PicturePtr	    pSrc,
 					     PicturePtr	    pDst,
 					     PictFormatPtr  maskFormat,
 					     INT16	    xSrc,
-					     INT16	    ySrc,
-					     int	    ntrap,
-					     xTrapezoid	    *traps);
+                                   INT16 ySrc, int ntrap, xTrapezoid * traps);
 
 typedef void	(*TrianglesProcPtr)	    (CARD8	    op,
 					     PicturePtr	    pSrc,
 					     PicturePtr	    pDst,
 					     PictFormatPtr  maskFormat,
 					     INT16	    xSrc,
-					     INT16	    ySrc,
-					     int	    ntri,
-					     xTriangle	    *tris);
+                                  INT16 ySrc, int ntri, xTriangle * tris);
 
 typedef void	(*TriStripProcPtr)	    (CARD8	    op,
 					     PicturePtr	    pSrc,
 					     PicturePtr	    pDst,
 					     PictFormatPtr  maskFormat,
 					     INT16	    xSrc,
-					     INT16	    ySrc,
-					     int	    npoint,
-					     xPointFixed    *points);
+                                 INT16 ySrc, int npoint, xPointFixed * points);
 
 typedef void	(*TriFanProcPtr)	    (CARD8	    op,
 					     PicturePtr	    pSrc,
 					     PicturePtr	    pDst,
 					     PictFormatPtr  maskFormat,
 					     INT16	    xSrc,
-					     INT16	    ySrc,
-					     int	    npoint,
-					     xPointFixed    *points);
+                               INT16 ySrc, int npoint, xPointFixed * points);
 
-typedef Bool	(*InitIndexedProcPtr)	    (ScreenPtr	    pScreen,
-					     PictFormatPtr  pFormat);
+typedef Bool (*InitIndexedProcPtr) (ScreenPtr pScreen, PictFormatPtr pFormat);
 
-typedef void	(*CloseIndexedProcPtr)	    (ScreenPtr	    pScreen,
-					     PictFormatPtr  pFormat);
+typedef void (*CloseIndexedProcPtr) (ScreenPtr pScreen, PictFormatPtr pFormat);
 
 typedef void	(*UpdateIndexedProcPtr)	    (ScreenPtr	    pScreen,
 					     PictFormatPtr  pFormat,
-					     int	    ndef,
-					     xColorItem	    *pdef);
+                                      int ndef, xColorItem * pdef);
 
 typedef void	(*AddTrapsProcPtr)	    (PicturePtr	    pPicture,
 					     INT16	    xOff,
-					     INT16	    yOff,
-					     int	    ntrap,
-					     xTrap	    *traps);
+                                 INT16 yOff, int ntrap, xTrap * traps);
 
 typedef void	(*AddTrianglesProcPtr)	    (PicturePtr	    pPicture,
 					     INT16	    xOff,
-					     INT16	    yOff,
-					     int	    ntri,
-					     xTriangle	    *tris);
+                                     INT16 yOff, int ntri, xTriangle * tris);
 
-typedef Bool	(*RealizeGlyphProcPtr)	    (ScreenPtr	    pScreen,
-					     GlyphPtr	    glyph);
+typedef Bool (*RealizeGlyphProcPtr) (ScreenPtr pScreen, GlyphPtr glyph);
 
-typedef void	(*UnrealizeGlyphProcPtr)    (ScreenPtr	    pScreen,
-					     GlyphPtr	    glyph);
+typedef void (*UnrealizeGlyphProcPtr) (ScreenPtr pScreen, GlyphPtr glyph);
 
 typedef struct _PictureScreen {
     PictFormatPtr		formats;
@@ -372,9 +345,11 @@ typedef struct _PictureScreen {
 } PictureScreenRec, *PictureScreenPtr;
 
 extern _X_EXPORT DevPrivateKeyRec PictureScreenPrivateKeyRec;
+
 #define PictureScreenPrivateKey (&PictureScreenPrivateKeyRec)
 
 extern _X_EXPORT DevPrivateKeyRec PictureWindowPrivateKeyRec;
+
 #define	PictureWindowPrivateKey (&PictureWindowPrivateKeyRec)
 
 extern _X_EXPORT RESTYPE	PictureType;
@@ -435,17 +410,17 @@ PictureInit (ScreenPtr pScreen, PictFormatPtr formats, int nformats);
 extern _X_EXPORT int
 PictureGetFilterId (const char *filter, int len, Bool makeit);
 
-extern _X_EXPORT char *
-PictureGetFilterName (int id);
+extern _X_EXPORT char *PictureGetFilterName(int id);
 
 extern _X_EXPORT int
+
 PictureAddFilter (ScreenPtr			    pScreen,
 		  const char			    *filter,
 		  PictFilterValidateParamsProcPtr   ValidateParams,
-		  int				    width,
-		  int				    height);
+                 int width, int height);
 
 extern _X_EXPORT Bool
+
 PictureSetFilterAlias (ScreenPtr pScreen, const char *filter, const char *alias);
 
 extern _X_EXPORT Bool
@@ -458,10 +433,12 @@ extern _X_EXPORT PictFilterPtr
 PictureFindFilter (ScreenPtr pScreen, char *name, int len);
 
 extern _X_EXPORT int
+
 SetPicturePictFilter (PicturePtr pPicture, PictFilterPtr pFilter,
 		      xFixed *params, int nparams);
 
 extern _X_EXPORT int
+
 SetPictureFilter (PicturePtr pPicture, char *name, int len,
 		  xFixed *params, int nparams);
 
@@ -475,52 +452,40 @@ extern _X_EXPORT PicturePtr
 CreatePicture (Picture		pid,
 	       DrawablePtr	pDrawable,
 	       PictFormatPtr	pFormat,
-	       Mask		mask,
-	       XID		*list,
-	       ClientPtr	client,
-	       int		*error);
+              Mask mask, XID *list, ClientPtr client, int *error);
 
 extern _X_EXPORT int
+
 ChangePicture (PicturePtr	pPicture,
-	       Mask		vmask,
-	       XID		*vlist,
-	       DevUnion		*ulist,
-	       ClientPtr	client);
+              Mask vmask, XID *vlist, DevUnion *ulist, ClientPtr client);
 
 extern _X_EXPORT int
+
 SetPictureClipRects (PicturePtr	pPicture,
-		     int	xOrigin,
-		     int	yOrigin,
-		     int	nRect,
-		     xRectangle	*rects);
+                    int xOrigin, int yOrigin, int nRect, xRectangle *rects);
 
 extern _X_EXPORT int
+
 SetPictureClipRegion (PicturePtr    pPicture,
-		      int	    xOrigin,
-		      int	    yOrigin,
-		      RegionPtr	    pRegion);
+                     int xOrigin, int yOrigin, RegionPtr pRegion);
 
 extern _X_EXPORT int
-SetPictureTransform (PicturePtr	    pPicture,
-		     PictTransform  *transform);
+ SetPictureTransform(PicturePtr pPicture, PictTransform * transform);
 
 extern _X_EXPORT void
-CopyPicture (PicturePtr	pSrc,
-	     Mask	mask,
-	     PicturePtr	pDst);
+ CopyPicture(PicturePtr pSrc, Mask mask, PicturePtr pDst);
 
 extern _X_EXPORT void
 ValidatePicture(PicturePtr pPicture);
 
 extern _X_EXPORT int
-FreePicture (pointer	pPicture,
-	     XID	pid);
+ FreePicture(pointer pPicture, XID pid);
 
 extern _X_EXPORT int
-FreePictFormat (pointer	pPictFormat,
-		XID     pid);
+ FreePictFormat(pointer pPictFormat, XID pid);
 
 extern _X_EXPORT void
+
 CompositePicture (CARD8		op,
 		  PicturePtr	pSrc,
 		  PicturePtr	pMask,
@@ -529,68 +494,55 @@ CompositePicture (CARD8		op,
 		  INT16		ySrc,
 		  INT16		xMask,
 		  INT16		yMask,
-		  INT16		xDst,
-		  INT16		yDst,
-		  CARD16	width,
-		  CARD16	height);
+                 INT16 xDst, INT16 yDst, CARD16 width, CARD16 height);
 
 extern _X_EXPORT void
+
 CompositeGlyphs (CARD8		op,
 		 PicturePtr	pSrc,
 		 PicturePtr	pDst,
 		 PictFormatPtr	maskFormat,
 		 INT16		xSrc,
-		 INT16		ySrc,
-		 int		nlist,
-		 GlyphListPtr	lists,
-		 GlyphPtr	*glyphs);
+                INT16 ySrc, int nlist, GlyphListPtr lists, GlyphPtr * glyphs);
 
 extern _X_EXPORT void
+
 CompositeRects (CARD8		op,
 		PicturePtr	pDst,
-		xRenderColor	*color,
-		int		nRect,
-		xRectangle      *rects);
+               xRenderColor * color, int nRect, xRectangle *rects);
 
 extern _X_EXPORT void
+
 CompositeTrapezoids (CARD8	    op,
 		     PicturePtr	    pSrc,
 		     PicturePtr	    pDst,
 		     PictFormatPtr  maskFormat,
-		     INT16	    xSrc,
-		     INT16	    ySrc,
-		     int	    ntrap,
-		     xTrapezoid	    *traps);
+                    INT16 xSrc, INT16 ySrc, int ntrap, xTrapezoid * traps);
 
 extern _X_EXPORT void
+
 CompositeTriangles (CARD8	    op,
 		    PicturePtr	    pSrc,
 		    PicturePtr	    pDst,
 		    PictFormatPtr   maskFormat,
 		    INT16	    xSrc,
-		    INT16	    ySrc,
-		    int		    ntriangles,
-		    xTriangle	    *triangles);
+                   INT16 ySrc, int ntriangles, xTriangle * triangles);
 
 extern _X_EXPORT void
+
 CompositeTriStrip (CARD8	    op,
 		   PicturePtr	    pSrc,
 		   PicturePtr	    pDst,
 		   PictFormatPtr    maskFormat,
-		   INT16	    xSrc,
-		   INT16	    ySrc,
-		   int		    npoints,
-		   xPointFixed	    *points);
+                  INT16 xSrc, INT16 ySrc, int npoints, xPointFixed * points);
 
 extern _X_EXPORT void
+
 CompositeTriFan (CARD8		op,
 		 PicturePtr	pSrc,
 		 PicturePtr	pDst,
 		 PictFormatPtr	maskFormat,
-		 INT16		xSrc,
-		 INT16		ySrc,
-		 int		npoints,
-		 xPointFixed	*points);
+                INT16 xSrc, INT16 ySrc, int npoints, xPointFixed * points);
 
 extern _X_EXPORT void RenderExtensionInit (void);
 
@@ -598,28 +550,24 @@ Bool
 AnimCurInit (ScreenPtr pScreen);
 
 int
-AnimCursorCreate (CursorPtr *cursors, CARD32 *deltas, int ncursor, CursorPtr *ppCursor, ClientPtr client, XID cid);
+
+AnimCursorCreate(CursorPtr *cursors, CARD32 *deltas, int ncursor,
+                 CursorPtr *ppCursor, ClientPtr client, XID cid);
 
 extern _X_EXPORT void
+
 AddTraps (PicturePtr	pPicture,
-	  INT16		xOff,
-	  INT16		yOff,
-	  int		ntraps,
-	  xTrap		*traps);
+         INT16 xOff, INT16 yOff, int ntraps, xTrap * traps);
 
 extern _X_EXPORT PicturePtr
-CreateSolidPicture (Picture pid,
-                    xRenderColor *color,
-                    int *error);
+CreateSolidPicture(Picture pid, xRenderColor * color, int *error);
 
 extern _X_EXPORT PicturePtr
 CreateLinearGradientPicture (Picture pid,
                              xPointFixed *p1,
                              xPointFixed *p2,
                              int nStops,
-                             xFixed *stops,
-                             xRenderColor *colors,
-                             int *error);
+                            xFixed * stops, xRenderColor * colors, int *error);
 
 extern _X_EXPORT PicturePtr
 CreateRadialGradientPicture (Picture pid,
@@ -628,18 +576,14 @@ CreateRadialGradientPicture (Picture pid,
                              xFixed innerRadius,
                              xFixed outerRadius,
                              int nStops,
-                             xFixed *stops,
-                             xRenderColor *colors,
-                             int *error);
+                            xFixed * stops, xRenderColor * colors, int *error);
 
 extern _X_EXPORT PicturePtr
 CreateConicalGradientPicture (Picture pid,
                               xPointFixed *center,
                               xFixed angle,
                               int nStops,
-                              xFixed *stops,
-                              xRenderColor *colors,
-                              int *error);
+                             xFixed * stops, xRenderColor * colors, int *error);
 
 #ifdef PANORAMIX
 extern _X_EXPORT void PanoramiXRenderInit (void);
@@ -651,19 +595,19 @@ extern _X_EXPORT void PanoramiXRenderReset (void);
  */
 
 extern _X_EXPORT void
+
 PictTransform_from_xRenderTransform (PictTransformPtr pict,
 				     xRenderTransform *render);
 
 extern _X_EXPORT void
+
 xRenderTransform_from_PictTransform (xRenderTransform *render,
 				     PictTransformPtr pict);
 
 extern _X_EXPORT Bool
-PictureTransformPoint (PictTransformPtr transform,
-		       PictVectorPtr	vector);
+ PictureTransformPoint(PictTransformPtr transform, PictVectorPtr vector);
 
 extern _X_EXPORT Bool
-PictureTransformPoint3d (PictTransformPtr transform,
-                         PictVectorPtr	vector);
+ PictureTransformPoint3d(PictTransformPtr transform, PictVectorPtr vector);
 
 #endif /* _PICTURESTR_H_ */
