diff --git a/hw/xfree86/os-support/linux/lnx_agp.c b/hw/xfree86/os-support/linux/lnx_agp.c
index a5f0411..e1fa3f8 100644
--- a/hw/xfree86/os-support/linux/lnx_agp.c
+++ b/hw/xfree86/os-support/linux/lnx_agp.c
@@ -7,7 +7,6 @@
  * Copyright Â© 2001 The XFree86 Project, Inc.
  */
 
-
 #ifdef HAVE_XORG_CONFIG_H
 #include <xorg-config.h>
 #endif
@@ -39,6 +38,7 @@
 static int gartFd = -1;
 static int acquiredScreen = -1;
 static Bool initDone = FALSE;
+
 /*
  * Close /dev/agpgart.  This frees all associated memory allocated during
  * this server generation.
@@ -131,7 +131,6 @@ xf86GetAGPInfo(int screenNum)
 	if (!GARTInit(screenNum))
 		return NULL;
 
-
 	if ((info = calloc(sizeof(AgpInfo), 1)) == NULL) {
 		xf86DrvMsg(screenNum, X_ERROR,
 			   "xf86GetAGPInfo: Failed to allocate AgpInfo\n");
@@ -155,7 +154,8 @@ xf86GetAGPInfo(int screenNum)
 	info->systemPages = agpinf.pg_system;
 	info->usedPages = agpinf.pg_used;
 
-	xf86DrvMsg(screenNum, X_INFO, "Kernel reported %zu total, %zu used\n", agpinf.pg_total, agpinf.pg_used);
+    xf86DrvMsg(screenNum, X_INFO, "Kernel reported %zu total, %zu used\n",
+               agpinf.pg_total, agpinf.pg_used);
 
 	return info;
 }
@@ -319,7 +319,6 @@ xf86BindGARTMemory(int screenNum, int key, unsigned long offset)
 	return TRUE;
 }
 
-
 /* Unbind GART memory with "key" */
 Bool
 xf86UnbindGARTMemory(int screenNum, int key)
@@ -351,7 +350,6 @@ xf86UnbindGARTMemory(int screenNum, int key)
 	return TRUE;
 }
 
-
 /* XXX Interface may change. */
 Bool
 xf86EnableAGP(int screenNum, CARD32 mode)
@@ -371,4 +369,3 @@ xf86EnableAGP(int screenNum, CARD32 mode)
 
 	return TRUE;
 }
-
