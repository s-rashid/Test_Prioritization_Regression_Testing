diff --git a/hw/xfree86/os-support/solaris/sun_vid.c b/hw/xfree86/os-support/solaris/sun_vid.c
index f99bac5..67ef176 100644
--- a/hw/xfree86/os-support/solaris/sun_vid.c
+++ b/hw/xfree86/os-support/solaris/sun_vid.c
@@ -70,11 +70,9 @@ static int apertureDevFD_rw = -1;
 static Bool
 solOpenAperture(void)
 {
-    if (apertureDevName == NULL)
-    {
+    if (apertureDevName == NULL) {
 	apertureDevName = "/dev/xsvc";
-	if ((apertureDevFD_rw = open(apertureDevName, O_RDWR)) < 0)
-	{
+        if ((apertureDevFD_rw = open(apertureDevName, O_RDWR)) < 0) {
 	    xf86MsgVerb(X_WARNING, 0,
 			"solOpenAperture: failed to open %s (%s)\n",
 			apertureDevName, strerror(errno));
@@ -83,8 +81,7 @@ solOpenAperture(void)
 	}
 	apertureDevFD_ro = open(apertureDevName, O_RDONLY);
 
-	if ((apertureDevFD_rw < 0) || (apertureDevFD_ro < 0))
-	{
+        if ((apertureDevFD_rw < 0) || (apertureDevFD_ro < 0)) {
 	    xf86MsgVerb(X_WARNING, 0,
 			"solOpenAperture: failed to open %s (%s)\n",
 			apertureDevName, strerror(errno));
@@ -94,14 +91,12 @@ solOpenAperture(void)
 
 	    apertureDevName = NULL;
 
-	    if (apertureDevFD_rw >= 0)
-	    {
+            if (apertureDevFD_rw >= 0) {
 		close(apertureDevFD_rw);
 	    }
 	    apertureDevFD_rw = -1;
 
-	    if (apertureDevFD_ro >= 0)
-	    {
+            if (apertureDevFD_ro >= 0) {
 		close(apertureDevFD_ro);
 	    }
 	    apertureDevFD_ro = -1;
@@ -119,19 +114,16 @@ solMapVidMem(int ScreenNum, unsigned long Base, unsigned long Size, int Flags)
     int fd;
     int prot;
 
-    if (Flags & VIDMEM_READONLY)
-    {
+    if (Flags & VIDMEM_READONLY) {
 	fd = apertureDevFD_ro;
 	prot = PROT_READ;
     }
-    else
-    {
+    else {
 	fd = apertureDevFD_rw;
 	prot = PROT_READ | PROT_WRITE;
     }
 
-    if (fd < 0)
-    {
+    if (fd < 0) {
 	xf86DrvMsg(ScreenNum, X_ERROR,
 		   "solMapVidMem: failed to open %s (%s)\n",
 		   apertureDevName, strerror(errno));
@@ -158,8 +150,7 @@ solUnMapVidMem(int ScreenNum, pointer Base, unsigned long Size)
 	xf86DrvMsgVerb(ScreenNum, X_WARNING, 0,
 		       "solUnMapVidMem: failed to unmap %s"
 		       " (0x%p,0x%lx) (%s)\n",
-		       apertureDevName, Base, Size,
-		       strerror(errno));
+                       apertureDevName, Base, Size, strerror(errno));
     }
 }
 
@@ -170,7 +161,8 @@ xf86OSInitVidMem(VidMemInfoPtr pVidMem)
     if (pVidMem->linearSupported) {
 	pVidMem->mapMem = solMapVidMem;
 	pVidMem->unmapMem = solUnMapVidMem;
-    } else {
+    }
+    else {
 	xf86MsgVerb(X_WARNING, 0,
 		    "xf86OSInitVidMem: linear memory access disabled\n");
     }
@@ -193,8 +185,7 @@ xf86ReadBIOS(unsigned long Base, unsigned long Offset, unsigned char *Buf,
     Base &= ~(psize - 1);
     mlen = (Offset + Len + psize - 1) & ~(psize - 1);
 
-    if (solOpenAperture() == FALSE)
-    {
+    if (solOpenAperture() == FALSE) {
 	xf86Msg(X_WARNING,
 		"xf86ReadBIOS: Failed to open aperture to read BIOS\n");
 	return -1;
@@ -202,8 +193,7 @@ xf86ReadBIOS(unsigned long Base, unsigned long Offset, unsigned char *Buf,
 
     ptr = (unsigned char *)mmap(NULL, mlen, PROT_READ,
 				MAP_SHARED, apertureDevFD_ro, (off_t)Base);
-    if (ptr == MAP_FAILED)
-    {
+    if (ptr == MAP_FAILED) {
 	xf86Msg(X_WARNING, "xf86ReadBIOS: %s mmap failed [0x%08lx, 0x%04x]\n",
 		apertureDevName, Base, mlen);
 	return -1;
@@ -219,7 +209,6 @@ xf86ReadBIOS(unsigned long Base, unsigned long Offset, unsigned char *Buf,
     return Len;
 }
 
-
 /***************************************************************************/
 /* I/O Permissions section						   */
 /***************************************************************************/
