diff --git a/Xi/getfctl.c b/Xi/getfctl.c
index 308b7eb..870348f 100644
--- a/Xi/getfctl.c
+++ b/Xi/getfctl.c
@@ -1,5 +1,3 @@
-/* $Xorg: getfctl.c,v 1.4 2001/02/09 02:04:34 xorgcvs Exp $ */
-
 /************************************************************
 
 Copyright 1989, 1998  The Open Group
@@ -45,7 +43,6 @@ ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 SOFTWARE.
 
 ********************************************************/
-/* $XFree86: xc/programs/Xserver/Xi/getfctl.c,v 3.3 2001/01/17 22:13:24 dawes Exp $ */
 
 /********************************************************************
  *
@@ -111,10 +108,8 @@ ProcXGetFeedbackControl(ClientPtr client)
     REQUEST_SIZE_MATCH(xGetFeedbackControlReq);
 
     dev = LookupDeviceIntRec (stuff->deviceid);
-    if (dev == NULL)
-	{
-	SendErrorToClient (client, IReqCode, X_GetFeedbackControl, 0, 
-		BadDevice);
+    if (dev == NULL) {
+	SendErrorToClient(client, IReqCode, X_GetFeedbackControl, 0, BadDevice);
 	return Success;
 	}
 
@@ -124,50 +119,40 @@ ProcXGetFeedbackControl(ClientPtr client)
     rep.sequenceNumber = client->sequence;
     rep.num_feedbacks = 0;
 
-    for (k=dev->kbdfeed; k; k=k->next)
-	{
+    for (k = dev->kbdfeed; k; k = k->next) {
 	rep.num_feedbacks++;
 	total_length += sizeof(xKbdFeedbackState);
 	}
-    for (p=dev->ptrfeed; p; p=p->next)
-	{
+    for (p = dev->ptrfeed; p; p = p->next) {
 	rep.num_feedbacks++;
 	total_length += sizeof(xPtrFeedbackState);
 	}
-    for (s=dev->stringfeed; s; s=s->next)
-	{
+    for (s = dev->stringfeed; s; s = s->next) {
 	rep.num_feedbacks++;
 	total_length += sizeof(xStringFeedbackState) + 
 	    (s->ctrl.num_symbols_supported * sizeof (KeySym));
 	}
-    for (i=dev->intfeed; i; i=i->next)
-	{
+    for (i = dev->intfeed; i; i = i->next) {
 	rep.num_feedbacks++;
 	total_length += sizeof(xIntegerFeedbackState);
 	}
-    for (l=dev->leds; l; l=l->next)
-	{
+    for (l = dev->leds; l; l = l->next) {
 	rep.num_feedbacks++;
 	total_length += sizeof(xLedFeedbackState);
 	}
-    for (b=dev->bell; b; b=b->next)
-	{
+    for (b = dev->bell; b; b = b->next) {
 	rep.num_feedbacks++;
 	total_length += sizeof(xBellFeedbackState);
 	}
 
-    if (total_length == 0)
-	{
-	SendErrorToClient(client, IReqCode, X_GetFeedbackControl, 0, 
-		BadMatch);
+    if (total_length == 0) {
+	SendErrorToClient(client, IReqCode, X_GetFeedbackControl, 0, BadMatch);
 	return Success;
 	}
 
     buf = (char *) xalloc (total_length);
-    if (!buf)
-	{
-	SendErrorToClient(client, IReqCode, X_GetFeedbackControl, 0, 
-		BadAlloc);
+    if (!buf) {
+	SendErrorToClient(client, IReqCode, X_GetFeedbackControl, 0, BadAlloc);
 	return Success;
 	}
     savbuf=buf;
@@ -217,8 +202,7 @@ CopySwapKbdFeedback (ClientPtr client, KbdFeedbackPtr k, char **buf)
     k2->global_auto_repeat = k->ctrl.autoRepeat;
     for (i=0; i<32; i++)
 	k2->auto_repeats[i] = k->ctrl.autoRepeats[i];
-    if (client->swapped)
-	{
+    if (client->swapped) {
 	swaps(&k2->length,n);
 	swaps(&k2->pitch,n);
 	swaps(&k2->duration,n);
@@ -247,8 +231,7 @@ CopySwapPtrFeedback (ClientPtr client, PtrFeedbackPtr p, char **buf)
     p2->accelNum = p->ctrl.num;
     p2->accelDenom = p->ctrl.den;
     p2->threshold = p->ctrl.threshold;
-    if (client->swapped)
-	{
+    if (client->swapped) {
 	swaps(&p2->length,n);
 	swaps(&p2->accelNum,n);
 	swaps(&p2->accelDenom,n);
@@ -276,8 +259,7 @@ CopySwapIntegerFeedback (ClientPtr client, IntegerFeedbackPtr i, char **buf)
     i2->resolution = i->ctrl.resolution;
     i2->min_value = i->ctrl.min_value;
     i2->max_value = i->ctrl.max_value;
-    if (client->swapped)
-	{
+    if (client->swapped) {
 	swaps(&i2->length,n);
 	swapl(&i2->resolution,n);
 	swapl(&i2->min_value,n);
@@ -311,14 +293,12 @@ CopySwapStringFeedback (ClientPtr client, StringFeedbackPtr s, char **buf)
     kptr = (KeySym *) (*buf);
     for (i=0; i<s->ctrl.num_symbols_supported; i++)
 	*kptr++ = *(s->ctrl.symbols_supported+i);
-    if (client->swapped)
-	{
+    if (client->swapped) {
 	swaps(&s2->length,n);
 	swaps(&s2->max_symbols,n);
 	swaps(&s2->num_syms_supported,n);
         kptr = (KeySym *) (*buf);
-	for (i=0; i<s->ctrl.num_symbols_supported; i++,kptr++)
-	    {
+	for (i = 0; i < s->ctrl.num_symbols_supported; i++, kptr++) {
 	    swapl(kptr,n);
 	    }
 	}
@@ -343,8 +323,7 @@ CopySwapLedFeedback (ClientPtr client, LedFeedbackPtr l, char **buf)
     l2->id = l->ctrl.id;
     l2->led_values = l->ctrl.led_values;
     l2->led_mask = l->ctrl.led_mask;
-    if (client->swapped)
-	{
+    if (client->swapped) {
 	swaps(&l2->length,n);
 	swapl(&l2->led_values,n);
 	swapl(&l2->led_mask,n);
@@ -371,8 +350,7 @@ CopySwapBellFeedback (ClientPtr client, BellFeedbackPtr b, char **buf)
     b2->percent = b->ctrl.percent;
     b2->pitch = b->ctrl.pitch;
     b2->duration = b->ctrl.duration;
-    if (client->swapped)
-	{
+    if (client->swapped) {
 	swaps(&b2->length,n);
 	swaps(&b2->pitch,n);
 	swaps(&b2->duration,n);
@@ -388,7 +366,8 @@ CopySwapBellFeedback (ClientPtr client, BellFeedbackPtr b, char **buf)
  */
 
 void
-SRepXGetFeedbackControl (ClientPtr client, int size, xGetFeedbackControlReply *rep)
+SRepXGetFeedbackControl(ClientPtr client, int size,
+			xGetFeedbackControlReply * rep)
 {
     register char n;
 
