diff --git a/xkb/xkbActions.c b/xkb/xkbActions.c
index f7fa0af..f45dd81 100644
--- a/xkb/xkbActions.c
+++ b/xkb/xkbActions.c
@@ -1,4 +1,5 @@
 /* $Xorg: xkbActions.c,v 1.3 2000/08/17 19:53:47 cpqbld Exp $ */
+/* $XdotOrg: $ */
 /************************************************************
 Copyright (c) 1993 by Silicon Graphics Computer Systems, Inc.
 
@@ -38,6 +39,48 @@ THE USE OR PERFORMANCE OF THIS SOFTWARE.
 #include "xkb.h"
 #include <ctype.h>
 
+static unsigned int _xkbServerGeneration;
+int xkbDevicePrivateIndex = -1;
+
+void
+xkbUnwrapProc(DeviceIntPtr device, DeviceHandleProc proc,
+                   pointer data)
+{
+    xkbDeviceInfoPtr xkbPrivPtr = XKBDEVICEINFO(device);
+    ProcessInputProc tmp = device->public.processInputProc;
+    if(xkbPrivPtr->unwrapProc)
+	xkbPrivPtr->unwrapProc = NULL;
+
+    UNWRAP_PROCESS_INPUT_PROC(device,xkbPrivPtr);
+    proc(device,data);
+    WRAP_PROCESS_INPUT_PROC(device,xkbPrivPtr,
+			    tmp,xkbUnwrapProc);
+}
+
+
+void
+XkbSetExtension(DeviceIntPtr device, ProcessInputProc proc)
+{
+    xkbDeviceInfoPtr xkbPrivPtr;
+
+    if (serverGeneration != _xkbServerGeneration) {
+	if ((xkbDevicePrivateIndex = AllocateDevicePrivateIndex()) == -1)
+	    return;
+	_xkbServerGeneration = serverGeneration;
+    }
+    if (!AllocateDevicePrivate(device, xkbDevicePrivateIndex))
+	return;
+
+    xkbPrivPtr = (xkbDeviceInfoPtr) xalloc(sizeof(xkbDeviceInfoRec));
+    if (!xkbPrivPtr)
+	return;
+    xkbPrivPtr->unwrapProc = NULL;
+
+    device->devPrivates[xkbDevicePrivateIndex].ptr = xkbPrivPtr;
+    WRAP_PROCESS_INPUT_PROC(device,xkbPrivPtr,
+			    proc,xkbUnwrapProc);
+}
+
 #ifdef XINPUT
 extern	void	ProcessOtherEvent(
     xEvent *		/* xE */,
@@ -822,6 +865,7 @@ xEvent 		ev;
 int		x,y;
 XkbStateRec	old;
 unsigned	mods,mask,oldCoreState = 0,oldCorePrevState = 0;
+xkbDeviceInfoPtr xkbPrivPtr = XKBDEVICEINFO(xkbi->device);
 
     if ((filter->keycode!=0)&&(filter->keycode!=keycode))
 	return 1;
@@ -870,7 +914,10 @@ unsigned	mods,mask,oldCoreState = 0,oldCorePrevState = 0;
 
 	realMods = xkbi->device->key->modifierMap[ev.u.u.detail];
 	xkbi->device->key->modifierMap[ev.u.u.detail] = 0;
-	CoreProcessKeyboardEvent(&ev,xkbi->device,1);
+	UNWRAP_PROCESS_INPUT_PROC(xkbi->device,xkbPrivPtr);
+	xkbi->device->public.processInputProc(&ev,xkbi->device,1);
+	COND_WRAP_PROCESS_INPUT_PROC(xkbi->device, xkbPrivPtr,
+				     ProcessKeyboardEvent,xkbUnwrapProc);
 	xkbi->device->key->modifierMap[ev.u.u.detail] = realMods;
 	
 	if ( mask || mods ) {
@@ -908,7 +955,10 @@ unsigned	mods,mask,oldCoreState = 0,oldCorePrevState = 0;
 
 	realMods = xkbi->device->key->modifierMap[ev.u.u.detail];
 	xkbi->device->key->modifierMap[ev.u.u.detail] = 0;
-	CoreProcessKeyboardEvent(&ev,xkbi->device,1);
+	UNWRAP_PROCESS_INPUT_PROC(xkbi->device,xkbPrivPtr);
+	xkbi->device->public.processInputProc(&ev,xkbi->device,1);
+	COND_WRAP_PROCESS_INPUT_PROC(xkbi->device, xkbPrivPtr,
+				     ProcessKeyboardEvent,xkbUnwrapProc);
 	xkbi->device->key->modifierMap[ev.u.u.detail] = realMods;
 
 	if ( mask || mods ) {
@@ -1103,6 +1153,8 @@ Bool		pressEvent;
 Bool		xiEvent;
 #endif
 
+xkbDeviceInfoPtr xkbPrivPtr = XKBDEVICEINFO(dev);
+
     keyc= kbd->key;
     xkbi= keyc->xkbInfo;
     key= xE->u.u.detail;
@@ -1244,7 +1296,10 @@ Bool		xiEvent;
 	if (keyEvent) {
 	    realMods = keyc->modifierMap[key];
 	    keyc->modifierMap[key] = 0;
-	    CoreProcessKeyboardEvent(xE,dev,count);
+	    UNWRAP_PROCESS_INPUT_PROC(dev,xkbPrivPtr);
+	    dev->public.processInputProc(xE,dev,count);
+	    COND_WRAP_PROCESS_INPUT_PROC(dev, xkbPrivPtr,
+					 ProcessKeyboardEvent,xkbUnwrapProc);
 	    keyc->modifierMap[key] = realMods;
 	}
 	else CoreProcessPointerEvent(xE,dev,count);
