diff --git a/hw/dmx/config/xdmxconfig.c b/hw/dmx/config/xdmxconfig.c
index 3165ba0..f308412 100644
--- a/hw/dmx/config/xdmxconfig.c
+++ b/hw/dmx/config/xdmxconfig.c
@@ -96,7 +96,8 @@ static Widget              ecpopup, ecdialog0, ecdialog1;
 static Widget              edpopup, eddialog0, eddialog1, eddialog2;
 static Widget              aboutpopup, quitpopup;
 
-static void dmxConfigCanvasGCs(void)
+static void
+dmxConfigCanvasGCs(void)
 {
     Display       *dpy = XtDisplay(canvas);
     Window        win  = XtWindow(canvas);
@@ -105,7 +106,8 @@ static void dmxConfigCanvasGCs(void)
     Colormap      colormap;
     XColor        fg, bg, hl, tmp;
     
-    if (dmxConfigGCInit++) return;
+    if (dmxConfigGCInit++)
+        return;
 
     XtVaGetValues(canvas, XtNcolormap, &colormap, NULL);
     XAllocNamedColor(XtDisplay(canvas), colormap, "black", &bg, &tmp);
@@ -135,14 +137,16 @@ static void dmxConfigCanvasGCs(void)
     dmxConfigGCRev    = XCreateGC(dpy, win, mask, &gcvals);
 }
 
-static void dmxConfigGetDims(int *maxWidth, int *maxHeight)
+static void
+dmxConfigGetDims(int *maxWidth, int *maxHeight)
 {
     DMXConfigSubPtr   pt;
     DMXConfigEntryPtr e;
     
     *maxWidth = dmxConfigWallWidth  = 0;
     *maxHeight = dmxConfigWallHeight = 0;
-    if (!dmxConfigCurrent) return;
+    if (!dmxConfigCurrent)
+        return;
     
     dmxConfigWallWidth  = dmxConfigCurrent->width;
     dmxConfigWallHeight = dmxConfigCurrent->height;
@@ -151,34 +155,63 @@ static void dmxConfigGetDims(int *maxWidth, int *maxHeight)
             if (pt->type == dmxConfigDisplay) {
                 int x = pt->display->scrnWidth  + pt->display->rootXOrigin;
                 int y = pt->display->scrnHeight + pt->display->rootYOrigin;
-                if (x > dmxConfigWallWidth)  dmxConfigWallWidth  = x;
-                if (y > dmxConfigWallHeight) dmxConfigWallHeight = y;
+
+                if (x > dmxConfigWallWidth)
+                    dmxConfigWallWidth = x;
+                if (y > dmxConfigWallHeight)
+                    dmxConfigWallHeight = y;
             }
         }
     }
                                 /* Compute maximums */
     *maxWidth = *maxHeight = 0;
     for (e = dmxConfigEntry; e; e = e->next) {
-        if (e->type != dmxConfigVirtual) continue;
+        if (e->type != dmxConfigVirtual)
+            continue;
         for (pt = e->virtual->subentry; pt; pt = pt->next) {
             if (pt->type == dmxConfigDisplay) {
                 int x = pt->display->scrnWidth  + pt->display->rootXOrigin;
                 int y = pt->display->scrnHeight + pt->display->rootYOrigin;
-                if (x > *maxWidth)  *maxWidth  = x;
-                if (y > *maxHeight) *maxHeight = y;
+
+                if (x > *maxWidth)
+                    *maxWidth = x;
+                if (y > *maxHeight)
+                    *maxHeight = y;
+            }
+        }
             }
+    if (dmxConfigWallWidth > *maxWidth)
+        *maxWidth = dmxConfigWallWidth;
+    if (dmxConfigWallHeight > *maxHeight)
+        *maxHeight = dmxConfigWallHeight;
         }
+
+static int
+scalex(int x)
+{
+    return (int) ((x * dmxConfigScaleX) + .5);
+}
+
+static int
+scaley(int y)
+{
+    return (int) ((y * dmxConfigScaleY) + .5);
     }
-    if (dmxConfigWallWidth  > *maxWidth)  *maxWidth  = dmxConfigWallWidth;
-    if (dmxConfigWallHeight > *maxHeight) *maxHeight = dmxConfigWallHeight;
+
+static int
+unscalex(int x)
+{
+    return (int) ((x / dmxConfigScaleX) + .5);
 }
 
-static int scalex(int x)   { return (int)((x * dmxConfigScaleX) + .5); }
-static int scaley(int y)   { return (int)((y * dmxConfigScaleY) + .5); }
-static int unscalex(int x) { return (int)((x / dmxConfigScaleX) + .5); }
-static int unscaley(int y) { return (int)((y / dmxConfigScaleY) + .5); }
+static int
+unscaley(int y)
+{
+    return (int) ((y / dmxConfigScaleY) + .5);
+}
 
-static void dmxConfigDataUpdate(void)
+static void
+dmxConfigDataUpdate(void)
 {
                                 /* FIXME: could result in buffer overflows */
     char       cnambuf[512];
@@ -196,7 +229,8 @@ static void dmxConfigDataUpdate(void)
         XtVaSetValues(dcbutton,                 XtNsensitive, False, NULL);
         XtVaSetValues(ndbutton0,                XtNsensitive, False, NULL);
         XtVaSetValues(ndbutton1,                XtNsensitive, False, NULL);
-    } else {
+    }
+    else {
         name = dmxConfigCurrent->name;
         snprintf(cnambuf, sizeof(cnambuf), "%s", name ? name : "");
         snprintf(cdimbuf, sizeof(cdimbuf), "%dx%d",
@@ -216,7 +250,8 @@ static void dmxConfigDataUpdate(void)
         XtVaSetValues(origbox, XtNlabel, "", XtNsensitive, False, NULL);
         XtVaSetValues(edbutton,              XtNsensitive, False, NULL);
         XtVaSetValues(ddbutton,              XtNsensitive, False, NULL);
-    } else {
+    }
+    else {
         name = dmxConfigCurrentDisplay->name;
         snprintf(nambuf, sizeof(nambuf), "%s", name ? name : "");
         snprintf(dimbuf, sizeof(dimbuf), "%dx%d%c%d%c%d",
@@ -245,7 +280,8 @@ static void dmxConfigDataUpdate(void)
     }
 }
 
-static void dmxConfigCanvasUpdate(void)
+static void
+dmxConfigCanvasUpdate(void)
 {
     DMXConfigSubPtr pt;
     Display         *dpy     = XtDisplay(canvas);
@@ -257,12 +293,15 @@ static void dmxConfigCanvasUpdate(void)
     XFillRectangle(dpy, win, dmxConfigGCRev,
                    0, 0, dmxConfigWidgetWidth, dmxConfigWidgetHeight);
     dmxConfigDataUpdate();
-    if (!dmxConfigCurrent) return;
+    if (!dmxConfigCurrent)
+        return;
 
     w = scalex(dmxConfigWallWidth);
     h = scaley(dmxConfigWallHeight);
-    if (w > dmxConfigWidgetWidth - 1)  w = dmxConfigWidgetWidth - 1;
-    if (h > dmxConfigWidgetHeight - 1) h = dmxConfigWidgetHeight - 1;
+    if (w > dmxConfigWidgetWidth - 1)
+        w = dmxConfigWidgetWidth - 1;
+    if (h > dmxConfigWidgetHeight - 1)
+        h = dmxConfigWidgetHeight - 1;
     XDrawRectangle(dpy, win, dmxConfigGC, 0, 0, w, h);
     fs = XQueryFont(dpy, gcontext);
     for (pt = dmxConfigCurrent->subentry; pt; pt = pt->next) {
@@ -270,29 +309,34 @@ static void dmxConfigCanvasUpdate(void)
         int xo = 3, yo = fs->ascent + fs->descent + 2;
         GC  gc;
 
-        if (pt->type != dmxConfigDisplay) continue;
+        if (pt->type != dmxConfigDisplay)
+            continue;
         gc  = (pt->display == dmxConfigCurrentDisplay
-               ? dmxConfigGCHL
-               : dmxConfigGC);
+              ? dmxConfigGCHL : dmxConfigGC);
         x   = scalex(pt->display->rootXOrigin);
         y   = scaley(pt->display->rootYOrigin);
         w   = scalex(pt->display->scrnWidth);
         h   = scaley(pt->display->scrnHeight);
         len = pt->display->name ? strlen(pt->display->name) : 0;
-        if (x > dmxConfigWidgetWidth - 1)  x = dmxConfigWidgetWidth - 1;
-        if (y > dmxConfigWidgetHeight - 1) y = dmxConfigWidgetHeight - 1;
+        if (x > dmxConfigWidgetWidth - 1)
+            x = dmxConfigWidgetWidth - 1;
+        if (y > dmxConfigWidgetHeight - 1)
+            y = dmxConfigWidgetHeight - 1;
         XDrawRectangle(dpy, win, gc, x, y, w, h);
         if (fs && len) {
             while (len && XTextWidth(fs, pt->display->name, len) >= w - 2 * xo)
                 --len;
             if (len)
-                XDrawString(dpy, win, gc, x+xo, y+yo, pt->display->name, len);
+                XDrawString(dpy, win, gc, x + xo, y + yo, pt->display->name,
+                            len);
         }
     }
-    if (fs) XFreeFontInfo(NULL, fs, 0);
+    if (fs)
+        XFreeFontInfo(NULL, fs, 0);
 }
 
-static void dmxConfigCanvasDraw(Region region)
+static void
+dmxConfigCanvasDraw(Region region)
 {
     Display *dpy = XtDisplay(canvas);
     int     maxWidth, maxHeight;
@@ -305,13 +349,14 @@ static void dmxConfigCanvasDraw(Region region)
     }
     XtVaGetValues(canvas,
                   XtNwidth, &dmxConfigWidgetWidth,
-                  XtNheight, &dmxConfigWidgetHeight,
-                  NULL);
+                  XtNheight, &dmxConfigWidgetHeight, NULL);
     dmxConfigGetDims(&maxWidth, &maxHeight);
     dmxConfigScaleX = (double)dmxConfigWidgetWidth  / maxWidth;
     dmxConfigScaleY = (double)dmxConfigWidgetHeight / maxHeight;
-    if (dmxConfigScaleX > dmxConfigScaleY) dmxConfigScaleX = dmxConfigScaleY;
-    if (dmxConfigScaleY > dmxConfigScaleX) dmxConfigScaleY = dmxConfigScaleX;
+    if (dmxConfigScaleX > dmxConfigScaleY)
+        dmxConfigScaleX = dmxConfigScaleY;
+    if (dmxConfigScaleY > dmxConfigScaleX)
+        dmxConfigScaleY = dmxConfigScaleX;
     dmxConfigCanvasUpdate();
     if (region) {
         XSetClipMask(dpy, dmxConfigGC,    None);
@@ -320,74 +365,79 @@ static void dmxConfigCanvasDraw(Region region)
     }
 }
 
-static void dmxConfigSelectCallback(Widget w, XtPointer closure,
-                                    XtPointer callData)
+static void
+dmxConfigSelectCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     dmxConfigCurrent = closure;
     dmxConfigVirtualPrint(stdout, dmxConfigCurrent);
     dmxConfigCanvasDraw(NULL);
 }
 
-static void dmxConfigCopystrings(void)
+static void
+dmxConfigCopystrings(void)
 {
     DMXConfigEntryPtr pt;
     DMXConfigSubPtr   sub;
 
-    if (!dmxConfigCurrent) return;
+    if (!dmxConfigCurrent)
+        return;
 
                                 /* FIXME: this is all a per-config file
                                  * memory leak */
     for (pt = dmxConfigEntry; pt; pt = pt->next) {
         if (pt->type == dmxConfigVirtual) {
             pt->virtual->name = XtNewString(pt->virtual->name
-                                            ? pt->virtual->name
-                                            : "");
+                                            ? pt->virtual->name : "");
 
             for (sub = pt->virtual->subentry; sub; sub = sub->next) {
-                if (sub->type != dmxConfigDisplay) continue;
+                if (sub->type != dmxConfigDisplay)
+                    continue;
                 sub->display->name = XtNewString(sub->display->name
-                                                 ? sub->display->name
-                                                 : "");
+                                                 ? sub->display->name : "");
             }
         }
     }
 }
 
-static void dmxConfigGetValueString(char **d, Widget w)
+static void
+dmxConfigGetValueString(char **d, Widget w)
 {
     const char *tmp = XawDialogGetValueString(w);
-    if (*d) XtFree(*d);
+
+    if (*d)
+        XtFree(*d);
     *d = XtNewString(tmp);
 }
 
-static void dmxConfigSetupCnamemenu(void)
+static void
+dmxConfigSetupCnamemenu(void)
 {
     static Widget     cnamemenu = NULL;
     Widget            w;
     DMXConfigEntryPtr pt;
 
-    if (cnamemenu) XtDestroyWidget(cnamemenu);
+    if (cnamemenu)
+        XtDestroyWidget(cnamemenu);
     cnamemenu = NULL;
 
-    if (!dmxConfigCurrent) return;
+    if (!dmxConfigCurrent)
+        return;
     cnamemenu = XtVaCreatePopupShell("cnamemenu", simpleMenuWidgetClass,
-                                     cnamebox,
-                                     NULL);
+                                     cnamebox, NULL);
     
     for (pt = dmxConfigEntry; pt; pt = pt->next) {
         if (pt->type == dmxConfigVirtual) {
             w = XtVaCreateManagedWidget(pt->virtual->name
                                         ? pt->virtual->name
                                         : "",
-                                        smeBSBObjectClass, cnamemenu,
-                                        NULL);
-            XtAddCallback(w, XtNcallback,
-                          dmxConfigSelectCallback, pt->virtual);
+                                        smeBSBObjectClass, cnamemenu, NULL);
+            XtAddCallback(w, XtNcallback, dmxConfigSelectCallback, pt->virtual);
         }
     }
 }
 
-static void dmxConfigReadFile(void)
+static void
+dmxConfigReadFile(void)
 {
     FILE              *str;
     DMXConfigEntryPtr pt;
@@ -410,8 +460,6 @@ static void dmxConfigReadFile(void)
         }
     }
 
-    
-    
     if (XtIsRealized(canvas)) {
         dmxConfigCopystrings();
         dmxConfigSetupCnamemenu();
@@ -420,7 +468,8 @@ static void dmxConfigReadFile(void)
     dmxConfigVirtualPrint(stdout, dmxConfigCurrent);
 }
 
-static void dmxConfigWriteFile(void)
+static void
+dmxConfigWriteFile(void)
 {
     FILE              *str;
 
@@ -433,23 +482,29 @@ static void dmxConfigWriteFile(void)
     fclose(str);
 }
 
-static DMXConfigDisplayPtr dmxConfigFindDisplay(int x, int y)
+static DMXConfigDisplayPtr
+dmxConfigFindDisplay(int x, int y)
 {
     DMXConfigSubPtr pt;
 
-    if (!dmxConfigCurrent) return NULL;
+    if (!dmxConfigCurrent)
+        return NULL;
     for (pt = dmxConfigCurrent->subentry; pt; pt = pt->next) {
         DMXConfigDisplayPtr d = pt->display;
-        if (pt->type != dmxConfigDisplay) continue;
+
+        if (pt->type != dmxConfigDisplay)
+            continue;
         if (x >= scalex(d->rootXOrigin)
             && x <= scalex(d->rootXOrigin + d->scrnWidth)
             && y >= scaley(d->rootYOrigin)
-            && y <= scaley(d->rootYOrigin + d->scrnHeight)) return d;
+            && y <= scaley(d->rootYOrigin + d->scrnHeight))
+            return d;
     }
     return NULL;
 }
 
-static void dmxConfigSetPopupPosition(Widget popup)
+static void
+dmxConfigSetPopupPosition(Widget popup)
 {
     Position     x, y;
     Window       t1, t2;
@@ -457,7 +512,6 @@ static void dmxConfigSetPopupPosition(Widget popup)
     int          temp_x, temp_y;
     unsigned int temp;
 
-
     XtRealizeWidget(popup);
     if (!XQueryPointer(XtDisplay(popup), XtWindow(popup), &t1, &t2,
                        &root_x, &root_y, &temp_x, &temp_y, &temp))
@@ -468,13 +522,15 @@ static void dmxConfigSetPopupPosition(Widget popup)
     XtVaSetValues(popup, XtNx, x, XtNy, y, NULL);
 }
 
-static void dmxConfigPlaceMenu(Widget w, XEvent *event,
+static void
+dmxConfigPlaceMenu(Widget w, XEvent * event,
                                String *params, Cardinal *num_params)
 {
     dmxConfigSetPopupPosition(buttonpopup);
 }
 
-static void dmxConfigMove(int deltaX, int deltaY)
+static void
+dmxConfigMove(int deltaX, int deltaY)
 {
     dmxConfigCurrentDisplay->rootXOrigin += deltaX;
     dmxConfigCurrentDisplay->rootYOrigin += deltaY;
@@ -492,8 +548,8 @@ static void dmxConfigMove(int deltaX, int deltaY)
     dmxConfigNotSaved = 1;
 }
 
-static void dmxConfigCanvasInput(Widget w, XtPointer closure,
-                                 XtPointer callData)
+static void
+dmxConfigCanvasInput(Widget w, XtPointer closure, XtPointer callData)
 {
     XEvent              *e      = (XEvent *)callData;
     DMXConfigDisplayPtr display = NULL;
@@ -514,18 +570,22 @@ static void dmxConfigCanvasInput(Widget w, XtPointer closure,
         }
         break;
     case ButtonRelease:
-        if (e->xbutton.button == Button1) dmxConfigGrabbed = 0;
-        if (e->xbutton.button == Button2) dmxConfigGrabbed = 0;
+        if (e->xbutton.button == Button1)
+            dmxConfigGrabbed = 0;
+        if (e->xbutton.button == Button2)
+            dmxConfigGrabbed = 0;
         break;
     case MotionNotify:
         if (dmxConfigGrabbed && dmxConfigCurrentDisplay) {
             int deltaX = e->xmotion.x - dmxConfigGrabbedX;
             int deltaY = e->xmotion.y - dmxConfigGrabbedY;
+
             dmxConfigMove(dmxConfigGrabbedFine ? deltaX : unscalex(deltaX),
                           dmxConfigGrabbedFine ? deltaY : unscaley(deltaY));
             dmxConfigGrabbedX = e->xmotion.x;
             dmxConfigGrabbedY = e->xmotion.y;
-        } else {
+        }
+        else {
             display = dmxConfigFindDisplay(e->xmotion.x, e->xmotion.y);
             if (display != dmxConfigCurrentDisplay) {
                 dmxConfigCurrentDisplay = display;
@@ -535,31 +595,39 @@ static void dmxConfigCanvasInput(Widget w, XtPointer closure,
         break;
     case KeyPress:
         switch (XLookupKeysym(&e->xkey, 0)) {
-        case XK_Right: dmxConfigMove(1,0);  break;
-        case XK_Left:  dmxConfigMove(-1,0); break;
-        case XK_Down:  dmxConfigMove(0,1);  break;
-        case XK_Up:    dmxConfigMove(0,-1); break;
+        case XK_Right:
+            dmxConfigMove(1, 0);
+            break;
+        case XK_Left:
+            dmxConfigMove(-1, 0);
+            break;
+        case XK_Down:
+            dmxConfigMove(0, 1);
+            break;
+        case XK_Up:
+            dmxConfigMove(0, -1);
+            break;
         }
         break;
     }
 }
 
-static void dmxConfigCanvasResize(Widget w, XtPointer closure,
-                                  XtPointer callData)
+static void
+dmxConfigCanvasResize(Widget w, XtPointer closure, XtPointer callData)
 {
     dmxConfigCanvasDraw(NULL);
 }
 
-static void dmxConfigCanvasExpose(Widget w, XtPointer closure,
-                                  XtPointer callData)
+static void
+dmxConfigCanvasExpose(Widget w, XtPointer closure, XtPointer callData)
 {
     CanvasExposeDataPtr data = (CanvasExposeDataPtr)callData;
 
     dmxConfigCanvasDraw(data->region);
 }
 
-static void dmxConfigOpenCallback(Widget w, XtPointer closure,
-                                  XtPointer callData)
+static void
+dmxConfigOpenCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     dmxConfigState = dmxConfigStateOpen;
     XtVaSetValues(okbutton, XtNlabel, "Open", NULL);
@@ -567,8 +635,8 @@ static void dmxConfigOpenCallback(Widget w, XtPointer closure,
     XtPopup(openpopup, XtGrabExclusive);
 }
 
-static void dmxConfigSaveCallback(Widget w, XtPointer closure,
-                                  XtPointer callData)
+static void
+dmxConfigSaveCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     dmxConfigState = dmxConfigStateSave;
     XtVaSetValues(okbutton, XtNlabel, "Save", NULL);
@@ -576,40 +644,42 @@ static void dmxConfigSaveCallback(Widget w, XtPointer closure,
     XtPopup(openpopup, XtGrabExclusive);
 }
 
-static void dmxConfigOkCallback(Widget w, XtPointer closure,
-                                XtPointer callData)
+static void
+dmxConfigOkCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     dmxConfigGetValueString(&dmxConfigFilename, opendialog);
     XtPopdown(openpopup);
-    if (dmxConfigState == dmxConfigStateOpen) dmxConfigReadFile();
-    else                                      dmxConfigWriteFile();
+    if (dmxConfigState == dmxConfigStateOpen)
+        dmxConfigReadFile();
+    else
+        dmxConfigWriteFile();
     dmxConfigNotSaved = 0;
 }
 
-static void dmxConfigCanCallback(Widget w, XtPointer closure,
-                                 XtPointer callData)
+static void
+dmxConfigCanCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     XtPopdown(openpopup);
 }
 
-static void dmxConfigECCallback(Widget w, XtPointer closure,
-                                XtPointer callData)
+static void
+dmxConfigECCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     char buf[256];              /* RATS: Only used in snprintf */
     
-    if (!dmxConfigCurrent) return;
+    if (!dmxConfigCurrent)
+        return;
     dmxConfigSetPopupPosition(ecpopup);
     XtVaSetValues(ecdialog0, XtNvalue,
-                  dmxConfigCurrent->name ? dmxConfigCurrent->name : "",
-                  NULL);
+                  dmxConfigCurrent->name ? dmxConfigCurrent->name : "", NULL);
     snprintf(buf, sizeof(buf), "%dx%d",
                 dmxConfigCurrent->width, dmxConfigCurrent->height);
     XtVaSetValues(ecdialog1, XtNvalue, buf, NULL);
     XtPopup(ecpopup, XtGrabExclusive);
 }
 
-static void dmxConfigNCCallback(Widget w, XtPointer closure,
-                                XtPointer callData)
+static void
+dmxConfigNCCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     int width = 1280*2, height = 1024*2;
 
@@ -628,17 +698,19 @@ static void dmxConfigNCCallback(Widget w, XtPointer closure,
     dmxConfigECCallback(w, closure, callData);
 }
 
-static void dmxConfigDCCallback(Widget w, XtPointer closure,
-                                XtPointer callData)
+static void
+dmxConfigDCCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     DMXConfigEntryPtr pt;
 
-    if (!dmxConfigEntry) return;
+    if (!dmxConfigEntry)
+        return;
     if (dmxConfigEntry
         && dmxConfigEntry->type == dmxConfigVirtual
         && dmxConfigEntry->virtual == dmxConfigCurrent) {
         dmxConfigEntry = dmxConfigEntry->next;
-    } else {
+    }
+    else {
         for (pt = dmxConfigEntry; pt && pt->next; pt = pt->next)
             if (pt->next->type == dmxConfigVirtual
                 && pt->next->virtual == dmxConfigCurrent) {
@@ -662,8 +734,8 @@ static void dmxConfigDCCallback(Widget w, XtPointer closure,
     dmxConfigCanvasDraw(NULL);
 }
 
-static void dmxConfigECOkCallback(Widget w, XtPointer closure,
-                                  XtPointer callData)
+static void
+dmxConfigECOkCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     const char *value;
     char       *endpt;
@@ -680,26 +752,26 @@ static void dmxConfigECOkCallback(Widget w, XtPointer closure,
     dmxConfigNotSaved = 1;
 }
 
-static void dmxConfigECCanCallback(Widget w, XtPointer closure,
-                                   XtPointer callData)
+static void
+dmxConfigECCanCallback(Widget w, XtPointer closure, XtPointer callData)
 {
-    if (dmxConfigNewVirtual) dmxConfigDCCallback(w, closure, callData);
+    if (dmxConfigNewVirtual)
+        dmxConfigDCCallback(w, closure, callData);
     dmxConfigNewVirtual     = NULL;
     XtPopdown(ecpopup);
 }
 
-static void dmxConfigEDCallback(Widget w, XtPointer closure,
-                                XtPointer callData)
+static void
+dmxConfigEDCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     char buf[256];              /* RATS: Only used in snprintf */
     
-    if (!dmxConfigCurrent || !dmxConfigCurrentDisplay) return;
+    if (!dmxConfigCurrent || !dmxConfigCurrentDisplay)
+        return;
     dmxConfigSetPopupPosition(edpopup);
     XtVaSetValues(eddialog0, XtNvalue,
                   dmxConfigCurrentDisplay->name
-                  ? dmxConfigCurrentDisplay->name
-                  : "",
-                  NULL);
+                  ? dmxConfigCurrentDisplay->name : "", NULL);
     snprintf(buf, sizeof(buf), "%dx%d%c%d%c%d",
                 dmxConfigCurrentDisplay->scrnWidth,
                 dmxConfigCurrentDisplay->scrnHeight,
@@ -715,12 +787,13 @@ static void dmxConfigEDCallback(Widget w, XtPointer closure,
     XtPopup(edpopup, XtGrabExclusive);
 }
 
-static void dmxConfigNDCallback(Widget w, XtPointer closure,
-                                XtPointer callData)
+static void
+dmxConfigNDCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     int width = 1280, height = 1024;
 
-    if (!dmxConfigCurrent) return;
+    if (!dmxConfigCurrent)
+        return;
     if (dmxConfigCurrentDisplay) {
         width  = dmxConfigCurrentDisplay->scrnWidth;
         height = dmxConfigCurrentDisplay->scrnHeight;
@@ -737,18 +810,20 @@ static void dmxConfigNDCallback(Widget w, XtPointer closure,
     dmxConfigEDCallback(w, closure, callData);
 }
 
-static void dmxConfigDDCallback(Widget w, XtPointer closure,
-                                XtPointer callData)
+static void
+dmxConfigDDCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     DMXConfigSubPtr pt;
 
-    if (!dmxConfigCurrent || !dmxConfigCurrentDisplay) return;
+    if (!dmxConfigCurrent || !dmxConfigCurrentDisplay)
+        return;
                                 /* First */
     if (dmxConfigCurrent->subentry
         && dmxConfigCurrent->subentry->type == dmxConfigDisplay
         && dmxConfigCurrent->subentry->display == dmxConfigCurrentDisplay) {
         dmxConfigCurrent->subentry = dmxConfigCurrent->subentry->next;
-    } else {
+    }
+    else {
         for (pt = dmxConfigCurrent->subentry; pt && pt->next; pt = pt->next)
             if (pt->next->type == dmxConfigDisplay
                 && pt->next->display == dmxConfigCurrentDisplay) {
@@ -762,21 +837,21 @@ static void dmxConfigDDCallback(Widget w, XtPointer closure,
     dmxConfigCanvasDraw(NULL);
 }
 
-static void dmxConfigAboutCallback(Widget w, XtPointer closure,
-                                   XtPointer callData)
+static void
+dmxConfigAboutCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     dmxConfigSetPopupPosition(aboutpopup);
     XtPopup(aboutpopup, XtGrabExclusive);
 }
 
-static void dmxConfigAboutOkCallback(Widget w, XtPointer closure,
-                                     XtPointer CallData)
+static void
+dmxConfigAboutOkCallback(Widget w, XtPointer closure, XtPointer CallData)
 {
     XtPopdown(aboutpopup);
 }
 
-static void dmxConfigQuitCallback(Widget w, XtPointer closure,
-                                  XtPointer callData)
+static void
+dmxConfigQuitCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     if (dmxConfigNotSaved) {
         dmxConfigSetPopupPosition(quitpopup);
@@ -786,21 +861,21 @@ static void dmxConfigQuitCallback(Widget w, XtPointer closure,
     exit(0);
 }
 
-static void dmxConfigQuitOkCallback(Widget w, XtPointer closure,
-                                    XtPointer callData)
+static void
+dmxConfigQuitOkCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     XtPopdown(quitpopup);
     exit(0);
 }
 
-static void dmxConfigQuitCanCallback(Widget w, XtPointer closure,
-                                     XtPointer callData)
+static void
+dmxConfigQuitCanCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     XtPopdown(quitpopup);
 }
 
-static void dmxConfigEDOkCallback(Widget w, XtPointer closure,
-                                  XtPointer callData)
+static void
+dmxConfigEDOkCallback(Widget w, XtPointer closure, XtPointer callData)
 {
     char *value;
     char *endpt;
@@ -813,7 +888,8 @@ static void dmxConfigEDOkCallback(Widget w, XtPointer closure,
         dmxConfigCurrentDisplay->scrnWidth  = 0;
         dmxConfigCurrentDisplay->scrnHeight = 0;
         endpt                               = value;
-    } else {
+    }
+    else {
         dmxConfigCurrentDisplay->scrnWidth  = strtol(value, &endpt, 10);
         dmxConfigCurrentDisplay->scrnHeight = strtol(endpt+1, &endpt, 10);
     }
@@ -836,27 +912,31 @@ static void dmxConfigEDOkCallback(Widget w, XtPointer closure,
     dmxConfigNotSaved = 1;
 }
 
-static void dmxConfigEDCanCallback(Widget w, XtPointer closure,
-                                   XtPointer callData)
+static void
+dmxConfigEDCanCallback(Widget w, XtPointer closure, XtPointer callData)
 {
-    if (dmxConfigNewDisplay) dmxConfigDDCallback(w, closure, callData);
+    if (dmxConfigNewDisplay)
+        dmxConfigDDCallback(w, closure, callData);
     dmxConfigNewDisplay = NULL;
     XtPopdown(edpopup);
 }
 
-static void dmxConfigOkAction(Widget w, XEvent *event,
+static void
+dmxConfigOkAction(Widget w, XEvent * event,
                               String *params, Cardinal *num_params)
 {
     Widget p = XtParent(w);
     Widget t;
 
-    if (p == opendialog) dmxConfigOkCallback(w, NULL, NULL);
+    if (p == opendialog)
+        dmxConfigOkCallback(w, NULL, NULL);
 
     if (p == ecdialog0) {
         t = XtNameToWidget(ecdialog1, "value");
         XWarpPointer(XtDisplay(t), None, XtWindow(t), 0, 0, 0, 0, 0, 10);
     }
-    if (p == ecdialog1) dmxConfigECOkCallback(w, NULL, NULL);
+    if (p == ecdialog1)
+        dmxConfigECOkCallback(w, NULL, NULL);
 
     if (p == eddialog0) {
         t = XtNameToWidget(eddialog1, "value");
@@ -866,10 +946,12 @@ static void dmxConfigOkAction(Widget w, XEvent *event,
         t = XtNameToWidget(eddialog2, "value");
         XWarpPointer(XtDisplay(t), None, XtWindow(t), 0, 0, 0, 0, 0, 10);
     }
-    if (p == eddialog2) dmxConfigEDOkCallback(w, NULL, NULL);
+    if (p == eddialog2)
+        dmxConfigEDOkCallback(w, NULL, NULL);
 }
 
-int main(int argc, char **argv)
+int
+main(int argc, char **argv)
 {
     XtAppContext   appContext;
     Widget         toplevel;
@@ -883,6 +965,7 @@ int main(int argc, char **argv)
     Widget         ecbox, ecokbutton, eccanbutton;
     Widget         edbox, edokbutton;
     Widget         edcanbutton;
+
                                 /* FIXME: add meta-i, ctrl,meta-z,v? */
     const char     *opentrans = "<Key>Return: openOk()\n\
                                  <Key>Linefeed: openOk()\n\
@@ -902,22 +985,17 @@ int main(int argc, char **argv)
     dmxConfigFilename = XtNewString((argc >= 2) ? argv[1] : "");
 
     toplevel    = XtVaAppInitialize(&appContext, "XDmxconfig",
-                                    NULL, 0,
-                                    &argc, argv,
-                                    NULL,
-                                    NULL);
+                                 NULL, 0, &argc, argv, NULL, NULL);
 
                                 /* Main boxes */
     parent      = XtVaCreateManagedWidget("parent", formWidgetClass, toplevel,
                                           XtNorientation, XtorientVertical,
                                           XtNwidth, DMX_MAIN_WIDTH,
-                                          XtNheight, DMX_MAIN_HEIGHT,
-                                          NULL);
+                                     XtNheight, DMX_MAIN_HEIGHT, NULL);
     menubox     = XtVaCreateManagedWidget("menubox", boxWidgetClass, parent,
                                           XtNborderWidth, 0,
                                           XtNorientation, XtorientHorizontal,
-                                          XtNtop, XtChainTop,
-                                          NULL);
+                                      XtNtop, XtChainTop, NULL);
     bottombox   = XtVaCreateManagedWidget("bottombox", formWidgetClass, parent,
                                           XtNborderWidth, 0,
                                           XtNfromVert, menubox,
@@ -930,8 +1008,7 @@ int main(int argc, char **argv)
                                           XtNwidth, DMX_DATA_WIDTH,
                                           XtNheight, DMX_DATA_HEIGHT,
                                           XtNleft, XtChainLeft,
-                                          XtNorientation, XtorientVertical,
-                                          NULL);
+                                      XtNorientation, XtorientVertical, NULL);
 
                                 /* Data */
     cnamebox    = XtVaCreateManagedWidget("cnamebox", menuButtonWidgetClass,
@@ -940,42 +1017,36 @@ int main(int argc, char **argv)
                                           XtNjustify, XtJustifyLeft,
                                           XtNwidth, DMX_DATA_WIDTH,
                                           XtNlabel, "",
-                                          XtNmenuName, "cnamemenu",
-                                          NULL);
+                                       XtNmenuName, "cnamemenu", NULL);
     cdimbox     = XtVaCreateManagedWidget("cdimbox", labelWidgetClass,
                                           databox,
                                           XtNfromVert, cnamebox,
                                           XtNjustify, XtJustifyLeft,
                                           XtNwidth, DMX_DATA_WIDTH,
-                                          XtNlabel, "",
-                                          NULL);
+                                      XtNlabel, "", NULL);
     namebox     = XtVaCreateManagedWidget("namebox", labelWidgetClass, databox,
                                           XtNfromVert, cdimbox,
                                           XtNjustify, XtJustifyLeft,
                                           XtNwidth, DMX_DATA_WIDTH,
-                                          XtNlabel, "",
-                                          NULL);
+                                      XtNlabel, "", NULL);
     dimbox      = XtVaCreateManagedWidget("dimbox", labelWidgetClass,
                                           databox,
                                           XtNfromVert, namebox,
                                           XtNjustify, XtJustifyLeft,
                                           XtNwidth, DMX_DATA_WIDTH,
-                                          XtNlabel, "",
-                                          NULL);
+                                     XtNlabel, "", NULL);
     rtbox       = XtVaCreateManagedWidget("rtbox", labelWidgetClass,
                                           databox,
                                           XtNfromVert, dimbox,
                                           XtNjustify, XtJustifyLeft,
                                           XtNwidth, DMX_DATA_WIDTH,
-                                          XtNlabel, "",
-                                          NULL);
+                                    XtNlabel, "", NULL);
     origbox     = XtVaCreateManagedWidget("origbox", labelWidgetClass,
                                           databox,
                                           XtNfromVert, rtbox,
                                           XtNjustify, XtJustifyLeft,
                                           XtNwidth, DMX_DATA_WIDTH,
-                                          XtNlabel, "",
-                                          NULL);
+                                      XtNlabel, "", NULL);
 
                                 /* Canvas */
     canvasbox   = XtVaCreateManagedWidget("canvasbox", boxWidgetClass,
@@ -983,26 +1054,20 @@ int main(int argc, char **argv)
                                           XtNborderWidth, 0,
                                           XtNwidth, DMX_CANVAS_WIDTH,
                                           XtNheight, DMX_CANVAS_HEIGHT,
-                                          XtNfromHoriz, databox,
-                                          NULL);
+                                        XtNfromHoriz, databox, NULL);
 
     canvas      = XtVaCreateManagedWidget("canvas", canvasWidgetClass,
                                           canvasbox,
                                           XtNwidth, DMX_CANVAS_WIDTH,
-                                          XtNheight, DMX_CANVAS_HEIGHT,
-                                          NULL);
-
+                                     XtNheight, DMX_CANVAS_HEIGHT, NULL);
     
                                 /* Main menu buttons */
     filebutton  = XtVaCreateManagedWidget("File", menuButtonWidgetClass,
                                           menubox,
-                                          XtNmenuName, "filemenu",
-                                          NULL);
+                                         XtNmenuName, "filemenu", NULL);
     helpbutton  = XtVaCreateManagedWidget("Help", menuButtonWidgetClass,
                                           menubox,
-                                          XtNmenuName, "helpmenu",
-                                          NULL);
-
+                                         XtNmenuName, "helpmenu", NULL);
     
                                 /* File submenu buttons */
     filemenu     = XtVaCreatePopupShell("filemenu", simpleMenuWidgetClass,
@@ -1010,19 +1075,15 @@ int main(int argc, char **argv)
     openbutton   = XtVaCreateManagedWidget("Open File", smeBSBObjectClass,
                                            filemenu, NULL);
     savebutton   = XtVaCreateManagedWidget("Save File", smeBSBObjectClass,
-                                           filemenu,
-                                           NULL);
+                                         filemenu, NULL);
     ncbutton     = XtVaCreateManagedWidget("New Global", smeBSBObjectClass,
                                            filemenu, NULL);
     ecbutton     = XtVaCreateManagedWidget("Edit Global", smeBSBObjectClass,
-                                           filemenu,
-                                           NULL);
+                                       filemenu, NULL);
     dcbutton     = XtVaCreateManagedWidget("Delete Global", smeBSBObjectClass,
-                                           filemenu,
-                                           NULL);
+                                       filemenu, NULL);
     ndbutton0    = XtVaCreateManagedWidget("New Display", smeBSBObjectClass,
-                                           filemenu,
-                                           NULL);
+                                        filemenu, NULL);
     quitbutton   = XtVaCreateManagedWidget("Quit", smeBSBObjectClass,
                                            filemenu, NULL);
 
@@ -1038,8 +1099,7 @@ int main(int argc, char **argv)
     opendialog   = XtVaCreateManagedWidget("opendialog", dialogWidgetClass,
                                            openpopup,
                                            XtNlabel, "Filename: ",
-                                           XtNvalue, dmxConfigFilename,
-                                           NULL);
+                                         XtNvalue, dmxConfigFilename, NULL);
     okbutton     = XtVaCreateManagedWidget("Open", commandWidgetClass,
                                            opendialog, NULL);
     canbutton    = XtVaCreateManagedWidget("Cancel", commandWidgetClass,
@@ -1048,45 +1108,36 @@ int main(int argc, char **argv)
                                 /* EC popup */
     ecpopup      = XtVaCreatePopupShell("ecpopup", transientShellWidgetClass,
                                         toplevel, NULL);
-    ecbox        = XtVaCreateManagedWidget("ecbox", boxWidgetClass,
-                                           ecpopup, NULL);
+    ecbox = XtVaCreateManagedWidget("ecbox", boxWidgetClass, ecpopup, NULL);
     ecdialog0    = XtVaCreateManagedWidget("ecdialog0", dialogWidgetClass,
                                            ecbox,
                                            XtNlabel, "Name:              ",
-                                           XtNvalue, "",
-                                           NULL);
+                                        XtNvalue, "", NULL);
     ecdialog1    = XtVaCreateManagedWidget("ecdialog1", dialogWidgetClass,
                                            ecbox,
                                            XtNlabel, "Dimension:         ",
-                                           XtNvalue, "",
-                                           NULL);
-    ecokbutton   = XtVaCreateManagedWidget("OK", commandWidgetClass,
-                                           ecbox, NULL);
+                                        XtNvalue, "", NULL);
+    ecokbutton = XtVaCreateManagedWidget("OK", commandWidgetClass, ecbox, NULL);
     eccanbutton  = XtVaCreateManagedWidget("Cancel", commandWidgetClass,
                                            ecbox, NULL);
 
                                 /* ED popup */
     edpopup      = XtVaCreatePopupShell("edpopup", transientShellWidgetClass,
                                         toplevel, NULL);
-    edbox        = XtVaCreateManagedWidget("edbox", boxWidgetClass,
-                                           edpopup, NULL);
+    edbox = XtVaCreateManagedWidget("edbox", boxWidgetClass, edpopup, NULL);
     eddialog0    = XtVaCreateManagedWidget("eddialog0", dialogWidgetClass,
                                            edbox,
                                            XtNlabel, "Display Name:      ",
-                                           XtNvalue, "",
-                                           NULL);
+                                        XtNvalue, "", NULL);
     eddialog1    = XtVaCreateManagedWidget("eddialog1", dialogWidgetClass,
                                            edbox,
                                            XtNlabel, "Geometry:          ",
-                                           XtNvalue, "",
-                                           NULL);
+                                        XtNvalue, "", NULL);
     eddialog2    = XtVaCreateManagedWidget("eddialog2", dialogWidgetClass,
                                            edbox,
                                            XtNlabel, "Offset:            ",
-                                           XtNvalue, "",
-                                           NULL);
-    edokbutton   = XtVaCreateManagedWidget("OK", commandWidgetClass,
-                                           edbox, NULL);
+                                        XtNvalue, "", NULL);
+    edokbutton = XtVaCreateManagedWidget("OK", commandWidgetClass, edbox, NULL);
     edcanbutton  = XtVaCreateManagedWidget("Cancel", commandWidgetClass,
                                            edbox, NULL);
 
@@ -1096,11 +1147,8 @@ int main(int argc, char **argv)
     aboutbox     = XtVaCreateManagedWidget("aboutbox", boxWidgetClass,
                                            aboutpopup, NULL);
                    XtVaCreateManagedWidget("abouttext", labelWidgetClass,
-                                           aboutbox,
-                                           XtNlabel, DMX_INFO,
-                                           NULL);
-    aboutok      = XtVaCreateManagedWidget("OK", commandWidgetClass,
-                                           aboutbox, NULL);
+                            aboutbox, XtNlabel, DMX_INFO, NULL);
+    aboutok = XtVaCreateManagedWidget("OK", commandWidgetClass, aboutbox, NULL);
 
                                 /* Quit popup */
     quitpopup    = XtVaCreatePopupShell("quitpopup",transientShellWidgetClass,
@@ -1113,27 +1161,21 @@ int main(int argc, char **argv)
                                            "Changes to the configuration\n"
                                            "been made that have not yet\n"
                                            "been saved.  Do you want to\n"
-                                           "quit without saving?",
-                                           NULL);
+                            "quit without saving?", NULL);
     quitok       = XtVaCreateManagedWidget("Quit WITHOUT Saving",
-                                           commandWidgetClass,
-                                           quitbox, NULL);
+                                     commandWidgetClass, quitbox, NULL);
     quitcan      = XtVaCreateManagedWidget("Continue Editing",
-                                           commandWidgetClass,
-                                           quitbox, NULL);
+                                      commandWidgetClass, quitbox, NULL);
 
                                 /* Button popup */
     buttonpopup  = XtVaCreatePopupShell("buttonpopup", simpleMenuWidgetClass,
                                         toplevel, NULL);
     ndbutton1    = XtVaCreateManagedWidget("New Display", smeBSBObjectClass,
-                                           buttonpopup,
-                                           NULL);
+                                        buttonpopup, NULL);
     edbutton     = XtVaCreateManagedWidget("Edit Display", smeBSBObjectClass,
-                                           buttonpopup,
-                                           NULL);
+                                       buttonpopup, NULL);
     ddbutton     = XtVaCreateManagedWidget("Delete Display", smeBSBObjectClass,
-                                           buttonpopup,
-                                           NULL);
+                                       buttonpopup, NULL);
 
                                 /* Callbacks */
     XtAddCallback(openbutton,  XtNcallback, dmxConfigOpenCallback,       NULL);
@@ -1180,7 +1222,8 @@ int main(int argc, char **argv)
     XtAddCallback(canvas, XtNcanvasExposeCallback, dmxConfigCanvasExpose,NULL);
     XtAddCallback(canvas, XtNcanvasResizeCallback, dmxConfigCanvasResize,NULL);
 
-    if (dmxConfigFilename) dmxConfigReadFile();
+    if (dmxConfigFilename)
+        dmxConfigReadFile();
     
     XtRealizeWidget(toplevel);
     dmxConfigCopystrings();
