diff --git a/hw/kdrive/ephyr/ephyrlog.h b/hw/kdrive/ephyr/ephyrlog.h
index a07a0a0..0da0a25 100644
--- a/hw/kdrive/ephyr/ephyrlog.h
+++ b/hw/kdrive/ephyr/ephyrlog.h
@@ -35,7 +35,7 @@
 /*we are not in debug mode*/
 #define EPHYR_LOG(...)
 #define EPHYR_LOG_ERROR(...)
-#endif /*!DEBUG*/
+#endif                          /*!DEBUG */
 
 #define ERROR_LOG_LEVEL 3
 #define INFO_LOG_LEVEL 4
@@ -45,23 +45,23 @@
 LogMessageVerb(X_NOTICE, INFO_LOG_LEVEL, "in %s:%d:%s: ",\
                       __FILE__, __LINE__, __func__) ; \
 LogMessageVerb(X_NOTICE, INFO_LOG_LEVEL, __VA_ARGS__)
-#endif /*nomadik_log*/
+#endif                          /*nomadik_log */
 
 #ifndef EPHYR_LOG_ERROR
 #define EPHYR_LOG_ERROR(...) \
 LogMessageVerb(X_NOTICE, ERROR_LOG_LEVEL, "Error:in %s:%d:%s: ",\
                       __FILE__, __LINE__, __func__) ; \
 LogMessageVerb(X_NOTICE, ERROR_LOG_LEVEL, __VA_ARGS__)
-#endif /*EPHYR_LOG_ERROR*/
+#endif                          /*EPHYR_LOG_ERROR */
 
 #ifndef EPHYR_RETURN_IF_FAIL
 #define EPHYR_RETURN_IF_FAIL(cond) \
 if (!(cond)) {EPHYR_LOG_ERROR("condition %s failed\n", #cond);return;}
-#endif /*nomadik_return_if_fail*/
+#endif                          /*nomadik_return_if_fail */
 
 #ifndef EPHYR_RETURN_VAL_IF_FAIL
 #define EPHYR_RETURN_VAL_IF_FAIL(cond,val) \
 if (!(cond)) {EPHYR_LOG_ERROR("condition %s failed\n", #cond);return val;}
-#endif /*nomadik_return_val_if_fail*/
+#endif                          /*nomadik_return_val_if_fail */
 
 #endif /*__EPHYRLOG_H__*/
