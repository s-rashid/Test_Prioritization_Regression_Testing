diff --git a/hw/xfree86/dixmods/extmod/xf86dga2.c b/hw/xfree86/dixmods/extmod/xf86dga2.c
index 4bcf77e..6b33941 100644
--- a/hw/xfree86/dixmods/extmod/xf86dga2.c
+++ b/hw/xfree86/dixmods/extmod/xf86dga2.c
@@ -6,7 +6,6 @@
  * Written by Mark Vojkovich
  */
 
-
 #ifdef HAVE_XORG_CONFIG_H
 #include <xorg-config.h>
 #endif
@@ -33,7 +32,6 @@
 
 #define DGA_PROTOCOL_OLD_SUPPORT 1
 
-
 static void XDGAResetProc(ExtensionEntry *extEntry);
 
 static void DGAClientStateChange (CallbackListPtr*, pointer, pointer);
@@ -43,9 +41,11 @@ int DGAErrorBase;
 int DGAEventBase;
 
 static DevPrivateKeyRec DGAScreenPrivateKeyRec;
+
 #define DGAScreenPrivateKey (&DGAScreenPrivateKeyRec)
 #define DGAScreenPrivateKeyRegistered (DGAScreenPrivateKeyRec.initialized)
 static DevPrivateKeyRec DGAClientPrivateKeyRec;
+
 #define DGAClientPrivateKey (&DGAClientPrivateKeyRec)
 static int DGACallbackRefCount = 0;
 
@@ -65,7 +65,6 @@ typedef struct {
 #define DGA_SETPRIV(c,p) \
     dixSetPrivate(&(c)->devPrivates, DGAClientPrivateKey, p)
 
-
 static void
 XDGAResetProc (ExtensionEntry *extEntry)
 {
@@ -73,7 +72,6 @@ XDGAResetProc (ExtensionEntry *extEntry)
    DGACallbackRefCount = 0;
 }
 
-
 static int
 ProcXDGAQueryVersion(ClientPtr client)
 {
@@ -90,7 +88,6 @@ ProcXDGAQueryVersion(ClientPtr client)
     return Success;
 }
 
-
 static int
 ProcXDGAOpenFramebuffer(ClientPtr client)
 {
@@ -112,8 +109,8 @@ ProcXDGAOpenFramebuffer(ClientPtr client)
 
     if(!DGAOpenFramebuffer(stuff->screen, &deviceName,
 			(unsigned char**)(&rep.mem1),
-			(int*)&rep.size, (int*)&rep.offset, (int*)&rep.extra))
-    {
+                            (int *) &rep.size, (int *) &rep.offset,
+                            (int *) &rep.extra)) {
 	return BadAlloc;
     }
 
@@ -127,7 +124,6 @@ ProcXDGAOpenFramebuffer(ClientPtr client)
     return Success;
 }
 
-
 static int
 ProcXDGACloseFramebuffer(ClientPtr client)
 {
@@ -150,6 +146,7 @@ static int
 ProcXDGAQueryModes(ClientPtr client)
 {
     int i, num, size;
+
     REQUEST(xXDGAQueryModesReq);
     xXDGAQueryModesReply rep;
     xXDGAModeInfo info;
@@ -230,13 +227,9 @@ ProcXDGAQueryModes(ClientPtr client)
     return Success;
 }
 
-
 static void
-DGAClientStateChange (
-    CallbackListPtr* pcbl,
-    pointer nulldata,
-    pointer calldata
-){
+DGAClientStateChange(CallbackListPtr *pcbl, pointer nulldata, pointer calldata)
+{
     NewClientInfoRec* pci = (NewClientInfoRec*) calldata;
     ClientPtr client = NULL;
     int i;
@@ -294,7 +287,8 @@ ProcXDGASetMode(ClientPtr client)
     if(!stuff->mode) {
 	if(owner) {
 	  if(--DGACallbackRefCount == 0)
-	    DeleteCallback(&ClientStateCallback, DGAClientStateChange, NULL);
+                DeleteCallback(&ClientStateCallback, DGAClientStateChange,
+                               NULL);
 	}
 	DGA_SETCLIENT(stuff->screen, NULL);
 	DGASelectInput(stuff->screen, NULL, 0);
@@ -381,6 +375,7 @@ ProcXDGAInstallColormap(ClientPtr client)
 {
     ColormapPtr cmap;
     int rc;
+
     REQUEST(xXDGAInstallColormapReq);
 
     if (stuff->screen >= screenInfo.numScreens)
@@ -399,7 +394,6 @@ ProcXDGAInstallColormap(ClientPtr client)
     return Success;
 }
 
-
 static int
 ProcXDGASelectInput(ClientPtr client)
 {
@@ -419,7 +413,6 @@ ProcXDGASelectInput(ClientPtr client)
     return Success;
 }
 
-
 static int
 ProcXDGAFillRectangle(ClientPtr client)
 {
@@ -454,13 +447,13 @@ ProcXDGACopyArea(ClientPtr client)
     REQUEST_SIZE_MATCH(xXDGACopyAreaReq);
 
     if(Success != DGABlitRect(stuff->screen, stuff->srcx, stuff->srcy,
-		stuff->width, stuff->height, stuff->dstx, stuff->dsty))
+                               stuff->width, stuff->height, stuff->dstx,
+                               stuff->dsty))
 	return BadMatch;
 
     return Success;
 }
 
-
 static int
 ProcXDGACopyTransparentArea(ClientPtr client)
 {
@@ -475,13 +468,13 @@ ProcXDGACopyTransparentArea(ClientPtr client)
     REQUEST_SIZE_MATCH(xXDGACopyTransparentAreaReq);
 
     if(Success != DGABlitTransRect(stuff->screen, stuff->srcx, stuff->srcy,
-	stuff->width, stuff->height, stuff->dstx, stuff->dsty, stuff->key))
+                                    stuff->width, stuff->height, stuff->dstx,
+                                    stuff->dsty, stuff->key))
 	return BadMatch;
 
     return Success;
 }
 
-
 static int
 ProcXDGAGetViewportStatus(ClientPtr client)
 {
@@ -580,7 +573,6 @@ ProcXDGAChangePixmapMode(ClientPtr client)
     return Success;
 }
 
-
 static int
 ProcXDGACreateColormap(ClientPtr client)
 {
@@ -614,8 +606,6 @@ ProcXDGACreateColormap(ClientPtr client)
 
 #ifdef DGA_PROTOCOL_OLD_SUPPORT
 
-
-
 static int
 ProcXF86DGAGetVideoLL(ClientPtr client)
 {
@@ -662,6 +652,7 @@ ProcXF86DGADirectVideo(ClientPtr client)
     PixmapPtr pix;
     XDGAModeRec mode;
     ClientPtr owner;
+
     REQUEST(xXF86DGADirectVideoReq);
 
     if (stuff->screen >= screenInfo.numScreens)
@@ -679,7 +670,8 @@ ProcXF86DGADirectVideo(ClientPtr client)
     if (stuff->enable & XF86DGADirectGraphics) {
 	if(!(num = DGAGetOldDGAMode(stuff->screen)))
 	    return DGAErrorBase + XF86DGANoDirectVideoMode;
-    } else
+    }
+    else
 	num = 0;
 
     if(Success != DGASetMode(stuff->screen, num, &mode, &pix))
@@ -698,10 +690,12 @@ ProcXF86DGADirectVideo(ClientPtr client)
 	}
 
 	DGA_SETCLIENT(stuff->screen, client);
-    } else {
+    }
+    else {
 	if (owner) {
 	    if (--DGACallbackRefCount == 0)
-		DeleteCallback(&ClientStateCallback, DGAClientStateChange, NULL);
+                DeleteCallback(&ClientStateCallback, DGAClientStateChange,
+                               NULL);
 	}
 
 	DGA_SETCLIENT(stuff->screen, NULL);
@@ -715,6 +709,7 @@ ProcXF86DGAGetViewPortSize(ClientPtr client)
 {
     int num;
     XDGAModeRec mode;
+
     REQUEST(xXF86DGAGetViewPortSizeReq);
     xXF86DGAGetViewPortSizeReply rep;
 
@@ -786,7 +781,6 @@ ProcXF86DGAGetVidPage(ClientPtr client)
     return Success;
 }
 
-
 static int
 ProcXF86DGASetVidPage(ClientPtr client)
 {
@@ -802,12 +796,12 @@ ProcXF86DGASetVidPage(ClientPtr client)
     return Success;
 }
 
-
 static int
 ProcXF86DGAInstallColormap(ClientPtr client)
 {
     ColormapPtr pcmp;
     int rc;
+
     REQUEST(xXF86DGAInstallColormapReq);
 
     if (stuff->screen >= screenInfo.numScreens)
@@ -826,7 +820,8 @@ ProcXF86DGAInstallColormap(ClientPtr client)
     if (rc == Success) {
 	DGAInstallCmap(pcmp);
         return Success;
-    } else {
+    }
+    else {
         return rc;
     }
 }
@@ -1022,8 +1017,7 @@ XFree86DGAExtensionInit(INITARGS)
 				XF86DGANumberErrors,
 				ProcXDGADispatch,
 				SProcXDGADispatch,
-				XDGAResetProc,
-				StandardMinorOpcode))) {
+                                 XDGAResetProc, StandardMinorOpcode))) {
 	int i;
 
 	DGAReqCode = (unsigned char)extEntry->base;
