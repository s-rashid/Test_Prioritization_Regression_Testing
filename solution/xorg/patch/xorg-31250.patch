diff --git a/hw/xfree86/os-support/bus/linuxPci.c b/hw/xfree86/os-support/bus/linuxPci.c
index 0714c9c..84ec8ad 100644
--- a/hw/xfree86/os-support/bus/linuxPci.c
+++ b/hw/xfree86/os-support/bus/linuxPci.c
@@ -73,7 +73,6 @@ static CARD8 linuxPciCfgReadByte(PCITAG tag, int off);
 static void linuxPciCfgWriteByte(PCITAG tag, int off, CARD8 val);
 static CARD16 linuxPciCfgReadWord(PCITAG tag, int off);
 static void linuxPciCfgWriteWord(PCITAG tag, int off, CARD16 val);
-static int linuxPciHandleBIOS(PCITAG Tag, int basereg, unsigned char *buf, int len);
 
 static pciBusFuncs_t linuxFuncs0 = {
 /* pciReadLong      */	linuxPciCfgRead,
@@ -123,10 +122,6 @@ linuxPciInit()
 	}
 	pciNumBuses    = 1;
 	pciBusInfo[0]  = &linuxPci0;
-	pciFindFirstFP = pciGenFindFirst;
-	pciFindNextFP  = pciGenFindNext;
-	pciSetOSBIOSPtr(linuxPciHandleBIOS);
-        xf86MaxPciDevs = lnxPciInit();
 }
 
 static int
@@ -458,9 +453,9 @@ linuxGetIOSize(PCITAG Tag)
 		continue;
 	    if (pPCI->pci_vendor < pciControllerSizes[i].vendor)
 		break;
-	    if (pPCI->pci_device > pciControllerSizes[i].device)
+	    if (pPCI->_pci_device > pciControllerSizes[i].device)
 		continue;
-	    if (pPCI->pci_device < pciControllerSizes[i].device)
+	    if (pPCI->_pci_device < pciControllerSizes[i].device)
 		break;
 	    return pciControllerSizes[i].io_size;
 	}
@@ -486,9 +481,9 @@ linuxGetSizes(PCITAG Tag, unsigned long *io_size, unsigned long *mem_size)
 		continue;
 	    if (pPCI->pci_vendor < pciControllerSizes[i].vendor)
 		break;
-	    if (pPCI->pci_device > pciControllerSizes[i].device)
+	    if (pPCI->_pci_device > pciControllerSizes[i].device)
 		continue;
-	    if (pPCI->pci_device < pciControllerSizes[i].device)
+	    if (pPCI->_pci_device < pciControllerSizes[i].device)
 		break;
 	    *io_size  = pciControllerSizes[i].io_size;
 	    *mem_size = pciControllerSizes[i].mem_size;
@@ -907,44 +902,3 @@ xf86AccResFromOS(resPtr pRes)
 }
 
 #endif /* !INCLUDE_XF86_NO_DOMAIN */
-
-int linuxPciHandleBIOS(PCITAG Tag, int basereg, unsigned char *buf, int len)
-{
-  unsigned int dom, bus, dev, func;
-  unsigned int fd;
-  char file[256];
-  struct stat st;
-  int ret;
-  int sofar = 0;
-
-  dom  = PCI_DOM_FROM_TAG(Tag);
-  bus  = PCI_BUS_FROM_TAG(Tag);
-  dev  = PCI_DEV_FROM_TAG(Tag);
-  func = PCI_FUNC_FROM_TAG(Tag);
-  sprintf(file, "/sys/bus/pci/devices/%04x:%02x:%02x.%1x/rom",
-	  dom, bus, dev, func);
-
-  if (stat(file, &st) == 0)
-  {
-    if ((fd = open(file, O_RDWR)))
-      basereg = 0x0;
-    
-    /* enable the ROM first */
-    write(fd, "1", 2);
-    lseek(fd, 0, SEEK_SET);
-    do {
-        /* copy the ROM until we hit Len, EOF or read error */
-    	ret = read(fd, buf+sofar, len-sofar);
-    	if (ret <= 0)
-		break;
-	sofar += ret;
-    } while (sofar < len);
-    
-    write(fd, "0", 2);
-    close(fd);
-    if (sofar < len)
-    	xf86MsgVerb(X_INFO, 3, "Attempted to read BIOS %dKB from %s: got %dKB\n", len/1024, file, sofar/1024);
-    return sofar;
-  }
-  return 0;
-}
