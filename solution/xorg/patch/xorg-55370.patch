diff --git a/hw/kdrive/ephyr/ephyrinit.c b/hw/kdrive/ephyr/ephyrinit.c
index b674bb8..a62b49d 100644
--- a/hw/kdrive/ephyr/ephyrinit.c
+++ b/hw/kdrive/ephyr/ephyrinit.c
@@ -117,14 +117,16 @@ ddxUseMsg (void)
   ErrorF("-host-cursor         Re-use exisiting X host server cursor\n");
   ErrorF("-fullscreen          Attempt to run Xephyr fullscreen\n");
   ErrorF("-grayscale           Simulate 8bit grayscale\n");
-  ErrorF("-fakexa              Simulate acceleration using software rendering\n");
+    ErrorF
+        ("-fakexa              Simulate acceleration using software rendering\n");
   ErrorF("-verbosity <level>   Set log verbosity level\n");
 #ifdef GLXEXT
   ErrorF("-nodri               do not use DRI\n");
 #endif
   ErrorF("-noxv                do not use XV\n");
   ErrorF("-name [name]         define the name in the WM_CLASS property\n");
-  ErrorF("-title [title]       set the window title in the WM_NAME property\n");
+    ErrorF
+        ("-title [title]       set the window title in the WM_NAME property\n");
   ErrorF("\n");
 
   exit(1);
@@ -138,23 +140,20 @@ processScreenArg (char *screen_size, char *parent_id)
   InitCard (0);  /*Put each screen on a separate card*/
   card = KdCardInfoLast ();
 
-  if (card)
-    {
+    if (card) {
       KdScreenInfo *screen;
       unsigned long p_id = 0;
 
       screen = KdScreenInfoAdd (card);
       KdParseScreen (screen, screen_size);
 
-      if (parent_id)
-        {
+        if (parent_id) {
           p_id = strtol (parent_id, NULL, 0);
         }
       EPHYR_DBG ("screen number:%d\n", screen->mynum) ;
       hostx_add_screen (screen, p_id, screen->mynum);
     }
-  else
-    {
+    else {
       ErrorF("No matching card found!\n");
     }
 }
@@ -163,24 +162,21 @@ int
 ddxProcessArgument (int argc, char **argv, int i)
 {
   static char* parent = NULL;
+
   EPHYR_DBG("mark argv[%d]='%s'", i, argv[i] );
 
-  if (i == 1)
-    {
+    if (i == 1) {
       hostx_use_resname(basename(argv[0]), 0);
     }
 
-  if (!strcmp (argv[i], "-parent"))
-    {
-      if(i+1 < argc)
-	{
+    if (!strcmp(argv[i], "-parent")) {
+        if (i + 1 < argc) {
 	  int j;
+
 	  /* If parent is specified and a screen argument follows, don't do
            * anything, let the -screen handling init the rest */
-	  for (j = i; j < argc; j++)
-	    {
-	      if (!strcmp(argv[j], "-screen"))
-		{
+            for (j = i; j < argc; j++) {
+                if (!strcmp(argv[j], "-screen")) {
 		  parent = argv[i + 1];
 		  return 2;
 		}
@@ -193,10 +189,8 @@ ddxProcessArgument (int argc, char **argv, int i)
       UseMsg();
       exit(1);
     }
-  else if (!strcmp (argv[i], "-screen"))
-    {
-      if ((i+1) < argc)
-	{
+    else if (!strcmp(argv[i], "-screen")) {
+        if ((i + 1) < argc) {
 	  processScreenArg (argv[i+1], parent);
 	  parent = NULL;
 	  return 2;
@@ -205,107 +199,87 @@ ddxProcessArgument (int argc, char **argv, int i)
       UseMsg();
       exit(1);
     }
-  else if (!strcmp (argv[i], "-host-cursor"))
-    {
+    else if (!strcmp(argv[i], "-host-cursor")) {
       hostx_use_host_cursor();
       return 1;
     }
-  else if (!strcmp (argv[i], "-fullscreen"))
-    {
+    else if (!strcmp(argv[i], "-fullscreen")) {
       hostx_use_fullscreen();
       return 1;
     }
-  else if (!strcmp (argv[i], "-grayscale"))
-    {
+    else if (!strcmp(argv[i], "-grayscale")) {
       EphyrWantGrayScale = 1;      
       return 1;
     }
-  else if (!strcmp (argv[i], "-fakexa"))
-    {
+    else if (!strcmp(argv[i], "-fakexa")) {
       ephyrFuncs.initAccel = ephyrDrawInit;
       ephyrFuncs.enableAccel = ephyrDrawEnable;
       ephyrFuncs.disableAccel = ephyrDrawDisable;
       ephyrFuncs.finiAccel = ephyrDrawFini;
       return 1;
     }
-  else if (!strcmp (argv[i], "-verbosity"))
-    {
-      if(i+1 < argc && argv[i+1][0] != '-')
-	{
+    else if (!strcmp(argv[i], "-verbosity")) {
+        if (i + 1 < argc && argv[i + 1][0] != '-') {
 	  int verbosity=atoi (argv[i+1]) ;
+
 	  LogSetParameter (XLOG_VERBOSITY, verbosity) ;
 	  EPHYR_LOG ("set verbosiry to %d\n", verbosity) ;
 	  return 2 ;
 	}
-      else
-	{
+        else {
 	  UseMsg() ;
 	  exit(1) ;
 	}
     }
 #ifdef GLXEXT
-  else if (!strcmp (argv[i], "-nodri"))
-   {
+    else if (!strcmp(argv[i], "-nodri")) {
        noGlxVisualInit = FALSE ;
        ephyrNoDRI = TRUE ;
        EPHYR_LOG ("no direct rendering enabled\n") ;
        return 1 ;
    }
 #endif
-  else if (!strcmp (argv[i], "-noxv"))
-   {
+    else if (!strcmp(argv[i], "-noxv")) {
        ephyrNoXV = TRUE ;
        EPHYR_LOG ("no XVideo enabled\n") ;
        return 1 ;
    }
-  else if (!strcmp (argv[i], "-name"))
-   {
-       if (i+1 < argc && argv[i+1][0] != '-')
-         {
+    else if (!strcmp(argv[i], "-name")) {
+        if (i + 1 < argc && argv[i + 1][0] != '-') {
            hostx_use_resname(argv[i+1], 1);
            return 2;
          }
-       else
-         {
+        else {
            UseMsg();
            return 0;
          }
    }
-  else if (!strcmp (argv[i], "-title"))
-   {
-       if (i+1 < argc && argv[i+1][0] != '-')
-         {
+    else if (!strcmp(argv[i], "-title")) {
+        if (i + 1 < argc && argv[i + 1][0] != '-') {
            hostx_set_title(argv[i+1]);
            return 2;
          }
-       else
-         {
+        else {
            UseMsg();
            return 0;
          }
    }
-  else if (argv[i][0] == ':')
-    {
+    else if (argv[i][0] == ':') {
       hostx_set_display_name(argv[i]);
     }
   /* Xnest compatibility */
-  else if (!strcmp(argv[i], "-display"))
-  {
+    else if (!strcmp(argv[i], "-display")) {
       hostx_set_display_name(argv[i+1]);
       return 2;
   }
   else if (!strcmp(argv[i], "-sync") ||
 	   !strcmp(argv[i], "-full") ||
-	   !strcmp(argv[i], "-sss") ||
-	   !strcmp(argv[i], "-install"))
-  {
+             !strcmp(argv[i], "-sss") || !strcmp(argv[i], "-install")) {
       return 1;
   }
   else if (!strcmp(argv[i], "-bw") ||
 	   !strcmp(argv[i], "-class") ||
-	   !strcmp(argv[i], "-geometry") ||
-	   !strcmp(argv[i], "-scrns"))
-  {
+             !strcmp(argv[i], "-geometry") || !strcmp(argv[i], "-scrns")) {
       return 2;
   }
   /* end Xnest compat */
@@ -318,8 +292,7 @@ OsVendorInit (void)
 {
   EPHYR_DBG("mark");
 
-  if (hostx_want_host_cursor())
-    {
+    if (hostx_want_host_cursor()) {
       ephyrFuncs.initCursor   = &ephyrCursorInit;
       ephyrFuncs.enableCursor = &ephyrCursorEnable;
     }
@@ -342,7 +315,8 @@ ephyrUnrealizeCursor(DeviceIntPtr pDev, ScreenPtr pScreen, CursorPtr pCursor)
 }
 
 static void
-ephyrSetCursor(DeviceIntPtr pDev, ScreenPtr pScreen, CursorPtr pCursor, int x, int y)
+ephyrSetCursor(DeviceIntPtr pDev, ScreenPtr pScreen, CursorPtr pCursor, int x,
+               int y)
 {
   ;
 }
@@ -373,14 +347,12 @@ miPointerSpriteFuncRec EphyrPointerSpriteFuncs = {
 	ephyrDeviceCursorCleanup
 };
 
-
 Bool
 ephyrCursorInit(ScreenPtr pScreen)
 {
   miPointerInitialize(pScreen,
 		      &EphyrPointerSpriteFuncs,
-		      &ephyrPointerScreenFuncs,
-		      FALSE);
+                        &ephyrPointerScreenFuncs, FALSE);
 
   return TRUE;
 }
