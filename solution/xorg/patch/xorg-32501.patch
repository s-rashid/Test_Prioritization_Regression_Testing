diff --git a/GL/glx/glxcmds.c b/GL/glx/glxcmds.c
index 4a77b3e..7d352ce 100644
--- a/GL/glx/glxcmds.c
+++ b/GL/glx/glxcmds.c
@@ -247,7 +247,6 @@ DoCreateContext(__GLXclientState *cl, GLXContextID gcId,
     ** Initially, setup the part of the context that could be used by
     ** a GL core that needs windowing information (e.g., Mesa).
     */
-    glxc->pScreen = pGlxScreen->pScreen;
     glxc->pGlxScreen = pGlxScreen;
     glxc->modes = config;
 
@@ -497,7 +496,7 @@ __glXGetDrawable(__GLXcontext *glxc, GLXDrawable drawId, ClientPtr client,
      * a GLX drawable for it.  Check that the drawable screen matches
      * the context screen and that the context fbconfig is compatible
      * with the window visual. */
-    if (pDraw->pScreen != glxc->pScreen ||
+    if (pDraw->pScreen != glxc->pGlxScreen->pScreen ||
 	!validGlxFBConfigForWindow(client, glxc->modes, pDraw, error))
 	return NULL;
 
@@ -1470,7 +1469,7 @@ DoQueryContext(__GLXclientState *cl, GLXContextID gcId)
     *pSendBuf++ = GLX_VISUAL_ID_EXT;
     *pSendBuf++ = (int)(ctx->modes->visualID);
     *pSendBuf++ = GLX_SCREEN_EXT;
-    *pSendBuf++ = (int)(ctx->pScreen->myNum);
+    *pSendBuf++ = (int)(ctx->pGlxScreen->pScreen->myNum);
 
     if (client->swapped) {
 	__glXSwapQueryContextInfoEXTReply(client, &reply, sendBuf);
