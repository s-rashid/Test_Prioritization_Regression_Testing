diff --git a/fb/fb.h b/fb/fb.h
index eaa21ad..b327ce6 100644
--- a/fb/fb.h
+++ b/fb/fb.h
@@ -21,7 +21,6 @@
  * PERFORMANCE OF THIS SOFTWARE.
  */
 
-
 #ifndef _FB_H_
 #define _FB_H_
 
@@ -88,33 +87,25 @@
 #if FB_SHIFT < LOG2_BITMAP_PAD
     error FB_SHIFT must be >= LOG2_BITMAP_PAD
 #endif
-    
 #define FB_UNIT	    (1 << FB_SHIFT)
 #define FB_HALFUNIT (1 << (FB_SHIFT-1))
 #define FB_MASK	    (FB_UNIT - 1)
 #define FB_ALLONES  ((FbBits) -1)
-    
 #if GLYPHPADBYTES != 4
 #error "GLYPHPADBYTES must be 4"
 #endif
-
 /* for driver compat - intel UXA needs the second one at least */
 #define FB_24BIT
 #define FB_24_32BIT
-
 #define FB_STIP_SHIFT	LOG2_BITMAP_PAD
 #define FB_STIP_UNIT	(1 << FB_STIP_SHIFT)
 #define FB_STIP_MASK	(FB_STIP_UNIT - 1)
 #define FB_STIP_ALLONES	((FbStip) -1)
-    
 #define FB_STIP_ODDSTRIDE(s)	(((s) & (FB_MASK >> FB_STIP_SHIFT)) != 0)
 #define FB_STIP_ODDPTR(p)	((((long) (p)) & (FB_MASK >> 3)) != 0)
-    
 #define FbStipStrideToBitsStride(s) (((s) >> (FB_SHIFT - FB_STIP_SHIFT)))
 #define FbBitsStrideToStipStride(s) (((s) << (FB_SHIFT - FB_STIP_SHIFT)))
-    
 #define FbFullMask(n)   ((n) == FB_UNIT ? FB_ALLONES : ((((FbBits) 1) << n) - 1))
-    
 #if FB_SHIFT == 6
 # ifdef WIN32
 typedef unsigned __int64    FbBits;
@@ -150,11 +141,11 @@ typedef CARD32		    FbStip;
 
 typedef int		    FbStride;
 
-
 #ifdef FB_DEBUG
 extern _X_EXPORT void fbValidateDrawable(DrawablePtr d);
 extern _X_EXPORT void fbInitializeDrawable(DrawablePtr d);
 extern _X_EXPORT void fbSetBits (FbStip *bits, int stride, FbStip data);
+
 #define FB_HEAD_BITS   (FbStip) (0xbaadf00d)
 #define FB_TAIL_BITS   (FbStip) (0xbaddf0ad)
 #else
@@ -207,7 +198,6 @@ extern _X_EXPORT void fbSetBits (FbStip *bits, int stride, FbStip data);
 #define FbStipMask(x,w)	(FbStipRight(FB_STIP_ALLONES,(x) & FB_STIP_MASK) & \
 			 FbStipLeft(FB_STIP_ALLONES,(FB_STIP_UNIT - ((x)+(w))) & FB_STIP_MASK))
 
-
 #define FbMaskBits(x,w,l,n,r) { \
     n = (w); \
     r = FbRightMask((x)+n); \
@@ -223,7 +213,6 @@ extern _X_EXPORT void fbSetBits (FbStip *bits, int stride, FbStip data);
     n >>= FB_SHIFT; \
 }
 
-
 #define FbByteMaskInvalid   0x10
 
 #define FbPatternOffset(o,t)  ((o) ^ (FbPatternOffsetBits & ~(sizeof (t) - 1)))
@@ -416,7 +405,6 @@ extern _X_EXPORT void fbSetBits (FbStip *bits, int stride, FbStip data);
     } \
 }
 
-
 #define FbDoRightMaskByteRRop(dst,rb,r,and,xor) { \
     switch (rb) { \
     case 1: \
@@ -591,7 +579,6 @@ fbGetWinPrivateKey (void);
 extern _X_EXPORT const GCOps	fbGCOps;
 extern _X_EXPORT const GCFuncs	fbGCFuncs;
 
-
 /* Framebuffer access wrapper */
 typedef FbBits (*ReadMemoryProcPtr)(const void *src, int size);
 typedef void (*WriteMemoryProcPtr)(void *dst, FbBits value, int size);
@@ -617,7 +604,6 @@ typedef void (*FinishWrapProcPtr)(DrawablePtr pDraw);
 
 #endif
 
-
 extern _X_EXPORT DevPrivateKey
 fbGetScreenPrivateKey(void);
 
@@ -738,45 +724,37 @@ typedef struct {
  * fb24_32.c
  */
 extern _X_EXPORT void
+
 fb24_32GetSpans(DrawablePtr	pDrawable, 
 		int		wMax, 
-		DDXPointPtr	ppt, 
-		int		*pwidth, 
-		int		nspans, 
-		char		*pchardstStart);
+                DDXPointPtr ppt, int *pwidth, int nspans, char *pchardstStart);
 
 extern _X_EXPORT void
+
 fb24_32SetSpans (DrawablePtr	    pDrawable,
 		 GCPtr		    pGC,
 		 char		    *src,
-		 DDXPointPtr	    ppt,
-		 int		    *pwidth,
-		 int		    nspans,
-		 int		    fSorted);
+                DDXPointPtr ppt, int *pwidth, int nspans, int fSorted);
 
 extern _X_EXPORT void
+
 fb24_32PutZImage (DrawablePtr	pDrawable,
 		  RegionPtr	pClip,
 		  int		alu,
 		  FbBits	pm,
 		  int		x,
-		  int		y,
-		  int		width,
-		  int		height,
-		  CARD8		*src,
-		  FbStride	srcStride);
+                 int y, int width, int height, CARD8 *src, FbStride srcStride);
     
 extern _X_EXPORT void
+
 fb24_32GetImage (DrawablePtr     pDrawable,
 		 int             x,
 		 int             y,
 		 int             w,
-		 int             h,
-		 unsigned int    format,
-		 unsigned long   planeMask,
-		 char            *d);
+                int h, unsigned int format, unsigned long planeMask, char *d);
 
 extern _X_EXPORT void
+
 fb24_32CopyMtoN (DrawablePtr pSrcDrawable,
 		 DrawablePtr pDstDrawable,
 		 GCPtr       pGC,
@@ -784,10 +762,7 @@ fb24_32CopyMtoN (DrawablePtr pSrcDrawable,
 		 int         nbox,
 		 int         dx,
 		 int         dy,
-		 Bool        reverse,
-		 Bool        upsidedown,
-		 Pixel       bitplane,
-		 void        *closure);
+                Bool reverse, Bool upsidedown, Pixel bitplane, void *closure);
 
 extern _X_EXPORT PixmapPtr
 fb24_32ReformatTile(PixmapPtr pOldTile, int bitsPerPixel);
@@ -796,13 +771,12 @@ extern _X_EXPORT Bool
 fb24_32CreateScreenResources(ScreenPtr pScreen);
 
 extern _X_EXPORT Bool
+
 fb24_32ModifyPixmapHeader (PixmapPtr   pPixmap,
 			   int         width,
 			   int         height,
 			   int         depth,
-			   int         bitsPerPixel,
-			   int         devKind,
-			   pointer     pPixData);
+                          int bitsPerPixel, int devKind, pointer pPixData);
 
 /*
  * fballpriv.c
@@ -815,372 +789,237 @@ fbAllocatePrivates(ScreenPtr pScreen, DevPrivateKey *pGCIndex);
  */
 
 extern _X_EXPORT void
-fbPolyArc (DrawablePtr	pDrawable,
-	   GCPtr	pGC,
-	   int		narcs,
-	   xArc		*parcs);
+ fbPolyArc(DrawablePtr pDrawable, GCPtr pGC, int narcs, xArc * parcs);
 
 /*
  * fbbits.c
  */
 
 extern _X_EXPORT void
+
 fbBresSolid8(DrawablePtr    pDrawable,
 	     GCPtr	    pGC,
 	     int	    dashOffset,
 	     int	    signdx,
 	     int	    signdy,
-	     int	    axis,
-	     int	    x,
-	     int	    y,
-	     int	    e,
-	     int	    e1,
-	     int	    e3,
-	     int	    len);
+             int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbBresDash8 (DrawablePtr    pDrawable,
 	     GCPtr	    pGC,
 	     int	    dashOffset,
 	     int	    signdx,
-	     int	    signdy,
-	     int	    axis,
-	     int	    x,
-	     int	    y,
-	     int	    e,
-	     int	    e1,
-	     int	    e3,
-	     int	    len);
+            int signdy, int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbDots8 (FbBits	    *dst,
 	 FbStride   dstStride,
 	 int	    dstBpp,
 	 BoxPtr	    pBox,
 	 xPoint	    *pts,
 	 int	    npt,
-	 int	    xorg,
-	 int	    yorg,
-	 int	    xoff,
-	 int	    yoff,
-	 FbBits	    and,
-	 FbBits	    xor);
+        int xorg, int yorg, int xoff, int yoff, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbArc8 (FbBits	    *dst,
 	FbStride    dstStride,
-	int	    dstBpp,
-	xArc	    *arc,
-	int	    dx,
-	int	    dy,
-	FbBits	    and,
-	FbBits	    xor);
+       int dstBpp, xArc * arc, int dx, int dy, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbGlyph8 (FbBits    *dstLine,
 	  FbStride  dstStride,
-	  int	    dstBpp,
-	  FbStip    *stipple,
-	  FbBits    fg,
-	  int	    height,
-	  int	    shift);
+         int dstBpp, FbStip * stipple, FbBits fg, int height, int shift);
 
 extern _X_EXPORT void
+
 fbPolyline8 (DrawablePtr    pDrawable,
-	     GCPtr	    pGC,
-	     int	    mode,
-	     int	    npt,
-	     DDXPointPtr    ptsOrig);
+            GCPtr pGC, int mode, int npt, DDXPointPtr ptsOrig);
 
 extern _X_EXPORT void
-fbPolySegment8 (DrawablePtr pDrawable,
-		GCPtr	    pGC,
-		int	    nseg,
-		xSegment    *pseg);
+ fbPolySegment8(DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment * pseg);
 
 extern _X_EXPORT void
+
 fbBresSolid16(DrawablePtr   pDrawable,
 	      GCPtr	    pGC,
 	      int	    dashOffset,
 	      int	    signdx,
 	      int	    signdy,
-	      int	    axis,
-	      int	    x,
-	      int	    y,
-	      int	    e,
-	      int	    e1,
-	      int	    e3,
-	      int	    len);
+              int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbBresDash16(DrawablePtr    pDrawable,
 	     GCPtr	    pGC,
 	     int	    dashOffset,
 	     int	    signdx,
 	     int	    signdy,
-	     int	    axis,
-	     int	    x,
-	     int	    y,
-	     int	    e,
-	     int	    e1,
-	     int	    e3,
-	     int	    len);
+             int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbDots16(FbBits	    *dst,
 	 FbStride   dstStride,
 	 int	    dstBpp,
 	 BoxPtr	    pBox,
 	 xPoint	    *pts,
 	 int	    npt,
-	 int	    xorg,
-	 int	    yorg,
-	 int	    xoff,
-	 int	    yoff,
-	 FbBits	    and,
-	 FbBits	    xor);
+         int xorg, int yorg, int xoff, int yoff, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbArc16(FbBits	    *dst,
 	FbStride    dstStride,
-	int	    dstBpp,
-	xArc	    *arc,
-	int	    dx,
-	int	    dy,
-	FbBits	    and,
-	FbBits	    xor);
+        int dstBpp, xArc * arc, int dx, int dy, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbGlyph16(FbBits    *dstLine,
 	  FbStride  dstStride,
-	  int	    dstBpp,
-	  FbStip    *stipple,
-	  FbBits    fg,
-	  int	    height,
-	  int	    shift);
+          int dstBpp, FbStip * stipple, FbBits fg, int height, int shift);
 
 extern _X_EXPORT void
+
 fbPolyline16 (DrawablePtr   pDrawable,
-	      GCPtr	    pGC,
-	      int	    mode,
-	      int	    npt,
-	      DDXPointPtr   ptsOrig);
+             GCPtr pGC, int mode, int npt, DDXPointPtr ptsOrig);
 
 extern _X_EXPORT void
-fbPolySegment16 (DrawablePtr	pDrawable,
-		 GCPtr		pGC,
-		 int		nseg,
-		 xSegment	*pseg);
-
+ fbPolySegment16(DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment * pseg);
 
 extern _X_EXPORT void
+
 fbBresSolid24(DrawablePtr   pDrawable,
 	      GCPtr	    pGC,
 	      int	    dashOffset,
 	      int	    signdx,
 	      int	    signdy,
-	      int	    axis,
-	      int	    x,
-	      int	    y,
-	      int	    e,
-	      int	    e1,
-	      int	    e3,
-	      int	    len);
+              int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbBresDash24(DrawablePtr    pDrawable,
 	     GCPtr	    pGC,
 	     int	    dashOffset,
 	     int	    signdx,
 	     int	    signdy,
-	     int	    axis,
-	     int	    x,
-	     int	    y,
-	     int	    e,
-	     int	    e1,
-	     int	    e3,
-	     int	    len);
+             int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbDots24(FbBits	    *dst,
 	 FbStride   dstStride,
 	 int	    dstBpp,
 	 BoxPtr	    pBox,
 	 xPoint	    *pts,
 	 int	    npt,
-	 int	    xorg,
-	 int	    yorg,
-	 int	    xoff,
-	 int	    yoff,
-	 FbBits	    and,
-	 FbBits	    xor);
+         int xorg, int yorg, int xoff, int yoff, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbArc24(FbBits	    *dst,
 	FbStride    dstStride,
-	int	    dstBpp,
-	xArc	    *arc,
-	int	    dx,
-	int	    dy,
-	FbBits	    and,
-	FbBits	    xor);
+        int dstBpp, xArc * arc, int dx, int dy, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbGlyph24(FbBits    *dstLine,
 	  FbStride  dstStride,
-	  int	    dstBpp,
-	  FbStip    *stipple,
-	  FbBits    fg,
-	  int	    height,
-	  int	    shift);
+          int dstBpp, FbStip * stipple, FbBits fg, int height, int shift);
 
 extern _X_EXPORT void
+
 fbPolyline24 (DrawablePtr   pDrawable,
-	      GCPtr	    pGC,
-	      int	    mode,
-	      int	    npt,
-	      DDXPointPtr   ptsOrig);
+             GCPtr pGC, int mode, int npt, DDXPointPtr ptsOrig);
 
 extern _X_EXPORT void
-fbPolySegment24 (DrawablePtr	pDrawable,
-		 GCPtr		pGC,
-		 int		nseg,
-		 xSegment	*pseg);
-
+ fbPolySegment24(DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment * pseg);
 
 extern _X_EXPORT void
+
 fbBresSolid32(DrawablePtr   pDrawable,
 	      GCPtr	    pGC,
 	      int	    dashOffset,
 	      int	    signdx,
 	      int	    signdy,
-	      int	    axis,
-	      int	    x,
-	      int	    y,
-	      int	    e,
-	      int	    e1,
-	      int	    e3,
-	      int	    len);
+              int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbBresDash32(DrawablePtr    pDrawable,
 	     GCPtr	    pGC,
 	     int	    dashOffset,
 	     int	    signdx,
 	     int	    signdy,
-	     int	    axis,
-	     int	    x,
-	     int	    y,
-	     int	    e,
-	     int	    e1,
-	     int	    e3,
-	     int	    len);
+             int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbDots32(FbBits	    *dst,
 	 FbStride   dstStride,
 	 int	    dstBpp,
 	 BoxPtr	    pBox,
 	 xPoint	    *pts,
 	 int	    npt,
-	 int	    xorg,
-	 int	    yorg,
-	 int	    xoff,
-	 int	    yoff,
-	 FbBits	    and,
-	 FbBits	    xor);
+         int xorg, int yorg, int xoff, int yoff, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbArc32(FbBits	    *dst,
 	FbStride    dstStride,
-	int	    dstBpp,
-	xArc	    *arc,
-	int	    dx,
-	int	    dy,
-	FbBits	    and,
-	FbBits	    xor);
+        int dstBpp, xArc * arc, int dx, int dy, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbGlyph32(FbBits    *dstLine,
 	  FbStride  dstStride,
-	  int	    dstBpp,
-	  FbStip    *stipple,
-	  FbBits    fg,
-	  int	    height,
-	  int	    shift);
+          int dstBpp, FbStip * stipple, FbBits fg, int height, int shift);
 extern _X_EXPORT void
+
 fbPolyline32 (DrawablePtr   pDrawable,
-	      GCPtr	    pGC,
-	      int	    mode,
-	      int	    npt,
-	      DDXPointPtr   ptsOrig);
+             GCPtr pGC, int mode, int npt, DDXPointPtr ptsOrig);
 
 extern _X_EXPORT void
-fbPolySegment32 (DrawablePtr	pDrawable,
-		 GCPtr		pGC,
-		 int		nseg,
-		 xSegment	*pseg);
+ fbPolySegment32(DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment * pseg);
 
 /*
  * fbblt.c
  */
 extern _X_EXPORT void
+
 fbBlt (FbBits   *src, 
        FbStride	srcStride,
        int	srcX,
-       
        FbBits   *dst,
        FbStride dstStride,
        int	dstX,
-       
        int	width, 
-       int	height,
-       
-       int	alu,
-       FbBits	pm,
-       int	bpp,
-       
-       Bool	reverse,
-       Bool	upsidedown);
+      int height, int alu, FbBits pm, int bpp, Bool reverse, Bool upsidedown);
 
 extern _X_EXPORT void
+
 fbBlt24 (FbBits	    *srcLine,
 	 FbStride   srcStride,
 	 int	    srcX,
-
 	 FbBits	    *dstLine,
 	 FbStride   dstStride,
 	 int	    dstX,
-
 	 int	    width, 
-	 int	    height,
-
-	 int	    alu,
-	 FbBits	    pm,
-
-	 Bool	    reverse,
-	 Bool	    upsidedown);
+        int height, int alu, FbBits pm, Bool reverse, Bool upsidedown);
     
 extern _X_EXPORT void
-fbBltStip (FbStip   *src,
-	   FbStride srcStride,	    /* in FbStip units, not FbBits units */
-	   int	    srcX,
-	   
-	   FbStip   *dst,
-	   FbStride dstStride,	    /* in FbStip units, not FbBits units */
-	   int	    dstX,
-
-	   int	    width, 
-	   int	    height,
-
-	   int	    alu,
-	   FbBits   pm,
-	   int	    bpp);
+ fbBltStip(FbStip * src, FbStride srcStride,    /* in FbStip units, not FbBits units */
+           int srcX, FbStip * dst, FbStride dstStride,  /* in FbStip units, not FbBits units */
+           int dstX, int width, int height, int alu, FbBits pm, int bpp);
     
 /*
  * fbbltone.c
  */
 extern _X_EXPORT void
+
 fbBltOne (FbStip   *src,
 	  FbStride srcStride,
 	  int	   srcX,
@@ -1188,50 +1027,33 @@ fbBltOne (FbStip   *src,
 	  FbStride dstStride,
 	  int	   dstX,
 	  int	   dstBpp,
-
 	  int	   width,
-	  int	   height,
-
-	  FbBits   fgand,
-	  FbBits   fbxor,
-	  FbBits   bgand,
-	  FbBits   bgxor);
+         int height, FbBits fgand, FbBits fbxor, FbBits bgand, FbBits bgxor);
  
 extern _X_EXPORT void
-fbBltOne24 (FbStip    *src,
-	  FbStride  srcStride,	    /* FbStip units per scanline */
+ fbBltOne24(FbStip * src, FbStride srcStride,   /* FbStip units per scanline */
 	  int	    srcX,	    /* bit position of source */
-	  FbBits    *dst,
-	  FbStride  dstStride,	    /* FbBits units per scanline */
+            FbBits * dst, FbStride dstStride,   /* FbBits units per scanline */
 	  int	    dstX,	    /* bit position of dest */
 	  int	    dstBpp,	    /* bits per destination unit */
-
 	  int	    width,	    /* width in bits of destination */
 	  int	    height,	    /* height in scanlines */
-
 	  FbBits    fgand,	    /* rrop values */
-	  FbBits    fgxor,
-	  FbBits    bgand,
-	  FbBits    bgxor);
+            FbBits fgxor, FbBits bgand, FbBits bgxor);
 
 extern _X_EXPORT void
+
 fbBltPlane (FbBits	    *src,
 	    FbStride	    srcStride,
 	    int		    srcX,
 	    int		    srcBpp,
-
 	    FbStip	    *dst,
 	    FbStride	    dstStride,
 	    int		    dstX,
-	    
 	    int		    width,
 	    int		    height,
-	    
 	    FbStip	    fgand,
-	    FbStip	    fgxor,
-	    FbStip	    bgand,
-	    FbStip	    bgxor,
-	    Pixel	    planeMask);
+           FbStip fgxor, FbStip bgand, FbStip bgxor, Pixel planeMask);
 
 /*
  * fbcmap_mi.c
@@ -1246,19 +1068,18 @@ extern _X_EXPORT void
 fbUninstallColormap(ColormapPtr pmap);
 
 extern _X_EXPORT void
+
 fbResolveColor(unsigned short	*pred, 
 	       unsigned short	*pgreen, 
-	       unsigned short	*pblue,
-	       VisualPtr	pVisual);
+               unsigned short *pblue, VisualPtr pVisual);
 
 extern _X_EXPORT Bool
 fbInitializeColormap(ColormapPtr pmap);
 
 extern _X_EXPORT int
+
 fbExpandDirectColors (ColormapPtr   pmap, 
-		      int	    ndef,
-		      xColorItem    *indefs,
-		      xColorItem    *outdefs);
+                     int ndef, xColorItem * indefs, xColorItem * outdefs);
 
 extern _X_EXPORT Bool
 fbCreateDefColormap(ScreenPtr pScreen);
@@ -1273,18 +1094,18 @@ extern _X_EXPORT Bool
 fbSetVisualTypes (int depth, int visuals, int bitsPerRGB);
 
 extern _X_EXPORT Bool
+
 fbSetVisualTypesAndMasks (int depth, int visuals, int bitsPerRGB,
 			  Pixel redMask, Pixel greenMask, Pixel blueMask);
 
 extern _X_EXPORT Bool
+
 fbInitVisuals (VisualPtr    *visualp, 
 	       DepthPtr	    *depthp,
 	       int	    *nvisualp,
 	       int	    *ndepthp,
 	       int	    *rootDepthp,
-	       VisualID	    *defaultVisp,
-	       unsigned long	sizes,
-	       int	    bitsPerRGB);
+              VisualID * defaultVisp, unsigned long sizes, int bitsPerRGB);
 
 /*
  * fbcopy.c
@@ -1299,11 +1120,10 @@ typedef void   (*fbCopyProc) (DrawablePtr  pSrcDrawable,
                               int          dx,
                               int          dy,
                               Bool         reverse,
-                              Bool         upsidedown,
-                              Pixel        bitplane,
-                              void         *closure);
+                            Bool upsidedown, Pixel bitplane, void *closure);
 
 extern _X_EXPORT void
+
 fbCopyNtoN (DrawablePtr	pSrcDrawable,
 	    DrawablePtr	pDstDrawable,
 	    GCPtr	pGC,
@@ -1311,25 +1131,21 @@ fbCopyNtoN (DrawablePtr	pSrcDrawable,
 	    int		nbox,
 	    int		dx,
 	    int		dy,
-	    Bool	reverse,
-	    Bool	upsidedown,
-	    Pixel	bitplane,
-	    void	*closure);
+           Bool reverse, Bool upsidedown, Pixel bitplane, void *closure);
 
 /* Compatibility wrapper, to be removed at next ABI change. */
 extern _X_EXPORT void
+
 fbCopyRegion (DrawablePtr   pSrcDrawable,
              DrawablePtr   pDstDrawable,
              GCPtr         pGC,
              RegionPtr     pDstRegion,
              int           dx,
-             int           dy,
-             fbCopyProc    copyProc,
-             Pixel         bitPlane,
-             void          *closure);
+             int dy, fbCopyProc copyProc, Pixel bitPlane, void *closure);
 
 /* Compatibility wrapper, to be removed at next ABI change. */
 extern _X_EXPORT RegionPtr
+
 fbDoCopy (DrawablePtr  pSrcDrawable,
          DrawablePtr   pDstDrawable,
          GCPtr         pGC,
@@ -1338,12 +1154,10 @@ fbDoCopy (DrawablePtr  pSrcDrawable,
          int           widthSrc,
          int           heightSrc,
          int           xOut,
-         int           yOut,
-         fbCopyProc    copyProc,
-         Pixel         bitplane,
-         void          *closure);
+         int yOut, fbCopyProc copyProc, Pixel bitplane, void *closure);
 
 extern _X_EXPORT void
+
 fbCopy1toN (DrawablePtr	pSrcDrawable,
 	    DrawablePtr	pDstDrawable,
 	    GCPtr	pGC,
@@ -1351,12 +1165,10 @@ fbCopy1toN (DrawablePtr	pSrcDrawable,
 	    int		nbox,
 	    int		dx,
 	    int		dy,
-	    Bool	reverse,
-	    Bool	upsidedown,
-	    Pixel	bitplane,
-	    void	*closure);
+           Bool reverse, Bool upsidedown, Pixel bitplane, void *closure);
 
 extern _X_EXPORT void
+
 fbCopyNto1 (DrawablePtr	pSrcDrawable,
 	    DrawablePtr	pDstDrawable,
 	    GCPtr	pGC,
@@ -1364,63 +1176,44 @@ fbCopyNto1 (DrawablePtr	pSrcDrawable,
 	    int		nbox,
 	    int		dx,
 	    int		dy,
-	    Bool	reverse,
-	    Bool	upsidedown,
-	    Pixel	bitplane,
-	    void	*closure);
+           Bool reverse, Bool upsidedown, Pixel bitplane, void *closure);
 
 extern _X_EXPORT RegionPtr
+
 fbCopyArea (DrawablePtr	pSrcDrawable,
 	    DrawablePtr	pDstDrawable,
 	    GCPtr	pGC,
-	    int		xIn, 
-	    int		yIn,
-	    int		widthSrc, 
-	    int		heightSrc,
-	    int		xOut, 
-	    int		yOut);
+           int xIn, int yIn, int widthSrc, int heightSrc, int xOut, int yOut);
 
 extern _X_EXPORT RegionPtr
+
 fbCopyPlane (DrawablePtr    pSrcDrawable,
 	     DrawablePtr    pDstDrawable,
 	     GCPtr	    pGC,
 	     int	    xIn, 
 	     int	    yIn,
 	     int	    widthSrc, 
-	     int	    heightSrc,
-	     int	    xOut, 
-	     int	    yOut,
-	     unsigned long  bitplane);
+            int heightSrc, int xOut, int yOut, unsigned long bitplane);
 
 /*
  * fbfill.c
  */
 extern _X_EXPORT void
-fbFill (DrawablePtr pDrawable,
-	GCPtr	    pGC,
-	int	    x,
-	int	    y,
-	int	    width,
-	int	    height);
+ fbFill(DrawablePtr pDrawable, GCPtr pGC, int x, int y, int width, int height);
 
 extern _X_EXPORT void
+
 fbSolidBoxClipped (DrawablePtr	pDrawable,
 		   RegionPtr	pClip,
-		   int		xa,
-		   int		ya,
-		   int		xb,
-		   int		yb,
-		   FbBits	and,
-		   FbBits	xor);
+                  int xa, int ya, int xb, int yb, FbBits and, FbBits xor);
 
 /*
  * fbfillrect.c
  */
 extern _X_EXPORT void
+
 fbPolyFillRect(DrawablePtr  pDrawable, 
-	       GCPtr	    pGC, 
-	       int	    nrectInit,
-	       xRectangle   *prectInit);
+               GCPtr pGC, int nrectInit, xRectangle *prectInit);
 
 #define fbPolyFillArc miPolyFillArc
 
@@ -1430,13 +1223,10 @@ fbPolyFillRect(DrawablePtr  pDrawable,
  * fbfillsp.c
  */
 extern _X_EXPORT void
+
 fbFillSpans (DrawablePtr    pDrawable,
 	     GCPtr	    pGC,
-	     int	    nInit,
-	     DDXPointPtr    pptInit,
-	     int	    *pwidthInit,
-	     int	    fSorted);
-
+            int nInit, DDXPointPtr pptInit, int *pwidthInit, int fSorted);
 
 /*
  * fbgc.c
@@ -1455,71 +1245,56 @@ fbValidateGC(GCPtr pGC, unsigned long changes, DrawablePtr pDrawable);
  * fbgetsp.c
  */
 extern _X_EXPORT void
+
 fbGetSpans(DrawablePtr	pDrawable, 
 	   int		wMax, 
-	   DDXPointPtr	ppt, 
-	   int		*pwidth, 
-	   int		nspans, 
-	   char		*pchardstStart);
+           DDXPointPtr ppt, int *pwidth, int nspans, char *pchardstStart);
 
 /*
  * fbglyph.c
  */
 
 extern _X_EXPORT Bool
-fbGlyphIn (RegionPtr	pRegion,
-	   int		x,
-	   int		y,
-	   int		width,
-	   int		height);
+ fbGlyphIn(RegionPtr pRegion, int x, int y, int width, int height);
     
 extern _X_EXPORT void
+
 fbPolyGlyphBlt (DrawablePtr	pDrawable,
 		GCPtr		pGC,
 		int		x, 
 		int		y,
-		unsigned int	nglyph,
-		CharInfoPtr	*ppci,
-		pointer		pglyphBase);
+               unsigned int nglyph, CharInfoPtr * ppci, pointer pglyphBase);
 
 extern _X_EXPORT void
+
 fbImageGlyphBlt (DrawablePtr	pDrawable,
 		 GCPtr		pGC,
 		 int		x,
 		 int		y,
-		 unsigned int	nglyph,
-		 CharInfoPtr	*ppci,
-		 pointer	pglyphBase);
+                unsigned int nglyph, CharInfoPtr * ppci, pointer pglyphBase);
 
 /*
  * fbimage.c
  */
 
 extern _X_EXPORT void
+
 fbPutImage (DrawablePtr	pDrawable,
 	    GCPtr	pGC,
 	    int		depth,
-	    int		x,
-	    int		y,
-	    int		w,
-	    int		h,
-	    int		leftPad,
-	    int		format,
-	    char	*pImage);
+           int x, int y, int w, int h, int leftPad, int format, char *pImage);
 
 extern _X_EXPORT void
+
 fbPutZImage (DrawablePtr	pDrawable,
 	     RegionPtr		pClip,
 	     int		alu,
 	     FbBits		pm,
 	     int		x,
-	     int		y,
-	     int		width,
-	     int		height,
-	     FbStip		*src,
-	     FbStride		srcStride);
+            int y, int width, int height, FbStip * src, FbStride srcStride);
 
 extern _X_EXPORT void
+
 fbPutXYImage (DrawablePtr	pDrawable,
 	      RegionPtr		pClip,
 	      FbBits		fg,
@@ -1527,58 +1302,38 @@ fbPutXYImage (DrawablePtr	pDrawable,
 	      FbBits		pm,
 	      int		alu,
 	      Bool		opaque,
-	      
 	      int		x,
 	      int		y,
-	      int		width,
-	      int		height,
-
-	      FbStip		*src,
-	      FbStride		srcStride,
-	      int		srcX);
+             int width, int height, FbStip * src, FbStride srcStride, int srcX);
 
 extern _X_EXPORT void
+
 fbGetImage (DrawablePtr	    pDrawable,
 	    int		    x,
 	    int		    y,
-	    int		    w,
-	    int		    h,
-	    unsigned int    format,
-	    unsigned long   planeMask,
-	    char	    *d);
+           int w, int h, unsigned int format, unsigned long planeMask, char *d);
 /*
  * fbline.c
  */
 
 extern _X_EXPORT void
+
 fbZeroLine (DrawablePtr	pDrawable,
-	    GCPtr	pGC,
-	    int		mode,
-	    int		npt,
-	    DDXPointPtr	ppt);
+           GCPtr pGC, int mode, int npt, DDXPointPtr ppt);
 
 extern _X_EXPORT void
-fbZeroSegment (DrawablePtr  pDrawable,
-	       GCPtr	    pGC,
-	       int	    nseg,
-	       xSegment	    *pSegs);
+ fbZeroSegment(DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment * pSegs);
 
 extern _X_EXPORT void
+
 fbPolyLine (DrawablePtr	pDrawable,
-	    GCPtr	pGC,
-	    int		mode,
-	    int		npt,
-	    DDXPointPtr	ppt);
+           GCPtr pGC, int mode, int npt, DDXPointPtr ppt);
 
 extern _X_EXPORT void
-fbFixCoordModePrevious (int npt,
-			DDXPointPtr ppt);
+ fbFixCoordModePrevious(int npt, DDXPointPtr ppt);
 
 extern _X_EXPORT void
-fbPolySegment (DrawablePtr  pDrawable,
-	       GCPtr	    pGC,
-	       int	    nseg,
-	       xSegment	    *pseg);
+ fbPolySegment(DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment * pseg);
 
 #define fbPolyRectangle	miPolyRectangle
 
@@ -1587,19 +1342,19 @@ fbPolySegment (DrawablePtr  pDrawable,
  */
 
 extern _X_EXPORT Bool
-fbPictureInit (ScreenPtr pScreen,
-	       PictFormatPtr formats,
-	       int nformats);
+ fbPictureInit(ScreenPtr pScreen, PictFormatPtr formats, int nformats);
 
 /*
  * fbpixmap.c
  */
 
 extern _X_EXPORT PixmapPtr
+
 fbCreatePixmapBpp (ScreenPtr pScreen, int width, int height, int depth, int bpp,
 		   unsigned usage_hint);
 
 extern _X_EXPORT PixmapPtr
+
 fbCreatePixmap (ScreenPtr pScreen, int width, int height, int depth,
 		unsigned usage_hint);
 
@@ -1614,78 +1369,50 @@ fbPixmapToRegion(PixmapPtr pPix);
  */
 
 extern _X_EXPORT void
+
 fbDots (FbBits	    *dstOrig,
 	FbStride    dstStride,
 	int	    dstBpp,
 	BoxPtr	    pBox,
 	xPoint	    *pts,
 	int	    npt,
-	int	    xorg,
-	int	    yorg,
-	int	    xoff,
-	int	    yoff,
-	FbBits	    andOrig,
-	FbBits	    xorOrig);
+       int xorg, int yorg, int xoff, int yoff, FbBits andOrig, FbBits xorOrig);
 
 extern _X_EXPORT void
+
 fbPolyPoint (DrawablePtr    pDrawable,
-	     GCPtr	    pGC,
-	     int	    mode,
-	     int	    npt,
-	     xPoint	    *pptInit);
+            GCPtr pGC, int mode, int npt, xPoint * pptInit);
 
 /*
  * fbpush.c
  */
 extern _X_EXPORT void
+
 fbPushPattern (DrawablePtr  pDrawable,
 	       GCPtr	    pGC,
-	       
 	       FbStip	    *src,
 	       FbStride	    srcStride,
-	       int	    srcX,
-
-	       int	    x,
-	       int	    y,
-
-	       int	    width,
-	       int	    height);
+              int srcX, int x, int y, int width, int height);
 
 extern _X_EXPORT void
+
 fbPushFill (DrawablePtr	pDrawable,
 	    GCPtr	pGC,
-
 	    FbStip	*src,
-	    FbStride	srcStride,
-	    int		srcX,
-	    
-	    int		x,
-	    int		y,
-	    int		width,
-	    int		height);
+           FbStride srcStride, int srcX, int x, int y, int width, int height);
 
 extern _X_EXPORT void
+
 fbPushImage (DrawablePtr    pDrawable,
 	     GCPtr	    pGC,
-	     
 	     FbStip	    *src,
-	     FbStride	    srcStride,
-	     int	    srcX,
-
-	     int	    x,
-	     int	    y,
-	     int	    width,
-	     int	    height);
+            FbStride srcStride, int srcX, int x, int y, int width, int height);
 
 extern _X_EXPORT void
+
 fbPushPixels (GCPtr	    pGC,
 	      PixmapPtr	    pBitmap,
-	      DrawablePtr   pDrawable,
-	      int	    dx,
-	      int	    dy,
-	      int	    xOrg,
-	      int	    yOrg);
-
+             DrawablePtr pDrawable, int dx, int dy, int xOrg, int yOrg);
 
 /*
  * fbscreen.c
@@ -1701,6 +1428,7 @@ extern _X_EXPORT Bool
 fbUnrealizeFont(ScreenPtr pScreen, FontPtr pFont);
 
 extern _X_EXPORT void
+
 fbQueryBestSize (int class, 
 		 unsigned short *width, unsigned short *height,
 		 ScreenPtr pScreen);
@@ -1712,16 +1440,14 @@ extern _X_EXPORT void
 _fbSetWindowPixmap (WindowPtr pWindow, PixmapPtr pPixmap);
 
 extern _X_EXPORT Bool
-fbSetupScreen(ScreenPtr	pScreen, 
-	      pointer	pbits,		/* pointer to screen bitmap */
+ fbSetupScreen(ScreenPtr pScreen, pointer pbits,        /* pointer to screen bitmap */
 	      int	xsize, 		/* in pixels */
-	      int	ysize,
-	      int	dpix,		/* dots per inch */
-	      int	dpiy,
-	      int	width,		/* pixel width of frame buffer */
+               int ysize, int dpix,     /* dots per inch */
+               int dpiy, int width,     /* pixel width of frame buffer */
 	      int	bpp);		/* bits per pixel of frame buffer */
 
 extern _X_EXPORT Bool
+
 wfbFinishScreenInit(ScreenPtr	pScreen,
 		    pointer	pbits,
 		    int		xsize,
@@ -1730,10 +1456,10 @@ wfbFinishScreenInit(ScreenPtr	pScreen,
 		    int		dpiy,
 		    int		width,
 		    int		bpp,
-		    SetupWrapProcPtr setupWrap,
-		    FinishWrapProcPtr finishWrap);
+                    SetupWrapProcPtr setupWrap, FinishWrapProcPtr finishWrap);
 
 extern _X_EXPORT Bool
+
 wfbScreenInit(ScreenPtr	pScreen,
 	      pointer	pbits,
 	      int	xsize,
@@ -1742,28 +1468,20 @@ wfbScreenInit(ScreenPtr	pScreen,
 	      int	dpiy,
 	      int	width,
 	      int	bpp,
-	      SetupWrapProcPtr setupWrap,
-	      FinishWrapProcPtr finishWrap);
+              SetupWrapProcPtr setupWrap, FinishWrapProcPtr finishWrap);
 
 extern _X_EXPORT Bool
+
 fbFinishScreenInit(ScreenPtr	pScreen,
 		   pointer	pbits,
 		   int		xsize,
-		   int		ysize,
-		   int		dpix,
-		   int		dpiy,
-		   int		width,
-		   int		bpp);
+                   int ysize, int dpix, int dpiy, int width, int bpp);
 
 extern _X_EXPORT Bool
+
 fbScreenInit(ScreenPtr	pScreen,
 	     pointer	pbits,
-	     int	xsize,
-	     int	ysize,
-	     int	dpix,
-	     int	dpiy,
-	     int	width,
-	     int	bpp);
+             int xsize, int ysize, int dpix, int dpiy, int width, int bpp);
     
 /*
  * fbseg.c
@@ -1773,226 +1491,147 @@ typedef void	FbBres (DrawablePtr	pDrawable,
 			int		dashOffset,
 			int		signdx,
 			int		signdy,
-			int		axis,
-			int		x,
-			int		y,
-			int		e,
-			int		e1,
-			int		e3,
-			int		len);
+                    int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT FbBres fbBresSolid, fbBresDash, fbBresFill, fbBresFillDash;
+
 /*
  * fbsetsp.c
  */
 
 extern _X_EXPORT void
+
 fbSetSpans (DrawablePtr	    pDrawable,
 	    GCPtr	    pGC,
-	    char	    *src,
-	    DDXPointPtr	    ppt,
-	    int		    *pwidth,
-	    int		    nspans,
-	    int		    fSorted);
+           char *src, DDXPointPtr ppt, int *pwidth, int nspans, int fSorted);
 
-extern _X_EXPORT FbBres *
-fbSelectBres (DrawablePtr   pDrawable,
-	      GCPtr	    pGC);
+extern _X_EXPORT FbBres *fbSelectBres(DrawablePtr pDrawable, GCPtr pGC);
 
 extern _X_EXPORT void
+
 fbBres (DrawablePtr	pDrawable,
 	GCPtr		pGC,
 	int		dashOffset,
 	int		signdx,
-	int		signdy,
-	int		axis,
-	int		x,
-	int		y,
-	int		e,
-	int		e1,
-	int		e3,
-	int		len);
+       int signdy, int axis, int x, int y, int e, int e1, int e3, int len);
 
 extern _X_EXPORT void
+
 fbSegment (DrawablePtr	pDrawable,
 	   GCPtr	pGC,
-	   int		xa,
-	   int		ya,
-	   int		xb,
-	   int		yb,
-	   Bool		drawLast,
-	   int		*dashOffset);
-
+          int xa, int ya, int xb, int yb, Bool drawLast, int *dashOffset);
 
 /*
  * fbsolid.c
  */
 
 extern _X_EXPORT void
+
 fbSolid (FbBits	    *dst,
 	 FbStride   dstStride,
-	 int	    dstX,
-	 int	    bpp,
-
-	 int	    width,
-	 int	    height,
-
-	 FbBits	    and,
-	 FbBits	    xor);
+        int dstX, int bpp, int width, int height, FbBits and, FbBits xor);
 
 extern _X_EXPORT void
+
 fbSolid24 (FbBits   *dst,
 	   FbStride dstStride,
-	   int	    dstX,
-
-	   int	    width,
-	   int	    height,
-
-	   FbBits   and,
-	   FbBits   xor);
+          int dstX, int width, int height, FbBits and, FbBits xor);
 
 /*
  * fbstipple.c
  */
 
 extern _X_EXPORT void
-fbTransparentSpan (FbBits   *dst,
-		   FbBits   stip,
-		   FbBits   fgxor,
-		   int	    n);
+ fbTransparentSpan(FbBits * dst, FbBits stip, FbBits fgxor, int n);
 
 extern _X_EXPORT void
+
 fbEvenStipple (FbBits   *dst,
 	       FbStride dstStride,
 	       int	dstX,
 	       int	dstBpp,
-
 	       int	width,
 	       int	height,
-
 	       FbStip   *stip,
 	       FbStride	stipStride,
 	       int	stipHeight,
-
 	       FbBits   fgand,
-	       FbBits   fgxor,
-	       FbBits   bgand,
-	       FbBits   bgxor,
-
-	       int	xRot,
-	       int	yRot);
+              FbBits fgxor, FbBits bgand, FbBits bgxor, int xRot, int yRot);
 
 extern _X_EXPORT void
+
 fbOddStipple (FbBits	*dst,
 	      FbStride	dstStride,
 	      int	dstX,
 	      int	dstBpp,
-
 	      int	width,
 	      int	height,
-
 	      FbStip	*stip,
 	      FbStride	stipStride,
 	      int	stipWidth,
 	      int	stipHeight,
-
 	      FbBits	fgand,
-	      FbBits	fgxor,
-	      FbBits	bgand,
-	      FbBits	bgxor,
-
-	      int	xRot,
-	      int	yRot);
+             FbBits fgxor, FbBits bgand, FbBits bgxor, int xRot, int yRot);
 
 extern _X_EXPORT void
+
 fbStipple (FbBits   *dst,
 	   FbStride dstStride,
 	   int	    dstX,
 	   int	    dstBpp,
-
 	   int	    width,
 	   int	    height,
-
 	   FbStip   *stip,
 	   FbStride stipStride,
 	   int	    stipWidth,
 	   int	    stipHeight,
 	   Bool	    even,
-
 	   FbBits   fgand,
-	   FbBits   fgxor,
-	   FbBits   bgand,
-	   FbBits   bgxor,
-
-	   int	    xRot,
-	   int	    yRot);
+          FbBits fgxor, FbBits bgand, FbBits bgxor, int xRot, int yRot);
 
 /*
  * fbtile.c
  */
 
 extern _X_EXPORT void
+
 fbEvenTile (FbBits	*dst,
 	    FbStride	dstStride,
 	    int		dstX,
-
 	    int		width,
 	    int		height,
-
 	    FbBits	*tile,
 	    FbStride	tileStride,
-	    int		tileHeight,
-
-	    int		alu,
-	    FbBits	pm,
-	    int		xRot,
-	    int		yRot);
+           int tileHeight, int alu, FbBits pm, int xRot, int yRot);
 
 extern _X_EXPORT void
+
 fbOddTile (FbBits	*dst,
 	   FbStride	dstStride,
 	   int		dstX,
-
 	   int		width,
 	   int		height,
-
 	   FbBits	*tile,
 	   FbStride	tileStride,
 	   int		tileWidth,
-	   int		tileHeight,
-
-	   int		alu,
-	   FbBits	pm,
-	   int		bpp,
-	   
-	   int		xRot,
-	   int		yRot);
+          int tileHeight, int alu, FbBits pm, int bpp, int xRot, int yRot);
 
 extern _X_EXPORT void
+
 fbTile (FbBits	    *dst,
 	FbStride    dstStride,
 	int	    dstX,
-
 	int	    width,
 	int	    height,
-
 	FbBits	    *tile,
 	FbStride    tileStride,
 	int	    tileWidth,
-	int	    tileHeight,
-	
-	int	    alu,
-	FbBits	    pm,
-	int	    bpp,
-	
-	int	    xRot,
-	int	    yRot);
+       int tileHeight, int alu, FbBits pm, int bpp, int xRot, int yRot);
 
 /*
  * fbutil.c
  */
-extern _X_EXPORT FbBits
-fbReplicatePixel (Pixel p, int bpp);
+extern _X_EXPORT FbBits fbReplicatePixel(Pixel p, int bpp);
 
 extern _X_EXPORT void
 fbReduceRasterOp (int rop, FbBits fg, FbBits pm, FbBits *andp, FbBits *xorp);
@@ -2022,6 +1661,7 @@ extern _X_EXPORT Bool
 fbUnmapWindow(WindowPtr pWindow);
     
 extern _X_EXPORT void
+
 fbCopyWindowProc (DrawablePtr	pSrcDrawable,
 		  DrawablePtr	pDstDrawable,
 		  GCPtr		pGC,
@@ -2029,32 +1669,23 @@ fbCopyWindowProc (DrawablePtr	pSrcDrawable,
 		  int		nbox,
 		  int		dx,
 		  int		dy,
-		  Bool		reverse,
-		  Bool		upsidedown,
-		  Pixel		bitplane,
-		  void		*closure);
+                 Bool reverse, Bool upsidedown, Pixel bitplane, void *closure);
 
 extern _X_EXPORT void
-fbCopyWindow(WindowPtr	    pWin, 
-	     DDXPointRec    ptOldOrg, 
-	     RegionPtr	    prgnSrc);
+ fbCopyWindow(WindowPtr pWin, DDXPointRec ptOldOrg, RegionPtr prgnSrc);
 
 extern _X_EXPORT Bool
 fbChangeWindowAttributes(WindowPtr pWin, unsigned long mask);
 
 extern _X_EXPORT void
+
 fbFillRegionSolid (DrawablePtr	pDrawable,
-		   RegionPtr	pRegion,
-		   FbBits	and,
-		   FbBits	xor);
+                  RegionPtr pRegion, FbBits and, FbBits xor);
 
-extern _X_EXPORT pixman_image_t *
-image_from_pict (PicturePtr	pict,
+extern _X_EXPORT pixman_image_t *image_from_pict(PicturePtr pict,
 		 Bool		has_clip,
-		 int		*xoff,
-		 int		*yoff);
+                                                 int *xoff, int *yoff);
 
 extern _X_EXPORT void free_pixman_pict (PicturePtr, pixman_image_t *);
 
 #endif /* _FB_H_ */
-
