diff --git a/hw/xfree86/xaa/xaaInitAccel.c b/hw/xfree86/xaa/xaaInitAccel.c
index 2f40c81..2a85a19 100644
--- a/hw/xfree86/xaa/xaaInitAccel.c
+++ b/hw/xfree86/xaa/xaaInitAccel.c
@@ -72,7 +72,8 @@ static const OptionInfoRec XAAOptions[] = {
 				OPTV_BOOLEAN,	{0}, FALSE },
     {XAAOPT_CPU_TO_SCREEN_COL_EXP_FILL,	"XaaNoCPUToScreenColorExpandFill",
 				OPTV_BOOLEAN,	{0}, FALSE },
-    {XAAOPT_SCANLINE_CPU_TO_SCREEN_COL_EXP_FILL,"XaaNoScanlineCPUToScreenColorExpandFill",
+    {XAAOPT_SCANLINE_CPU_TO_SCREEN_COL_EXP_FILL,
+     "XaaNoScanlineCPUToScreenColorExpandFill",
 				OPTV_BOOLEAN,	{0}, FALSE },
     {XAAOPT_SCREEN_TO_SCREEN_COL_EXP_FILL,	"XaaNoScreenToScreenColorExpandFill",
 				OPTV_BOOLEAN,	{0}, FALSE },
@@ -94,8 +95,7 @@ static const OptionInfoRec XAAOptions[] = {
 				OPTV_NONE,	{0}, FALSE }
 };
 
-static XF86ModuleVersionInfo xaaVersRec =
-{
+static XF86ModuleVersionInfo xaaVersRec = {
 	"xaa",
 	MODULEVENDORSTRING,
 	MODINFOSTRING1,
@@ -146,25 +146,28 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     infoRec->NeedToSync = FALSE;
 
     /* must have a Sync function */
-    if(!infoRec->Sync) return FALSE;
+    if (!infoRec->Sync)
+        return FALSE;
     for(i = 0; i < pScrn->numEntities; i++) {
-        if(xf86IsEntityShared(pScrn->entityList[i])) is_shared = 1;
+        if (xf86IsEntityShared(pScrn->entityList[i]))
+            is_shared = 1;
     }
    
     /* If this PCI entity has IS_SHARED_ACCEL set in entityProp
      * then a RestoreAccelState function is required
      */
-    if(!infoRec->RestoreAccelState && is_shared) return FALSE;
+    if (!infoRec->RestoreAccelState && is_shared)
+        return FALSE;
 
     if(infoRec->RestoreAccelState) {
-        if(!XAAInitStateWrap(pScreen, infoRec)) return FALSE;
+        if (!XAAInitStateWrap(pScreen, infoRec))
+            return FALSE;
     }
    
     if (serverGeneration == 1)
 	xf86DrvMsg(index, X_INFO, 
 		"Using XFree86 Acceleration Architecture (XAA)\n");
 
-
     /************** Low Level *************/
 
     if(!infoRec->SetClippingRectangle || !infoRec->DisableClipping) {
@@ -179,7 +182,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
        infoRec->SubsequentScreenToScreenCopy &&
        !xf86ReturnOptValBool(options, XAAOPT_SCREEN_TO_SCREEN_COPY, FALSE)) {
 	HaveScreenToScreenCopy = TRUE;
-    } else {
+    }
+    else {
 	infoRec->ScreenToScreenCopyFlags = 0;
 	infoRec->SetupForScreenToScreenCopy = NULL;
 	infoRec->SubsequentScreenToScreenCopy = NULL;
@@ -195,7 +199,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		HaveSolidFillTrap = TRUE;
 	else
 		infoRec->SubsequentSolidFillTrap = NULL;
-    } else {
+    }
+    else {
 	infoRec->SolidFillFlags = 0;
 	infoRec->SetupForSolidFill = NULL;
 	infoRec->SubsequentSolidFillRect = NULL;
@@ -206,11 +211,11 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->SetupForSolidLine) {
 	if(infoRec->SubsequentSolidTwoPointLine &&
-		!xf86ReturnOptValBool(options,
-		                      XAAOPT_SOLID_TWO_POINT_LINE, FALSE))
+            !xf86ReturnOptValBool(options, XAAOPT_SOLID_TWO_POINT_LINE, FALSE))
 	    HaveSolidTwoPointLine = TRUE;
 	if(infoRec->SubsequentSolidBresenhamLine &&
-		!xf86ReturnOptValBool(options, XAAOPT_SOLID_BRESENHAM_LINE, FALSE)) {
+            !xf86ReturnOptValBool(options, XAAOPT_SOLID_BRESENHAM_LINE,
+                                  FALSE)) {
 	    HaveSolidBresenhamLine = TRUE;
 
 	    if(infoRec->SolidBresenhamLineErrorTermBits)
@@ -219,14 +224,13 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	}
 
 	if(infoRec->SubsequentSolidHorVertLine &&
-		!xf86ReturnOptValBool(options,
-		                      XAAOPT_SOLID_HORVERT_LINE, FALSE))
+            !xf86ReturnOptValBool(options, XAAOPT_SOLID_HORVERT_LINE, FALSE))
 	    HaveSolidHorVertLine = TRUE;
 	else if(HaveSolidTwoPointLine) {
-	    infoRec->SubsequentSolidHorVertLine = 
-			XAASolidHorVertLineAsTwoPoint;
+            infoRec->SubsequentSolidHorVertLine = XAASolidHorVertLineAsTwoPoint;
 	    HaveSolidHorVertLine = TRUE;
-	} else if(HaveSolidBresenhamLine) {
+        }
+        else if (HaveSolidBresenhamLine) {
 	    infoRec->SubsequentSolidHorVertLine = 
 			XAASolidHorVertLineAsBresenham;
 	    HaveSolidHorVertLine = TRUE;
@@ -235,9 +239,7 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     /* XXX Should this also check for XAAOPT_SOLID_HORVERT_LINE? */
     if (!HaveSolidTwoPointLine &&
-	!HaveSolidBresenhamLine &&
-	!HaveSolidHorVertLine &&
-	HaveSolidFillRect) {
+        !HaveSolidBresenhamLine && !HaveSolidHorVertLine && HaveSolidFillRect) {
 	infoRec->SetupForSolidLine = infoRec->SetupForSolidFill;
 	infoRec->SubsequentSolidHorVertLine = XAASolidHorVertLineAsRects;
 	infoRec->SolidLineFlags = infoRec->SolidFillFlags;
@@ -253,8 +255,7 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     /* Disable all if nothing left over */
     if (!HaveSolidTwoPointLine &&
-	!HaveSolidBresenhamLine &&
-	!HaveSolidHorVertLine) {
+        !HaveSolidBresenhamLine && !HaveSolidHorVertLine) {
 	infoRec->SolidLineFlags = 0;
 	infoRec->SetupForSolidLine = NULL;
     }
@@ -264,27 +265,34 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
    if(infoRec->SetupForMono8x8PatternFill &&
 		infoRec->SubsequentMono8x8PatternFillRect &&
 		!xf86ReturnOptValBool(options,
-		                      XAAOPT_MONO_8x8_PATTERN_FILL_RECT,
-		                      FALSE)) {
+                              XAAOPT_MONO_8x8_PATTERN_FILL_RECT, FALSE)) {
 	HaveMono8x8PatternFillRect = TRUE;
 	if(infoRec->SubsequentMono8x8PatternFillTrap &&
 		!xf86ReturnOptValBool(options,
-		                      XAAOPT_MONO_8x8_PATTERN_FILL_TRAP,
-		                      FALSE))
+                                  XAAOPT_MONO_8x8_PATTERN_FILL_TRAP, FALSE))
 		HaveMono8x8PatternFillTrap = TRUE;
 
-        if(infoRec->Mono8x8PatternFillFlags & 
-				HARDWARE_PATTERN_PROGRAMMED_BITS) {
+        if (infoRec->Mono8x8PatternFillFlags & HARDWARE_PATTERN_PROGRAMMED_BITS) {
 	    infoRec->CanDoMono8x8 = TRUE;
-	} else {	/* others require caching */
+        }
+        else {                  /* others require caching */
            int min_pitch;
+
 	   infoRec->PixmapCacheFlags |= CACHE_MONO_8x8;
 
 	   switch(pScrn->bitsPerPixel) {
-	   case 32: min_pitch = 2; break;
-	   case 24: min_pitch = 3; break;
-	   case 16: min_pitch = 4; break;
-	   default: min_pitch = 8; break;
+            case 32:
+                min_pitch = 2;
+                break;
+            case 24:
+                min_pitch = 3;
+                break;
+            case 16:
+                min_pitch = 4;
+                break;
+            default:
+                min_pitch = 8;
+                break;
 	   }
  
            if(min_pitch > infoRec->MonoPatternPitch)
@@ -298,7 +306,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 						infoRec->MonoPatternPitch;
 			infoRec->CacheHeightMono8x8Pattern = 1;
 		}
-	   } else {
+            }
+            else {
 		int numPerLine = 128/infoRec->MonoPatternPitch;
 
 		if(!infoRec->CacheWidthMono8x8Pattern ||
@@ -310,7 +319,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		}
 	   }
 	}
-   } else {
+    }
+    else {
 	infoRec->Mono8x8PatternFillFlags = 0;
 	infoRec->SetupForMono8x8PatternFill = NULL;
 	infoRec->SubsequentMono8x8PatternFillRect = NULL;
@@ -320,8 +330,7 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->SetupForDashedLine && infoRec->DashPatternMaxLength) {
 	if(infoRec->SubsequentDashedTwoPointLine &&
-		!xf86ReturnOptValBool(options, XAAOPT_DASHED_TWO_POINT_LINE,
-		                      FALSE))
+            !xf86ReturnOptValBool(options, XAAOPT_DASHED_TWO_POINT_LINE, FALSE))
 	    HaveDashedTwoPointLine = TRUE;
 	if(infoRec->SubsequentDashedBresenhamLine &&
 		!xf86ReturnOptValBool(options, XAAOPT_DASHED_BRESENHAM_LINE,
@@ -349,7 +358,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
    if(infoRec->SetupForColor8x8PatternFill &&
       infoRec->SubsequentColor8x8PatternFillRect &&
-      !xf86ReturnOptValBool(options, XAAOPT_COL_8x8_PATTERN_FILL_RECT, FALSE)) {
+        !xf86ReturnOptValBool(options, XAAOPT_COL_8x8_PATTERN_FILL_RECT,
+                              FALSE)) {
 	HaveColor8x8PatternFillRect = TRUE;
 	if(infoRec->SubsequentColor8x8PatternFillTrap &&
 	   !xf86ReturnOptValBool(options, XAAOPT_COL_8x8_PATTERN_FILL_TRAP,
@@ -367,14 +377,16 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		infoRec->CacheWidthColor8x8Pattern = 64;
 		infoRec->CacheHeightColor8x8Pattern = 1;
 	    }
-	} else {
+        }
+        else {
 	    if(!infoRec->CacheWidthColor8x8Pattern ||
 	       !infoRec->CacheHeightColor8x8Pattern) {
 		infoRec->CacheWidthColor8x8Pattern = 128;
 		infoRec->CacheHeightColor8x8Pattern = 8;
 	    }
 	}
-   } else {
+    }
+    else {
 	infoRec->Color8x8PatternFillFlags = 0;
 	infoRec->SetupForColor8x8PatternFill = NULL;
 	infoRec->SubsequentColor8x8PatternFillRect = NULL;
@@ -399,7 +411,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	dwordsNeeded = (dwordsNeeded + 31) >> 5;
 	if(dwordsNeeded > infoRec->ColorExpandRange)
 	   infoRec->CPUToScreenColorExpandFillFlags |= CPU_TRANSFER_BASE_FIXED;	
-    } else {
+    }
+    else {
 	infoRec->CPUToScreenColorExpandFillFlags = 0;
 	infoRec->SetupForCPUToScreenColorExpandFill = NULL;
 	infoRec->SubsequentCPUToScreenColorExpandFill = NULL;
@@ -416,7 +429,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
                              XAAOPT_SCANLINE_CPU_TO_SCREEN_COL_EXP_FILL,
                              FALSE)) {
 	HaveScanlineColorExpansion = TRUE;
-    } else {
+    }
+    else {
 	infoRec->ScanlineCPUToScreenColorExpandFillFlags = 0;
 	infoRec->SetupForScanlineCPUToScreenColorExpandFill = NULL;
 	infoRec->SubsequentScanlineCPUToScreenColorExpandFill = NULL;
@@ -432,7 +446,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	HaveScreenToScreenColorExpandFill = TRUE;
 	if (!infoRec->CacheColorExpandDensity)
 	    infoRec->CacheColorExpandDensity = 1;
-    } else {
+    }
+    else {
 	infoRec->ScreenToScreenColorExpandFillFlags = 0;
 	infoRec->SetupForScreenToScreenColorExpandFill = NULL;
 	infoRec->SubsequentScreenToScreenColorExpandFill = NULL;
@@ -448,7 +463,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	if(infoRec->ImageWriteFlags & CPU_TRANSFER_BASE_FIXED)
 	   infoRec->ImageWriteRange = 0;
 	HaveImageWriteRect = TRUE;	
-    } else {
+    }
+    else {
 	infoRec->ImageWriteFlags = 0;
 	infoRec->SetupForImageWrite = NULL;
 	infoRec->SubsequentImageWriteRect = NULL;
@@ -464,7 +480,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
        !xf86ReturnOptValBool(options, XAAOPT_SCANLINE_IMAGE_WRITE_RECT,
                              FALSE)) {
 	HaveScanlineImageWriteRect = TRUE;
-    } else {
+    }
+    else {
 	infoRec->ScanlineImageWriteFlags = 0;
 	infoRec->SetupForScanlineImageWrite = NULL;
 	infoRec->SubsequentScanlineImageWriteRect = NULL;
@@ -475,13 +492,11 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
    /* XAA makes some unaligned accesses when clipping is not available */
 #  define CLIP_FLAGS (LEFT_EDGE_CLIPPING | LEFT_EDGE_CLIPPING_NEGATIVE_X)
    if(HaveImageWriteRect &&
-      ((infoRec->ImageWriteFlags & CLIP_FLAGS) != CLIP_FLAGS))
-   {
+        ((infoRec->ImageWriteFlags & CLIP_FLAGS) != CLIP_FLAGS)) {
         HaveImageWriteRect = FALSE;
    }
    if(HaveScanlineImageWriteRect &&
-      ((infoRec->ScanlineImageWriteFlags & CLIP_FLAGS) != CLIP_FLAGS))
-   {
+        ((infoRec->ScanlineImageWriteFlags & CLIP_FLAGS) != CLIP_FLAGS)) {
         HaveScanlineImageWriteRect = FALSE;
    }
 #endif
@@ -529,22 +544,21 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if((infoRec->Flags & OFFSCREEN_PIXMAPS) && HaveScreenToScreenCopy &&
 		xf86ReturnOptValBool(options,
-				     XAAOPT_HAS_DUMB_INVERTED_OPTION_SENSE,
-				     FALSE))
-    {
+                             XAAOPT_HAS_DUMB_INVERTED_OPTION_SENSE, FALSE)) {
 	XAAMSG("\tOffscreen Pixmaps\n");
-    } else {
+    }
+    else {
 	infoRec->Flags &= ~OFFSCREEN_PIXMAPS;
     }
 
-
     /************** Mid Level *************/
 
     /**** ScreenToScreenBitBlt ****/
 
     if(infoRec->ScreenToScreenBitBlt) {
 	XAAMSG("\tDriver provided ScreenToScreenBitBlt replacement\n");
-    } else if(HaveScreenToScreenCopy) {
+    }
+    else if (HaveScreenToScreenCopy) {
 	infoRec->ScreenToScreenBitBlt = XAAScreenToScreenBitBlt;
 	infoRec->ScreenToScreenBitBltFlags = infoRec->ScreenToScreenCopyFlags;
     }
@@ -553,7 +567,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillSolidRects) {
 	XAAMSG("\tDriver provided FillSolidRects replacement\n");
-    } else if(HaveSolidFillRect) {
+    }
+    else if (HaveSolidFillRect) {
 	infoRec->FillSolidRects = XAAFillSolidRects;
 	infoRec->FillSolidRectsFlags = infoRec->SolidFillFlags;
     }
@@ -562,7 +577,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillSolidSpans) {
 	XAAMSG("\tDriver provided FillSolidSpans replacement\n");
-    } else if(HaveSolidFillRect) {
+    }
+    else if (HaveSolidFillRect) {
 	infoRec->FillSolidSpans = XAAFillSolidSpans;
 	infoRec->FillSolidSpansFlags = infoRec->SolidFillFlags;
     }
@@ -571,11 +587,12 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillMono8x8PatternRects) {
 	XAAMSG("\tDriver provided FillMono8x8PatternRects replacement\n");
-    } else if(HaveMono8x8PatternFillRect) {
+    }
+    else if (HaveMono8x8PatternFillRect) {
 	infoRec->FillMono8x8PatternRects = 
-	  (infoRec->Mono8x8PatternFillFlags & HARDWARE_PATTERN_SCREEN_ORIGIN) ?
-	  XAAFillMono8x8PatternRectsScreenOrigin :
-	  XAAFillMono8x8PatternRects; 
+            (infoRec->
+             Mono8x8PatternFillFlags & HARDWARE_PATTERN_SCREEN_ORIGIN) ?
+            XAAFillMono8x8PatternRectsScreenOrigin : XAAFillMono8x8PatternRects;
 
 	infoRec->FillMono8x8PatternRectsFlags = 
 			infoRec->Mono8x8PatternFillFlags;      
@@ -585,11 +602,12 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillMono8x8PatternSpans) {
 	XAAMSG("\tDriver provided FillMono8x8PatternSpans replacement\n");
-    } else if(HaveMono8x8PatternFillRect) {
+    }
+    else if (HaveMono8x8PatternFillRect) {
 	infoRec->FillMono8x8PatternSpans = 
-	  (infoRec->Mono8x8PatternFillFlags & HARDWARE_PATTERN_SCREEN_ORIGIN) ?
-	  XAAFillMono8x8PatternSpansScreenOrigin:
-	  XAAFillMono8x8PatternSpans; 
+            (infoRec->
+             Mono8x8PatternFillFlags & HARDWARE_PATTERN_SCREEN_ORIGIN) ?
+            XAAFillMono8x8PatternSpansScreenOrigin : XAAFillMono8x8PatternSpans;
 
 	infoRec->FillMono8x8PatternSpansFlags = 
 		infoRec->Mono8x8PatternFillFlags;      
@@ -599,9 +617,11 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillColor8x8PatternRects) {
 	XAAMSG("\tDriver provided FillColor8x8PatternRects replacement\n");
-    } else if(HaveColor8x8PatternFillRect) {
+    }
+    else if (HaveColor8x8PatternFillRect) {
 	infoRec->FillColor8x8PatternRects = 
-	  (infoRec->Color8x8PatternFillFlags & HARDWARE_PATTERN_SCREEN_ORIGIN) ?
+            (infoRec->
+             Color8x8PatternFillFlags & HARDWARE_PATTERN_SCREEN_ORIGIN) ?
 	  XAAFillColor8x8PatternRectsScreenOrigin :
 	  XAAFillColor8x8PatternRects; 
 
@@ -613,9 +633,11 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillColor8x8PatternSpans) {
 	XAAMSG("\tDriver provided FillColor8x8PatternSpans replacement\n");
-    } else if(HaveColor8x8PatternFillRect) {
+    }
+    else if (HaveColor8x8PatternFillRect) {
 	infoRec->FillColor8x8PatternSpans = 
-	  (infoRec->Color8x8PatternFillFlags & HARDWARE_PATTERN_SCREEN_ORIGIN) ?
+            (infoRec->
+             Color8x8PatternFillFlags & HARDWARE_PATTERN_SCREEN_ORIGIN) ?
 	  XAAFillColor8x8PatternSpansScreenOrigin:
 	  XAAFillColor8x8PatternSpans; 
 
@@ -627,7 +649,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillCacheBltRects) {
 	XAAMSG("\tDriver provided FillCacheBltRects replacement\n");
-    } else if(HaveScreenToScreenCopy) {
+    }
+    else if (HaveScreenToScreenCopy) {
 	infoRec->FillCacheBltRects = XAAFillCacheBltRects;
 	infoRec->FillCacheBltRectsFlags = infoRec->ScreenToScreenCopyFlags;     
     }
@@ -636,7 +659,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillCacheBltSpans) {
 	XAAMSG("\tDriver provided FillCacheBltSpans replacement\n");
-    } else if(HaveScreenToScreenCopy) {
+    }
+    else if (HaveScreenToScreenCopy) {
 	infoRec->FillCacheBltSpans = XAAFillCacheBltSpans;
 	infoRec->FillCacheBltSpansFlags = infoRec->ScreenToScreenCopyFlags;     
     }
@@ -645,7 +669,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillCacheExpandRects) {
 	XAAMSG("\tDriver provided FillCacheExpandRects replacement\n");
-    } else if(HaveScreenToScreenColorExpandFill) {
+    }
+    else if (HaveScreenToScreenColorExpandFill) {
 	infoRec->FillCacheExpandRects = XAAFillCacheExpandRects;
 	infoRec->FillCacheExpandRectsFlags = 
 		infoRec->ScreenToScreenColorExpandFillFlags;     
@@ -655,7 +680,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillCacheExpandSpans) {
 	XAAMSG("\tDriver provided FillCacheExpandSpans replacement\n");
-    } else if(HaveScreenToScreenColorExpandFill) {
+    }
+    else if (HaveScreenToScreenColorExpandFill) {
 	infoRec->FillCacheExpandSpans = XAAFillCacheExpandSpans;
 	infoRec->FillCacheExpandSpansFlags = 
 		infoRec->ScreenToScreenColorExpandFillFlags;     
@@ -665,7 +691,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillColorExpandRects) {
 	XAAMSG("\tDriver provided FillColorExpandRects replacement\n");
-    } else if(HaveColorExpansion) {
+    }
+    else if (HaveColorExpansion) {
 	if (infoRec->CPUToScreenColorExpandFillFlags & TRIPLE_BITS_24BPP) {
 	    if(infoRec->CPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST) {
@@ -676,7 +703,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		else
 		    infoRec->FillColorExpandRects = 
 			XAAFillColorExpandRects3MSBFirst;
-	    } else {
+            }
+            else {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
 					CPU_TRANSFER_BASE_FIXED)
 		    infoRec->FillColorExpandRects = 
@@ -685,7 +713,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		    infoRec->FillColorExpandRects = 
 			XAAFillColorExpandRects3LSBFirst;
 	    }
-	} else {
+        }
+        else {
 	    if(infoRec->CPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST) {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
@@ -695,7 +724,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		else
 		    infoRec->FillColorExpandRects = 
 				XAAFillColorExpandRectsMSBFirst;
-	    } else {
+            }
+            else {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
 					CPU_TRANSFER_BASE_FIXED)
 		    infoRec->FillColorExpandRects = 
@@ -707,7 +737,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	}
 	infoRec->FillColorExpandRectsFlags = 
 	    infoRec->CPUToScreenColorExpandFillFlags;
-    } else if(HaveScanlineColorExpansion) {
+    }
+    else if (HaveScanlineColorExpansion) {
 	if (infoRec->ScanlineCPUToScreenColorExpandFillFlags & 
 					TRIPLE_BITS_24BPP) {
 	    if(infoRec->ScanlineCPUToScreenColorExpandFillFlags & 
@@ -717,7 +748,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	    else
 		infoRec->FillColorExpandRects = 
 		    XAAFillScanlineColorExpandRects3LSBFirst;
-	} else {
+        }
+        else {
 	    if(infoRec->ScanlineCPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST)
 		infoRec->FillColorExpandRects = 
@@ -734,7 +766,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillColorExpandSpans) {
 	XAAMSG("\tDriver provided FillColorExpandSpans replacement\n");
-    } else if(HaveColorExpansion) {
+    }
+    else if (HaveColorExpansion) {
 	if (infoRec->CPUToScreenColorExpandFillFlags & TRIPLE_BITS_24BPP) {
 	    if(infoRec->CPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST) {
@@ -745,7 +778,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		else
 		    infoRec->FillColorExpandSpans = 
 			XAAFillColorExpandSpans3MSBFirst;
-	    } else {
+            }
+            else {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
 					CPU_TRANSFER_BASE_FIXED)
 		    infoRec->FillColorExpandSpans = 
@@ -754,7 +788,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		    infoRec->FillColorExpandSpans = 
 			XAAFillColorExpandSpans3LSBFirst;
 	    }
-	} else {
+        }
+        else {
 	    if(infoRec->CPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST) {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
@@ -764,7 +799,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		else
 		    infoRec->FillColorExpandSpans = 
 				XAAFillColorExpandSpansMSBFirst;
-	    } else {
+            }
+            else {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
 					CPU_TRANSFER_BASE_FIXED)
 		    infoRec->FillColorExpandSpans = 
@@ -776,7 +812,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	}
 	infoRec->FillColorExpandSpansFlags = 
 	    infoRec->CPUToScreenColorExpandFillFlags;
-    } else if(HaveScanlineColorExpansion) {
+    }
+    else if (HaveScanlineColorExpansion) {
 	if (infoRec->ScanlineCPUToScreenColorExpandFillFlags & 
 					TRIPLE_BITS_24BPP) {
 	    if(infoRec->ScanlineCPUToScreenColorExpandFillFlags & 
@@ -786,7 +823,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	    else
 		infoRec->FillColorExpandSpans = 
 		    XAAFillScanlineColorExpandSpans3LSBFirst;
-	} else {
+        }
+        else {
 	    if(infoRec->ScanlineCPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST)
 		infoRec->FillColorExpandSpans = 
@@ -803,7 +841,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->FillImageWriteRects) {
 	XAAMSG("\tDriver provided FillImageWriteRects replacement\n");
-    } else if(HaveImageWriteRect && 
+    }
+    else if (HaveImageWriteRect &&
 		(infoRec->ImageWriteFlags & LEFT_EDGE_CLIPPING_NEGATIVE_X) &&
 		(infoRec->ImageWriteFlags & LEFT_EDGE_CLIPPING)) {
 	infoRec->FillImageWriteRects = XAAFillImageWriteRects;
@@ -815,7 +854,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     if(infoRec->WriteBitmap && 
       !xf86ReturnOptValBool(options, XAAOPT_WRITE_BITMAP, FALSE)) {
 	XAAMSG("\tDriver provided WriteBitmap replacement\n");
-    } else if(HaveColorExpansion) {
+    }
+    else if (HaveColorExpansion) {
 	if (infoRec->CPUToScreenColorExpandFillFlags & TRIPLE_BITS_24BPP) {
 	    if(infoRec->CPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST) {
@@ -825,7 +865,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 			XAAWriteBitmapColorExpand3MSBFirstFixedBase;
 		else
 		    infoRec->WriteBitmap = XAAWriteBitmapColorExpand3MSBFirst;
-	    } else {
+            }
+            else {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
 					CPU_TRANSFER_BASE_FIXED)
 		    infoRec->WriteBitmap = 
@@ -833,7 +874,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		else
 		    infoRec->WriteBitmap = XAAWriteBitmapColorExpand3LSBFirst;
 	    }
-	} else {
+        }
+        else {
 	    if(infoRec->CPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST) {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
@@ -842,7 +884,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 			XAAWriteBitmapColorExpandMSBFirstFixedBase;
 		else
 		    infoRec->WriteBitmap = XAAWriteBitmapColorExpandMSBFirst;
-	    } else {
+            }
+            else {
 		if(infoRec->CPUToScreenColorExpandFillFlags & 
 					CPU_TRANSFER_BASE_FIXED)
 		    infoRec->WriteBitmap = 
@@ -852,7 +895,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	    }
 	}
 	infoRec->WriteBitmapFlags = infoRec->CPUToScreenColorExpandFillFlags;
-    } else if(HaveScanlineColorExpansion) {
+    }
+    else if (HaveScanlineColorExpansion) {
 	if (infoRec->ScanlineCPUToScreenColorExpandFillFlags &
 					TRIPLE_BITS_24BPP) {
 	    if(infoRec->ScanlineCPUToScreenColorExpandFillFlags & 
@@ -862,7 +906,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	    else
 		infoRec->WriteBitmap = 
 		    XAAWriteBitmapScanlineColorExpand3LSBFirst;
-	} else {
+        }
+        else {
 	    if(infoRec->ScanlineCPUToScreenColorExpandFillFlags & 
 					BIT_ORDER_IN_BYTE_MSBFIRST)
 		infoRec->WriteBitmap = 
@@ -873,14 +918,16 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	}
 	infoRec->WriteBitmapFlags =
 		infoRec->ScanlineCPUToScreenColorExpandFillFlags;
-    } else
+    }
+    else
 	infoRec->WriteBitmap = NULL;
 
     /**** TE Glyphs ****/
 
     if (infoRec->TEGlyphRenderer) {
 	XAAMSG("\tDriver provided TEGlyphRenderer replacement\n");
-    } else if (HaveColorExpansion) {
+    }
+    else if (HaveColorExpansion) {
 	infoRec->TEGlyphRendererFlags =
 	    infoRec->CPUToScreenColorExpandFillFlags;
 
@@ -891,7 +938,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 			XAATEGlyphRenderer3MSBFirstFixedBase;
 		else
 		    infoRec->TEGlyphRenderer = XAATEGlyphRenderer3MSBFirst;
-	    } else {
+            }
+            else {
 		if (infoRec->TEGlyphRendererFlags & CPU_TRANSFER_BASE_FIXED)
 		    infoRec->TEGlyphRenderer =
 			XAATEGlyphRenderer3LSBFirstFixedBase;
@@ -905,14 +953,16 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		XAAMSG("WARNING:  TEGlyphRenderer cannot support RGB_EQUAL"
 		       " without solid fills\n");
 	    }
-	} else {
+        }
+        else {
 	    if (infoRec->TEGlyphRendererFlags & BIT_ORDER_IN_BYTE_MSBFIRST) {
 		if (infoRec->TEGlyphRendererFlags & CPU_TRANSFER_BASE_FIXED)
 		    infoRec->TEGlyphRenderer =
 			XAATEGlyphRendererMSBFirstFixedBase;
 		else
 		    infoRec->TEGlyphRenderer = XAATEGlyphRendererMSBFirst;
-	    } else {
+            }
+            else {
 		if (infoRec->TEGlyphRendererFlags & CPU_TRANSFER_BASE_FIXED)
 		    infoRec->TEGlyphRenderer =
 			XAATEGlyphRendererLSBFirstFixedBase;
@@ -928,7 +978,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		   " without solid fills\n");
 	}
 
-    } else if (HaveScanlineColorExpansion) {
+    }
+    else if (HaveScanlineColorExpansion) {
 	infoRec->TEGlyphRendererFlags =
 	    infoRec->ScanlineCPUToScreenColorExpandFillFlags;
 
@@ -944,7 +995,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 		XAAMSG("WARNING:  TEGlyphRenderer cannot support RGB_EQUAL"
 		       " without solid fills\n");
 	    }
-	} else {
+        }
+        else {
 	    if (infoRec->TEGlyphRendererFlags & BIT_ORDER_IN_BYTE_MSBFIRST)
 		infoRec->TEGlyphRenderer = XAATEGlyphRendererScanlineMSBFirst;
 	    else
@@ -963,7 +1015,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->NonTEGlyphRenderer) {
 	XAAMSG("\tDriver provided NonTEGlyphRenderer replacement\n");
-    } else if(infoRec->WriteBitmap && 
+    }
+    else if (infoRec->WriteBitmap &&
 	!(infoRec->WriteBitmapFlags & NO_TRANSPARENCY)) {
 	infoRec->NonTEGlyphRenderer = XAANonTEGlyphRenderer;
 	infoRec->NonTEGlyphRendererFlags = infoRec->WriteBitmapFlags;
@@ -974,14 +1027,17 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     if(infoRec->WritePixmap &&
       !xf86ReturnOptValBool(options, XAAOPT_WRITE_PIXMAP, FALSE)) {
 	XAAMSG("\tDriver provided WritePixmap replacement\n");
-    } else if(HaveImageWriteRect) {
+    }
+    else if (HaveImageWriteRect) {
 	infoRec->WritePixmap = XAAWritePixmap;
 	infoRec->WritePixmapFlags = 
 		infoRec->ImageWriteFlags | CONVERT_32BPP_TO_24BPP;
-    } else if(HaveScanlineImageWriteRect) {
+    }
+    else if (HaveScanlineImageWriteRect) {
 	infoRec->WritePixmap = XAAWritePixmapScanline;
 	infoRec->WritePixmapFlags = infoRec->ScanlineImageWriteFlags;
-    } else
+    }
+    else
 	infoRec->WritePixmap = NULL;
 
     /**** ReadPixmap ****/
@@ -990,14 +1046,14 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	XAAMSG("\tDriver provided ReadPixmap replacement\n");
     } 
 
-
     /************** GC Level *************/
 
     /**** CopyArea ****/
 
     if(infoRec->CopyArea) {
 	XAAMSG("\tDriver provided GC level CopyArea replacement\n");
-    } else if(infoRec->ScreenToScreenBitBlt) {
+    }
+    else if (infoRec->ScreenToScreenBitBlt) {
 	infoRec->CopyArea = XAACopyArea;
 	infoRec->CopyAreaFlags = infoRec->ScreenToScreenBitBltFlags;
 
@@ -1015,7 +1071,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->CopyPlane) {
 	XAAMSG("\tDriver provided GC level CopyPlane replacement\n");
-    } else if(infoRec->WriteBitmap && 
+    }
+    else if (infoRec->WriteBitmap &&
 		!(infoRec->WriteBitmapFlags & TRANSPARENCY_ONLY)) {
 	infoRec->CopyPlane = XAACopyPlaneColorExpansion;
 	infoRec->CopyPlaneFlags = infoRec->WriteBitmapFlags;
@@ -1023,7 +1080,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(infoRec->PushPixelsSolid) {
 	XAAMSG("\tDriver provided GC level PushPixelsSolid replacement\n");
-    } else if(infoRec->WriteBitmap &&
+    }
+    else if (infoRec->WriteBitmap &&
 		!(infoRec->WriteBitmapFlags & NO_TRANSPARENCY)) {
 	infoRec->PushPixelsSolid = XAAPushPixelsSolidColorExpansion;
 	infoRec->PushPixelsFlags = infoRec->WriteBitmapFlags;
@@ -1182,24 +1240,26 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     }
 
     if(!infoRec->FillPolygonStippled && (HaveMono8x8PatternFillRect || 	
-	HaveScreenToScreenColorExpandFill || HaveScreenToScreenCopy)) {
+                                          HaveScreenToScreenColorExpandFill ||
+                                          HaveScreenToScreenCopy)) {
 	infoRec->FillPolygonStippled = XAAFillPolygonStippled;
 	infoRec->FillPolygonStippledFlags = infoRec->SolidFillFlags;
     }
 
     if(!infoRec->FillPolygonOpaqueStippled && (HaveMono8x8PatternFillRect || 	
-	HaveScreenToScreenColorExpandFill || HaveScreenToScreenCopy)) {
+                                                HaveScreenToScreenColorExpandFill
+                                                || HaveScreenToScreenCopy)) {
 	infoRec->FillPolygonOpaqueStippled = XAAFillPolygonStippled;
 	infoRec->FillPolygonOpaqueStippledFlags = infoRec->SolidFillFlags;
     }
 
     if(!infoRec->FillPolygonTiled && (HaveMono8x8PatternFillRect || 	
-	HaveScreenToScreenColorExpandFill || HaveScreenToScreenCopy)) {
+                                       HaveScreenToScreenColorExpandFill ||
+                                       HaveScreenToScreenCopy)) {
 	infoRec->FillPolygonTiled = XAAFillPolygonTiled;
 	infoRec->FillPolygonTiledFlags = infoRec->SolidFillFlags;
     }
 
-
     if(!infoRec->PolyFillArcSolid && HaveSolidFillRect) {
 	infoRec->PolyFillArcSolid = XAAPolyFillArcSolid;
 	infoRec->PolyFillArcSolidFlags = infoRec->SolidFillFlags;
@@ -1213,7 +1273,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(!infoRec->PutImage && (infoRec->WritePixmap || 
 	(infoRec->WriteBitmap && 
-			!(infoRec->WriteBitmapFlags & TRANSPARENCY_ONLY)))) {
+                                !(infoRec->
+                                  WriteBitmapFlags & TRANSPARENCY_ONLY)))) {
 	infoRec->PutImage = XAAPutImage;
 
 	/* See comment for CopyArea above.  But here we make fewer 
@@ -1223,7 +1284,9 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 
     if(HaveSolidHorVertLine && 
       (HaveSolidBresenhamLine || (HaveSolidTwoPointLine && 
-		(infoRec->ClippingFlags & HARDWARE_CLIP_SOLID_LINE)))){
+                                    (infoRec->
+                                     ClippingFlags &
+                                     HARDWARE_CLIP_SOLID_LINE)))) {
 	if(!infoRec->PolylinesThinSolid) {
 	   infoRec->PolylinesThinSolid = XAAPolyLines;
 	   infoRec->PolylinesThinSolidFlags = infoRec->SolidLineFlags;
@@ -1235,7 +1298,9 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     }
 
     if(HaveDashedBresenhamLine || (HaveDashedTwoPointLine && 
-		(infoRec->ClippingFlags & HARDWARE_CLIP_DASHED_LINE))){
+                                    (infoRec->
+                                     ClippingFlags &
+                                     HARDWARE_CLIP_DASHED_LINE))) {
 	if(!infoRec->PolylinesThinDashed) {
 	   infoRec->PolylinesThinDashed = XAAPolyLinesDashed;
 	   infoRec->PolylinesThinDashedFlags = infoRec->DashedLineFlags;
@@ -1265,8 +1330,7 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	    infoRec->Composite = XAADoComposite;
 
 	if(!infoRec->Glyphs && infoRec->WriteBitmap &&
-	   !(infoRec->WriteBitmapFlags & NO_TRANSPARENCY)) 
-        {
+            !(infoRec->WriteBitmapFlags & NO_TRANSPARENCY)) {
             infoRec->Glyphs = XAADoGlyphs;
         }	
     }
@@ -1307,7 +1371,6 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	infoRec->ValidatePutImage = XAAValidatePutImage;
     }
 
-
     if(!infoRec->ValidatePushPixels && infoRec->PushPixelsSolid) {
 	infoRec->PushPixelsMask = GCFillStyle;
 	if((infoRec->PushPixelsFlags & GXCOPY_ONLY) ||
@@ -1412,7 +1475,6 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	    infoRec->PolylinesMask |= GCForeground;
     }
 
-
     /**** Fill choosers ****/
 
     if(!infoRec->StippledFillChooser)
@@ -1424,10 +1486,10 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     if(!infoRec->TiledFillChooser)
 	infoRec->TiledFillChooser = XAATiledFillChooser;
 
-
     /**** Setup the pixmap cache ****/
 
-    if(infoRec->WriteBitmapToCache) {}
+    if (infoRec->WriteBitmapToCache) {
+    }
     else if(infoRec->WriteBitmap && 
 	!(infoRec->WriteBitmapFlags & TRANSPARENCY_ONLY))
 	infoRec->WriteBitmapToCache = XAAWriteBitmapToCache;
@@ -1436,7 +1498,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     else
 	infoRec->PixmapCacheFlags |= DO_NOT_BLIT_STIPPLES;
 
-    if(infoRec->WritePixmapToCache) {}
+    if (infoRec->WritePixmapToCache) {
+    }
     else if(infoRec->WritePixmap && !(infoRec->WritePixmapFlags & NO_GXCOPY))
 	infoRec->WritePixmapToCache = XAAWritePixmapToCache;
     else if(infoRec->Flags & LINEAR_FRAMEBUFFER)
@@ -1447,7 +1510,8 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     if (xf86ReturnOptValBool(options, XAAOPT_PIXMAP_CACHE, FALSE))
 	infoRec->Flags &= ~PIXMAP_CACHE;
 
-    if(infoRec->WriteMono8x8PatternToCache) {}
+    if (infoRec->WriteMono8x8PatternToCache) {
+    }
     else if(infoRec->PixmapCacheFlags & CACHE_MONO_8x8) {
 	if(infoRec->WritePixmapToCache)
 	  infoRec->WriteMono8x8PatternToCache = XAAWriteMono8x8PatternToCache;
@@ -1455,10 +1519,12 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
 	   infoRec->PixmapCacheFlags &= ~CACHE_MONO_8x8;
     }
 
-    if(infoRec->WriteColor8x8PatternToCache) {}
+    if (infoRec->WriteColor8x8PatternToCache) {
+    }
     else if(infoRec->PixmapCacheFlags & CACHE_COLOR_8x8) {
 	if(infoRec->WritePixmapToCache && infoRec->WriteBitmapToCache)
-	  infoRec->WriteColor8x8PatternToCache = XAAWriteColor8x8PatternToCache;
+            infoRec->WriteColor8x8PatternToCache =
+                XAAWriteColor8x8PatternToCache;
 	else
 	   infoRec->PixmapCacheFlags &= ~CACHE_COLOR_8x8;
     }
@@ -1466,10 +1532,17 @@ XAAInitAccel(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
     if(infoRec->CachePixelGranularity < 0) {
 	switch(pScrn->bitsPerPixel) {
 	case 24:
-	case 8:  infoRec->CachePixelGranularity = 4;  break;
-	case 16: infoRec->CachePixelGranularity = 2;  break;
-	case 32: infoRec->CachePixelGranularity = 1;  break;
-	default: break;
+        case 8:
+            infoRec->CachePixelGranularity = 4;
+            break;
+        case 16:
+            infoRec->CachePixelGranularity = 2;
+            break;
+        case 32:
+            infoRec->CachePixelGranularity = 1;
+            break;
+        default:
+            break;
 	}
 
 	if(BITMAP_SCANLINE_PAD == 64)
