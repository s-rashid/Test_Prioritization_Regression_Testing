diff --git a/Xi/exevents.c b/Xi/exevents.c
index 6bf9e56..81bdf0a 100644
--- a/Xi/exevents.c
+++ b/Xi/exevents.c
@@ -203,8 +203,6 @@ CopyKeyClass(DeviceIntPtr device, DeviceIntPtr master)
     dk = device->key;
     mk = master->key;
 
-    if (device != dixLookupPrivate(&master->devPrivates,
-                                   CoreDevicePrivateKey)) {
         memcpy(mk->modifierMap, dk->modifierMap, MAP_LENGTH);
 
         if (dk->maxKeysPerModifier)
@@ -245,25 +243,16 @@ CopyKeyClass(DeviceIntPtr device, DeviceIntPtr master)
         for (i = 0; i < 8; i++)
             mk->modifierKeyCount[i] = dk->modifierKeyCount[i];
 
-#ifdef XKB
-        if (!noXkbExtension && dk->xkbInfo && dk->xkbInfo->desc) {
-            if (!mk->xkbInfo || !mk->xkbInfo->desc)
-            {
+    if (dk->xkbInfo && dk->xkbInfo->desc) {
+        if (!mk->xkbInfo || !mk->xkbInfo->desc) {
                 XkbInitDevice(master);
                 XkbFinishDeviceInit(master);
             }
             if (!XkbCopyKeymap(dk->xkbInfo->desc, mk->xkbInfo->desc, True))
                 FatalError("Couldn't pivot keymap from device to core!\n");
         }
-#endif
 
-        dixSetPrivate(&master->devPrivates, CoreDevicePrivateKey, device);
-        sendNotify = TRUE;
-    } else if (lastMapNotifyDevice != master)
-        sendNotify = TRUE;
-
-    if (sendNotify)
-    {
+    if (lastMapNotifyDevice != master) {
         SendMappingNotify(master, MappingKeyboard,
                            mk->curKeySyms.minKeyCode,
                           (mk->curKeySyms.maxKeyCode -
@@ -271,6 +260,13 @@ CopyKeyClass(DeviceIntPtr device, DeviceIntPtr master)
                           serverClient);
         lastMapNotifyDevice = master;
     }
+
+    /* Copy the state here.  This means we'll only have consistency
+     * between state and active keymap, rather than between state and
+     * keycodes pressed, but there's pretty much no way to win here,
+     * so might as well go for the one that would seem to give the
+     * least nonsensical result. */
+    mk->xkbInfo->state = dk->xkbInfo->state;
 }
 
 /**
