diff --git a/hw/xfree86/os-support/linux/lnx_init.c b/hw/xfree86/os-support/linux/lnx_init.c
index 842d9a0..a52073d 100644
--- a/hw/xfree86/os-support/linux/lnx_init.c
+++ b/hw/xfree86/os-support/linux/lnx_init.c
@@ -50,6 +50,8 @@ char *fb_dev_name;
 
 static Bool KeepTty = FALSE;
 static int VTnum = -1;
+static Bool VTSwitch = TRUE;
+static Bool ShareVTs = FALSE;
 static int activeVT = -1;
 
 static int vtPermSave[4];
@@ -125,8 +127,16 @@ xf86OpenConsole(void)
 		    "xf86OpenConsole: Cannot open /dev/tty0 (%s)\n",
 		    strerror(errno));
 
+            if (ShareVTs)
+            {
+                if (ioctl(fd, VT_GETSTATE, &vts) == 0)
+                    xf86Info.vtno = vts.v_active;
+                else
+                    FatalError("xf86OpenConsole: Cannot find the current"
+                               " VT (%s)\n", strerror(errno));
+            } else {
 	    if ((ioctl(fd, VT_OPENQRY, &xf86Info.vtno) < 0) ||
-		(xf86Info.vtno == -1)) {
+		    (xf86Info.vtno == -1))
 		FatalError("xf86OpenConsole: Cannot find a free VT: %s\n",
 			   strerror(errno));
 	    }
@@ -134,6 +144,8 @@ xf86OpenConsole(void)
 	}
 
 #ifdef USE_DEV_FB
+        if (!ShareVTs)
+        {
 	fb_dev_name=getenv("FRAMEBUFFER");
 	if (!fb_dev_name)
 	    fb_dev_name="/dev/fb0current";
@@ -145,6 +157,7 @@ xf86OpenConsole(void)
 	if (ioctl(fbfd, FBIOGET_VSCREENINFO, &var) < 0)
 	    FatalError("xf86OpenConsole: Unable to get screen info %s\n",
 		       strerror(errno));
+        }
 #endif
 	xf86Msg(from, "using VT number %d\n\n", xf86Info.vtno);
 
@@ -180,6 +193,8 @@ xf86OpenConsole(void)
 	    FatalError("xf86OpenConsole: Cannot open virtual console"
 		       " %d (%s)\n", xf86Info.vtno, strerror(errno));
 
+        if (!ShareVTs)
+        {
 	/*
 	 * Grab the vt ownership before we overwrite it.
 	 * Hard coded /dev/tty0 into this function as well for below.
@@ -202,6 +217,7 @@ xf86OpenConsole(void)
 	if (chown("/dev/tty0", getuid(), getgid()) < 0)
 	    xf86Msg(X_WARNING,"xf86OpenConsole: chown /dev/tty0 failed: %s\n",
 		    strerror(errno));
+        }
 
 	/*
 	 * Linux doesn't switch to an active vt after the last close of a vt,
@@ -225,6 +241,8 @@ xf86OpenConsole(void)
 	}
 #endif
 	    
+        if (!ShareVTs)
+        {
 #if defined(DO_OS_FONTRESTORE)
 	lnx_savefont();
 #endif
@@ -268,13 +286,19 @@ xf86OpenConsole(void)
 	    FatalError("Unable to set screen info\n");
 	close(fbfd);
 #endif
+        } else { /* ShareVTs */
+            close(xf86Info.consoleFd);
+        }
     } else { 	/* serverGeneration != 1 */
+        if (!ShareVTs && VTSwitch)
+        {
 	/*
 	 * now get the VT
 	 */
 	if (ioctl(xf86Info.consoleFd, VT_ACTIVATE, xf86Info.vtno) < 0)
 	    xf86Msg(X_WARNING, "xf86OpenConsole: VT_ACTIVATE failed %s\n",
 		    strerror(errno));
+        }
 
 	if (ioctl(xf86Info.consoleFd, VT_WAITACTIVE, xf86Info.vtno) < 0)
 	    xf86Msg(X_WARNING, "xf86OpenConsole: VT_WAITACTIVE failed %s\n",
@@ -290,7 +314,11 @@ xf86CloseConsole()
 #if defined(DO_OS_FONTRESTORE)
     struct vt_stat vts;
     int vtno = -1;
+#endif
+
+    if (ShareVTs) return;
 
+#if defined(DO_OS_FONTRESTORE)
     if (ioctl(xf86Info.consoleFd, VT_GETSTATE, &vts) < 0)
 	xf86Msg(X_WARNING, "xf86CloseConsole: VT_GETSTATE failed: %s\n",
 		strerror(errno));
@@ -314,6 +342,8 @@ xf86CloseConsole()
 		    strerror(errno));
     }
 
+    if (VTSwitch)
+    {
     /*
      * Perform a switch back to the active VT when we were started
      */
@@ -329,6 +359,7 @@ xf86CloseConsole()
 	lnx_restorefont();
     lnx_freefontdata();
 #endif
+    }
     close(xf86Info.consoleFd);	/* make the vt-manager happy */
 
     restoreVtPerms();		/* restore the permissions */
@@ -348,6 +379,16 @@ xf86ProcessArgument(int argc, char *argv[], int i)
 		KeepTty = TRUE;
 		return(1);
 	}
+        if (!strcmp(argv[i], "-novtswitch"))
+        {
+                VTSwitch = FALSE;
+                return(1);
+        }
+        if (!strcmp(argv[i], "-sharevts"))
+        {
+                ShareVTs = TRUE;
+                return(1);
+        }
 	if ((argv[i][0] == 'v') && (argv[i][1] == 't'))
 	{
 		if (sscanf(argv[i], "vt%2d", &VTnum) == 0)
@@ -367,5 +408,7 @@ xf86UseMsg()
 	ErrorF("vtXX                   use the specified VT number\n");
 	ErrorF("-keeptty               ");
 	ErrorF("don't detach controlling tty (for debugging only)\n");
+        ErrorF("-novtswitch            don't immediately switch to new VT\n");
+        ErrorF("-sharevts              share VTs with another X server\n");
 	return;
 }
