diff --git a/dbe/midbe.c b/dbe/midbe.c
index 03e8e2e..954f46e 100644
--- a/dbe/midbe.c
+++ b/dbe/midbe.c
@@ -96,7 +96,7 @@ miDbeGetVisualInfo(ScreenPtr pScreen, XdbeScreenVisualInfo *pScrVisInfo)
     /* Allocate an array of XdbeVisualInfo items. */
     if (!(visInfo = (XdbeVisualInfo *)malloc(count * sizeof(XdbeVisualInfo))))
     {
-        return(FALSE); /* memory alloc failure */
+        return FALSE; /* memory alloc failure */
     }
 
     for (i = 0, k = 0; i < pScreen->numDepths; i++)
@@ -125,7 +125,7 @@ miDbeGetVisualInfo(ScreenPtr pScreen, XdbeScreenVisualInfo *pScrVisInfo)
     pScrVisInfo->count   = count;
     pScrVisInfo->visinfo = visInfo;
 
-    return(TRUE); /* success */
+    return TRUE; /* success */
 
 } /* miDbeGetVisualInfo() */
 
@@ -175,7 +175,7 @@ miDbeAllocBackBufferName(WindowPtr pWin, XID bufId, int swapAction)
                                      pDbeWindowPriv->height,
                                      pWin->drawable.depth, 0)))
         {
-            return(BadAlloc);
+            return BadAlloc;
         }
 
         /* Get a back pixmap. */
@@ -185,7 +185,7 @@ miDbeAllocBackBufferName(WindowPtr pWin, XID bufId, int swapAction)
                                      pWin->drawable.depth, 0)))
         {
             (*pScreen->DestroyPixmap)(pDbeWindowPrivPriv->pFrontBuffer); 
-            return(BadAlloc);
+            return BadAlloc;
         }
 
 	/* Security creation/labeling check. */
@@ -235,12 +235,12 @@ miDbeAllocBackBufferName(WindowPtr pWin, XID bufId, int swapAction)
         if (!AddResource(bufId, dbeDrawableResType,
                          (pointer)pDbeWindowPrivPriv->pBackBuffer))
         {
-            return(BadAlloc);
+            return BadAlloc;
         }
 
     }
 
-    return(Success);
+    return Success;
 
 } /* miDbeAllocBackBufferName() */
 
@@ -409,7 +409,7 @@ miDbeSwapBuffers(ClientPtr client, int *pNumWindows, DbeSwapInfoPtr swapInfo)
 
     FreeScratchGC(pGC);
 
-    return(Success);
+    return Success;
 
 } /* miSwapBuffers() */
 
@@ -571,13 +571,13 @@ miDbePositionWindow(WindowPtr pWin, int x, int y)
      
     if (!(pDbeWindowPriv = DBE_WINDOW_PRIV(pWin)))
     {
-	return(ret);
+	return ret;
     }
 
     if (pDbeWindowPriv->width  == pWin->drawable.width &&
         pDbeWindowPriv->height == pWin->drawable.height)
     {
-	return(ret);
+	return ret;
     }
 
     width  = pWin->drawable.width;
@@ -678,7 +678,7 @@ miDbePositionWindow(WindowPtr pWin, int x, int y)
         }
 
         FreeScratchGC(pGC);
-        return(FALSE);
+        return FALSE;
     }
 
     else
@@ -737,7 +737,7 @@ miDbePositionWindow(WindowPtr pWin, int x, int y)
         FreeScratchGC(pGC);
     }
 
-    return(ret);
+    return ret;
 
 } /* miDbePositionWindow() */
 
@@ -783,7 +783,7 @@ miDbeInit(ScreenPtr pScreen, DbeScreenPrivPtr pDbeScreenPriv)
 {
     if (!dixRegisterPrivateKey(&miDbeWindowPrivPrivKeyRec, PRIVATE_DBE_WINDOW,
 			       sizeof(MiDbeWindowPrivPrivRec)))
-        return(FALSE);
+        return FALSE;
 
     /* Wrap functions. */
     pDbeScreenPriv->PositionWindow = pScreen->PositionWindow;
@@ -798,6 +798,6 @@ miDbeInit(ScreenPtr pScreen, DbeScreenPrivPtr pDbeScreenPriv)
     pDbeScreenPriv->ResetProc             = miDbeResetProc;
     pDbeScreenPriv->WinPrivDelete         = miDbeWinPrivDelete;
 
-    return(TRUE);
+    return TRUE;
 
 } /* miDbeInit() */
