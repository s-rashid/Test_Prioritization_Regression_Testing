diff --git a/hw/xnest/Color.c b/hw/xnest/Color.c
index 2e6de15..b3f0fc4 100644
--- a/hw/xnest/Color.c
+++ b/hw/xnest/Color.c
@@ -52,7 +52,7 @@ xnestCreateColormap(ColormapPtr pCmap)
   pVisual = pCmap->pVisual;
   ncolors = pVisual->ColormapEntries;
 
-  pCmap->devPriv = (pointer)xalloc(sizeof(xnestPrivColormap));
+  pCmap->devPriv = (pointer)malloc(sizeof(xnestPrivColormap));
   
   xnestColormapPriv(pCmap)->colormap = 
     XCreateColormap(xnestDisplay,
@@ -64,7 +64,7 @@ xnestCreateColormap(ColormapPtr pCmap)
   
   switch (pVisual->class) {
   case StaticGray: /* read only */
-    colors = (XColor *)xalloc(ncolors * sizeof(XColor));
+    colors = (XColor *)malloc(ncolors * sizeof(XColor));
     for (i = 0; i < ncolors; i++)
       colors[i].pixel = i;
     XQueryColors(xnestDisplay, xnestColormap(pCmap), colors, ncolors);
@@ -73,11 +73,11 @@ xnestCreateColormap(ColormapPtr pCmap)
       pCmap->red[i].co.local.green = colors[i].red;
       pCmap->red[i].co.local.blue = colors[i].red;
     }
-    xfree(colors);
+    free(colors);
     break;
 
   case StaticColor: /* read only */
-    colors = (XColor *)xalloc(ncolors * sizeof(XColor));
+    colors = (XColor *)malloc(ncolors * sizeof(XColor));
     for (i = 0; i < ncolors; i++)
       colors[i].pixel = i;
     XQueryColors(xnestDisplay, xnestColormap(pCmap), colors, ncolors);
@@ -86,11 +86,11 @@ xnestCreateColormap(ColormapPtr pCmap)
       pCmap->red[i].co.local.green = colors[i].green;
       pCmap->red[i].co.local.blue = colors[i].blue;
     }
-    xfree(colors);
+    free(colors);
     break;
     
   case TrueColor: /* read only */
-    colors = (XColor *)xalloc(ncolors * sizeof(XColor));
+    colors = (XColor *)malloc(ncolors * sizeof(XColor));
     red = green = blue = 0L;
     redInc = lowbit(pVisual->redMask);
     greenInc = lowbit(pVisual->greenMask);
@@ -110,7 +110,7 @@ xnestCreateColormap(ColormapPtr pCmap)
       pCmap->green[i].co.local.green = colors[i].green;
       pCmap->blue[i].co.local.blue = colors[i].blue;
     }
-    xfree(colors);
+    free(colors);
     break;
     
   case GrayScale: /* read and write */
@@ -130,7 +130,7 @@ void
 xnestDestroyColormap(ColormapPtr pCmap)
 {
   XFreeColormap(xnestDisplay, xnestColormap(pCmap));
-  xfree(pCmap->devPriv);
+  free(pCmap->devPriv);
 }
 
 #define SEARCH_PREDICATE \
@@ -194,13 +194,13 @@ xnestSetInstalledColormapWindows(ScreenPtr pScreen)
   xnestInstalledColormapWindows icws;
   int numWindows;
   
-  icws.cmapIDs = (Colormap *)xalloc(pScreen->maxInstalledCmaps *
+  icws.cmapIDs = (Colormap *)malloc(pScreen->maxInstalledCmaps *
 				    sizeof(Colormap));
   icws.numCmapIDs = xnestListInstalledColormaps(pScreen, icws.cmapIDs);
   icws.numWindows = 0;
   WalkTree(pScreen, xnestCountInstalledColormapWindows, (pointer)&icws);
   if (icws.numWindows) {
-    icws.windows = (Window *)xalloc((icws.numWindows + 1) * sizeof(Window));
+    icws.windows = (Window *)malloc((icws.numWindows + 1) * sizeof(Window));
     icws.index = 0;
     WalkTree(pScreen, xnestGetInstalledColormapWindows, (pointer)&icws);
     icws.windows[icws.numWindows] = xnestDefaultWindows[pScreen->myNum];
@@ -211,22 +211,22 @@ xnestSetInstalledColormapWindows(ScreenPtr pScreen)
     numWindows = 0;
   }
   
-  xfree(icws.cmapIDs);
+  free(icws.cmapIDs);
   
   if (!xnestSameInstalledColormapWindows(icws.windows, icws.numWindows)) {
     if (xnestOldInstalledColormapWindows)
-      xfree(xnestOldInstalledColormapWindows);
+      free(xnestOldInstalledColormapWindows);
 
 #ifdef _XSERVER64
     {
       int i;
-      Window64 *windows = (Window64 *)xalloc(numWindows * sizeof(Window64));
+      Window64 *windows = (Window64 *)malloc(numWindows * sizeof(Window64));
 
       for(i = 0; i < numWindows; ++i)
 	  windows[i] = icws.windows[i];
       XSetWMColormapWindows(xnestDisplay, xnestDefaultWindows[pScreen->myNum],
 			    windows, numWindows);
-      xfree(windows);
+      free(windows);
     }
 #else
     XSetWMColormapWindows(xnestDisplay, xnestDefaultWindows[pScreen->myNum],
@@ -264,14 +264,14 @@ xnestSetInstalledColormapWindows(ScreenPtr pScreen)
 #endif /* DUMB_WINDOW_MANAGERS */
   }
   else
-    if (icws.windows) xfree(icws.windows);
+    if (icws.windows) free(icws.windows);
 }
 
 void
 xnestSetScreenSaverColormapWindow(ScreenPtr pScreen)
 {
   if (xnestOldInstalledColormapWindows)
-    xfree(xnestOldInstalledColormapWindows);
+    free(xnestOldInstalledColormapWindows);
   
 #ifdef _XSERVER64
   {
@@ -392,7 +392,7 @@ xnestStoreColors(ColormapPtr pCmap, int nColors, xColorItem *pColors)
 #ifdef _XSERVER64
   {
     int i;
-    XColor *pColors64 = (XColor *)xalloc(nColors * sizeof(XColor) );
+    XColor *pColors64 = (XColor *)malloc(nColors * sizeof(XColor) );
 
     for(i = 0; i < nColors; ++i)
     {
@@ -403,7 +403,7 @@ xnestStoreColors(ColormapPtr pCmap, int nColors, xColorItem *pColors)
       pColors64[i].flags = pColors[i].flags;
     }
     XStoreColors(xnestDisplay, xnestColormap(pCmap), pColors64, nColors);
-    xfree(pColors64);
+    free(pColors64);
   }
 #else
     XStoreColors(xnestDisplay, xnestColormap(pCmap),
