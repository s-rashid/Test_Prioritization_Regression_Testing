diff --git a/mi/miwindow.c b/mi/miwindow.c
index e2af77d..31c0284 100644
--- a/mi/miwindow.c
+++ b/mi/miwindow.c
@@ -245,7 +245,7 @@ miHandleValidateExposures(WindowPtr pWin)
 	    (*WindowExposures)(pChild, &val->after.exposed, NullRegion);
 	    REGION_UNINIT(pScreen, &val->after.exposed);
 	    xfree(val);
-	    pChild->valdata = (ValidatePtr)NULL;
+	    pChild->valdata = NULL;
 	    if (pChild->firstChild)
 	    {
 		pChild = pChild->firstChild;
@@ -305,10 +305,10 @@ miMoveWindow(WindowPtr pWin, int x, int y, WindowPtr pNextSib, VTKind kind)
     {
 	if (pLayerWin == pWin)
 	    anyMarked |= (*pScreen->MarkOverlappedWindows)
-				(pWin, windowToValidate, (WindowPtr *)NULL);
+				(pWin, windowToValidate, NULL);
 	else
 	    anyMarked |= (*pScreen->MarkOverlappedWindows)
-				(pWin, pLayerWin, (WindowPtr *)NULL);
+				(pWin, pLayerWin, NULL);
 
 
 	if (anyMarked)
@@ -500,10 +500,10 @@ miSlideAndSizeWindow(WindowPtr pWin,
 
 	if (pLayerWin == pWin)
 	    anyMarked |= (*pScreen->MarkOverlappedWindows)(pWin, pFirstChange,
-						(WindowPtr *)NULL);
+						NULL);
 	else
 	    anyMarked |= (*pScreen->MarkOverlappedWindows)(pWin, pLayerWin,
-						(WindowPtr *)NULL);
+						NULL);
 
 	if (pWin->valdata)
 	{
@@ -729,7 +729,7 @@ miSetShape(WindowPtr pWin)
     if (WasViewable)
     {
 	anyMarked |= (*pScreen->MarkOverlappedWindows)(pWin, pWin,
-						(WindowPtr *)NULL);
+						NULL);
 
 
 	if (anyMarked)
