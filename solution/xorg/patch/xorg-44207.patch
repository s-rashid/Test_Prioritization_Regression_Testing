diff --git a/hw/xfree86/parser/Flags.c b/hw/xfree86/parser/Flags.c
index 0a9724c..b4e8d25 100644
--- a/hw/xfree86/parser/Flags.c
+++ b/hw/xfree86/parser/Flags.c
@@ -144,7 +144,7 @@ xf86parseFlagsSection (void)
 							} else {
 								if (tokentype != NUMBER)
 									Error (NUMBER_MSG, tmp);
-								valstr = xf86confmalloc(16);
+								valstr = malloc(16);
 								if (valstr)
 									sprintf(valstr, "%d", val.num);
 							}
@@ -201,11 +201,11 @@ addNewOption2 (XF86OptionPtr head, char *name, char *val, int used)
 	/* Don't allow duplicates, free old strings */
 	if (head != NULL && (old = xf86findOption(head, name)) != NULL) {
 		new = old;
-		xf86conffree(new->opt_name);
-		xf86conffree(new->opt_val);
+		free(new->opt_name);
+		free(new->opt_val);
 	}
 	else
-		new = xf86confcalloc (1, sizeof (XF86OptionRec));
+		new = calloc (1, sizeof (XF86OptionRec));
 	new->opt_name = name;
 	new->opt_val = val;
 	new->opt_used = used;
@@ -228,7 +228,7 @@ xf86freeFlags (XF86ConfFlagsPtr flags)
 		return;
 	xf86optionListFree (flags->flg_option_lst);
 	TestFree(flags->flg_comment);
-	xf86conffree (flags);
+	free (flags);
 }
 
 XF86OptionPtr
@@ -260,7 +260,7 @@ xf86optionListFree (XF86OptionPtr opt)
 		TestFree (opt->opt_comment);
 		prev = opt;
 		opt = opt->list.next;
-		xf86conffree (prev);
+		free (prev);
 	}
 }
 
@@ -285,7 +285,7 @@ xf86newOption(char *name, char *value)
 {
 	XF86OptionPtr opt;
 
-	opt = xf86confcalloc(1, sizeof (XF86OptionRec));
+	opt = calloc(1, sizeof (XF86OptionRec));
 	if (!opt)
 		return NULL;
 
@@ -365,10 +365,10 @@ xf86optionListCreate( const char **options, int count, int used )
 	for (i = 0; i < count; i += 2)
 	{
 		/* can't use strdup because it calls malloc */
-		t1 = xf86confmalloc (sizeof (char) *
+		t1 = malloc (sizeof (char) *
 				(strlen (options[i]) + 1));
 		strcpy (t1, options[i]);
-		t2 = xf86confmalloc (sizeof (char) *
+		t2 = malloc (sizeof (char) *
 				(strlen (options[i + 1]) + 1));
 		strcpy (t2, options[i + 1]);
 		p = addNewOption2 (p, t1, t2, used);
@@ -434,7 +434,7 @@ xf86uLongToString(unsigned long i)
 	int l;
 
 	l = (int)(ceil(log10((double)i) + 2.5));
-	s = xf86confmalloc(l);
+	s = malloc(l);
 	if (!s)
 		return NULL;
 	sprintf(s, "%lu", i);
@@ -451,7 +451,7 @@ xf86parseOption(XF86OptionPtr head)
 	if ((token = xf86getSubToken(&comment)) != STRING) {
 		xf86parseError(BAD_OPTION_MSG, NULL);
 		if (comment)
-			xf86conffree(comment);
+			free(comment);
 		return (head);
 	}
 
@@ -478,10 +478,10 @@ xf86parseOption(XF86OptionPtr head)
 	/* Don't allow duplicates */
 	if (head != NULL && (old = xf86findOption(head, name)) != NULL) {
 		cnew = old;
-		xf86conffree(option->opt_name);
+		free(option->opt_name);
 		TestFree(option->opt_val);
 		TestFree(option->opt_comment);
-		xf86conffree(option);
+		free(option);
 	}
 	else
 		cnew = option;
