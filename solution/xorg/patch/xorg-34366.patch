diff --git a/Xi/extinit.c b/Xi/extinit.c
index bf5ebd2..2ffdafb 100644
--- a/Xi/extinit.c
+++ b/Xi/extinit.c
@@ -959,119 +959,4 @@ XInputExtensionInit(void)
     } else {
 	FatalError("IExtensionInit: AddExtensions failed\n");
     }
-
-    RegisterRequestName(IReqCode, X_GetExtensionVersion,
-			INAME ":GetExtensionVersion");
-    RegisterRequestName(IReqCode, X_ListInputDevices,
-			INAME ":ListInputDevices");
-    RegisterRequestName(IReqCode, X_OpenDevice,
-			INAME ":OpenDevice");
-    RegisterRequestName(IReqCode, X_CloseDevice,
-			INAME ":CloseDevice");
-    RegisterRequestName(IReqCode, X_SetDeviceMode,
-			INAME ":SetDeviceMode");
-    RegisterRequestName(IReqCode, X_SelectExtensionEvent,
-			INAME ":SelectExtensionEvent");
-    RegisterRequestName(IReqCode, X_GetSelectedExtensionEvents,
-			INAME ":GetSelectedExtensionEvents");
-    RegisterRequestName(IReqCode, X_ChangeDeviceDontPropagateList,
-			INAME ":ChangeDeviceDontPropagateList");
-    RegisterRequestName(IReqCode, X_GetDeviceDontPropagateList,
-			INAME ":GetDeviceDontPropagageList");
-    RegisterRequestName(IReqCode, X_GetDeviceMotionEvents,
-			INAME ":GetDeviceMotionEvents");
-    RegisterRequestName(IReqCode, X_ChangeKeyboardDevice,
-			INAME ":ChangeKeyboardDevice");
-    RegisterRequestName(IReqCode, X_ChangePointerDevice,
-			INAME ":ChangePointerDevice");
-    RegisterRequestName(IReqCode, X_GrabDevice,
-			INAME ":GrabDevice");
-    RegisterRequestName(IReqCode, X_UngrabDevice,
-			INAME ":UngrabDevice");
-    RegisterRequestName(IReqCode, X_GrabDeviceKey,
-			INAME ":GrabDeviceKey");
-    RegisterRequestName(IReqCode, X_UngrabDeviceKey,
-			INAME ":UngrabDeviceKey");
-    RegisterRequestName(IReqCode, X_GrabDeviceButton,
-			INAME ":GrabDeviceButton");
-    RegisterRequestName(IReqCode, X_UngrabDeviceButton,
-			INAME ":UngrabDeviceButton");
-    RegisterRequestName(IReqCode, X_AllowDeviceEvents,
-			INAME ":AllowDeviceEvents");
-    RegisterRequestName(IReqCode, X_GetDeviceFocus,
-			INAME ":GetDeviceFocus");
-    RegisterRequestName(IReqCode, X_SetDeviceFocus,
-			INAME ":SetDeviceFocus");
-    RegisterRequestName(IReqCode, X_GetFeedbackControl,
-			INAME ":GetFeedbackControl");
-    RegisterRequestName(IReqCode, X_ChangeFeedbackControl,
-			INAME ":ChangeFeedbackControl");
-    RegisterRequestName(IReqCode, X_GetDeviceKeyMapping,
-			INAME ":GetDeviceKeyMapping");
-    RegisterRequestName(IReqCode, X_ChangeDeviceKeyMapping,
-			INAME ":ChangeDeviceKeyMapping");
-    RegisterRequestName(IReqCode, X_GetDeviceModifierMapping,
-			INAME ":GetDeviceModifierMapping");
-    RegisterRequestName(IReqCode, X_SetDeviceModifierMapping,
-			INAME ":SetDeviceModifierMapping");
-    RegisterRequestName(IReqCode, X_GetDeviceButtonMapping,
-			INAME ":GetDeviceButtonMapping");
-    RegisterRequestName(IReqCode, X_SetDeviceButtonMapping,
-			INAME ":SetDeviceButtonMapping");
-    RegisterRequestName(IReqCode, X_QueryDeviceState,
-			INAME ":QueryDeviceState");
-    RegisterRequestName(IReqCode, X_SendExtensionEvent,
-			INAME ":SendExtensionEvent");
-    RegisterRequestName(IReqCode, X_DeviceBell,
-			INAME ":DeviceBell");
-    RegisterRequestName(IReqCode, X_SetDeviceValuators,
-			INAME ":SetDeviceValuators");
-    RegisterRequestName(IReqCode, X_GetDeviceControl,
-			INAME ":GetDeviceControl");
-    RegisterRequestName(IReqCode, X_ChangeDeviceControl,
-			INAME ":ChangeDeviceControl");
-
-    RegisterEventName(extEntry->eventBase + XI_DeviceValuator,
-		      INAME ":DeviceValuator");
-    RegisterEventName(extEntry->eventBase + XI_DeviceKeyPress,
-		      INAME ":DeviceKeyPress");
-    RegisterEventName(extEntry->eventBase + XI_DeviceKeyRelease,
-		      INAME ":DeviceKeyRelease");
-    RegisterEventName(extEntry->eventBase + XI_DeviceButtonPress,
-		      INAME ":DeviceButtonPress");
-    RegisterEventName(extEntry->eventBase + XI_DeviceButtonRelease,
-		      INAME ":DeviceButtonRelease");
-    RegisterEventName(extEntry->eventBase + XI_DeviceMotionNotify,
-		      INAME ":DeviceMotionNotify");
-    RegisterEventName(extEntry->eventBase + XI_DeviceFocusIn,
-		      INAME ":DeviceFocusIn");
-    RegisterEventName(extEntry->eventBase + XI_DeviceFocusOut,
-		      INAME ":DeviceFocusOut");
-    RegisterEventName(extEntry->eventBase + XI_ProximityIn,
-		      INAME ":ProximityIn");
-    RegisterEventName(extEntry->eventBase + XI_ProximityOut,
-		      INAME ":ProximityOut");
-    RegisterEventName(extEntry->eventBase + XI_DeviceStateNotify,
-		      INAME ":DeviceStateNotify");
-    RegisterEventName(extEntry->eventBase + XI_DeviceMappingNotify,
-		      INAME ":DeviceMappingNotify");
-    RegisterEventName(extEntry->eventBase + XI_ChangeDeviceNotify,
-		      INAME ":ChangeDeviceNotify");
-    RegisterEventName(extEntry->eventBase + XI_DeviceKeystateNotify,
-		      INAME ":DeviceKeystateNotify");
-    RegisterEventName(extEntry->eventBase + XI_DeviceButtonstateNotify,
-		      INAME ":DeviceButtonstateNotify");
-    RegisterEventName(extEntry->eventBase + XI_DevicePresenceNotify,
-		      INAME ":DevicePresenceNotify");
-
-    RegisterErrorName(extEntry->errorBase + XI_BadDevice,
-		      INAME ":BadDevice");
-    RegisterErrorName(extEntry->errorBase + XI_BadEvent,
-		      INAME ":BadEvent");
-    RegisterErrorName(extEntry->errorBase + XI_BadMode,
-		      INAME ":BadMode");
-    RegisterErrorName(extEntry->errorBase + XI_DeviceBusy,
-		      INAME ":DeviceBusy");
-    RegisterErrorName(extEntry->errorBase + XI_BadClass,
-		      INAME ":BadClass");
 }
