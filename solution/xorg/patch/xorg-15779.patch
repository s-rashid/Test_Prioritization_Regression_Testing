diff --git a/hw/xfree86/os-support/solaris/sun_kbdEv.c b/hw/xfree86/os-support/solaris/sun_kbdEv.c
index 620b18d..13fe902 100644
--- a/hw/xfree86/os-support/solaris/sun_kbdEv.c
+++ b/hw/xfree86/os-support/solaris/sun_kbdEv.c
@@ -32,6 +32,7 @@
 #include "xf86.h"
 #include "xf86Priv.h"
 #include "xf86_OSlib.h"
+#include "sun_kbd.h"
 
 #ifdef XINPUT
 #include <X11/extensions/XI.h>
@@ -45,12 +46,9 @@
 #include "dgaproc.h"
 #endif
 
-#include <sys/vuid_event.h>
 #include <sys/kbd.h>
 #include "atKeynames.h"
 
-extern int sun_ktype;
-
 #ifdef XKB
 extern Bool noXkbExtension;
 #endif
@@ -629,6 +627,18 @@ static unsigned char usbmap[256] = {
 };
 
 #endif /* KB_USB */
+
+_X_HIDDEN const unsigned char *
+sunGetKbdMapping(int ktype) {
+#if defined(KB_USB)
+    if (ktype == KB_USB)
+        return usbmap;
+    else
+#endif
+        return map;
+}
+
+
 /*
  * sunPostKbdEvent --
  *	Translate the raw hardware Firm_event into an XEvent, and tell DIX
@@ -638,8 +648,8 @@ static unsigned char usbmap[256] = {
  * interests of simplicity - DWH 8/30/99
  */
 
-static void
-sunPostKbdEvent(Firm_event *event)
+_X_HIDDEN void
+sunPostKbdEvent(int sun_ktype, Firm_event *event)
 {
     Bool        down;
     KeyClassRec *keyc = ((DeviceIntPtr)xf86Info.pKeyboard)->key;
@@ -873,25 +883,7 @@ sunPostKbdEvent(Firm_event *event)
     ENQUEUE(&kevent, keycode, (down ? KeyPress : KeyRelease), XE_KEYBOARD);
 }
 
-/*
- * Lets try reading more than one keyboard event at a time in the hopes that
- * this will be slightly more efficient.  Or we could just try the MicroSoft
- * method, and forget about efficiency. :-)
- */
-void
-xf86KbdEvents()
-{
-    Firm_event event[64];
-    int        nBytes, i;
 
-    /* I certainly hope its not possible to read partial events */
-
-    if ((nBytes = read(xf86Info.kbdFd, (char *)event, sizeof(event))) > 0)
-    {
-	for (i = 0; i < (nBytes / sizeof(Firm_event)); i++)
-	    sunPostKbdEvent(&event[i]);
-    }
-}
 
 /*
  * Autorepeat stuff
