diff --git a/randr/rroutput.c b/randr/rroutput.c
index 07dabad..3d4c163 100644
--- a/randr/rroutput.c
+++ b/randr/rroutput.c
@@ -30,7 +30,7 @@ RESTYPE	RROutputType;
 
 RROutputPtr
 RROutputCreate (ScreenPtr   pScreen,
-		char	    *name,
+		const char  *name,
 		int	    nameLength,
 		void	    *devPrivate)
 {
@@ -89,9 +89,14 @@ RROutputSetClones (RROutputPtr  output,
 {
     RROutputPtr	*newClones;
 
+    if (numClones)
+    {
     newClones = xalloc (numClones * sizeof (RROutputPtr));
     if (!newClones)
 	return FALSE;
+    }
+    else
+	newClones = NULL;
     if (output->clones)
 	xfree (output->clones);
     memcpy (newClones, clones, numClones * sizeof (RROutputPtr));
@@ -108,9 +113,14 @@ RROutputSetModes (RROutputPtr	output,
 {
     RRModePtr	*newModes;
 
+    if (numModes)
+    {
     newModes = xalloc (numModes * sizeof (RRModePtr));
     if (!newModes)
 	return FALSE;
+    }
+    else
+	newModes = NULL;
     if (output->modes)
 	xfree (output->modes);
     memcpy (newModes, modes, numModes * sizeof (RRModePtr));
@@ -127,9 +137,14 @@ RROutputSetCrtcs (RROutputPtr	output,
 {
     RRCrtcPtr	*newCrtcs;
 
+    if (numCrtcs)
+    {
     newCrtcs = xalloc (numCrtcs * sizeof (RRCrtcPtr));
     if (!newCrtcs)
 	return FALSE;
+    }
+    else
+	newCrtcs = NULL;
     if (output->crtcs)
 	xfree (output->crtcs);
     memcpy (newCrtcs, crtcs, numCrtcs * sizeof (RRCrtcPtr));
@@ -265,9 +280,14 @@ ProcRRGetOutputInfo (ClientPtr client)
 		  ((rep.nameLength + 3) >> 2));
 
     extraLen = rep.length << 2;
+    if (extraLen)
+    {
     extra = xalloc (extraLen);
     if (!extra)
 	return BadAlloc;
+    }
+    else
+	extra = NULL;
 
     crtcs = (RRCrtc *) extra;
     modes = (RRMode *) (crtcs + output->numCrtcs);
