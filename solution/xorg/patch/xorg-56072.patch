diff --git a/randr/randr.c b/randr/randr.c
index d337129..9f3df5f 100644
--- a/randr/randr.c
+++ b/randr/randr.c
@@ -59,25 +59,23 @@ DevPrivateKeyRec RRClientPrivateKeyRec;
 DevPrivateKeyRec rrPrivKeyRec;
 
 static void
-RRClientCallback (CallbackListPtr	*list,
-		  pointer		closure,
-		  pointer		data)
+RRClientCallback(CallbackListPtr *list, pointer closure, pointer data)
 {
     NewClientInfoRec	*clientinfo = (NewClientInfoRec *) data;
     ClientPtr		pClient = clientinfo->client;
+
     rrClientPriv(pClient);
     RRTimesPtr		pTimes = (RRTimesPtr) (pRRClient + 1);
     int			i;
 
     pRRClient->major_version = 0;
     pRRClient->minor_version = 0;
-    for (i = 0; i < screenInfo.numScreens; i++)
-    {
+    for (i = 0; i < screenInfo.numScreens; i++) {
 	ScreenPtr   pScreen = screenInfo.screens[i];
+
 	rrScrPriv(pScreen);
 
-	if (pScrPriv)
-	{
+        if (pScrPriv) {
 	    pTimes[i].setTime = pScrPriv->lastSetTime;
 	    pTimes[i].configTime = pScrPriv->lastConfigTime;
 	}
@@ -178,8 +176,7 @@ SRROutputPropertyNotifyEvent(xRROutputPropertyNotifyEvent *from,
 }
 
 static void
-SRRNotifyEvent (xEvent *from,
-		xEvent *to)
+SRRNotifyEvent(xEvent *from, xEvent *to)
 {
     switch (from->u.u.detail) {
     case RRNotify_CrtcChange:
@@ -201,10 +198,10 @@ SRRNotifyEvent (xEvent *from,
 
 static int RRGeneration;
 
-Bool RRInit (void)
-{
-    if (RRGeneration != serverGeneration)
+Bool
+RRInit(void)
     {
+    if (RRGeneration != serverGeneration) {
 	if (!RRModeInit ())
 	    return FALSE;
 	if (!RRCrtcInit ())
@@ -219,7 +216,8 @@ Bool RRInit (void)
     return TRUE;
 }
 
-Bool RRScreenInit(ScreenPtr pScreen)
+Bool
+RRScreenInit(ScreenPtr pScreen)
 {
     rrScrPrivPtr   pScrPriv;
 
@@ -281,8 +279,7 @@ Bool RRScreenInit(ScreenPtr pScreen)
     return TRUE;
 }
 
-/*ARGSUSED*/
-static int
+ /*ARGSUSED*/ static int
 RRFreeClient (pointer data, XID id)
 {
     RREventPtr   pRREvent;
@@ -297,8 +294,7 @@ RRFreeClient (pointer data, XID id)
 	pPrev = 0;
 	for (pCur = *pHead; pCur && pCur != pRREvent; pCur=pCur->next)
 	    pPrev = pCur;
-	if (pCur)
-	{
+        if (pCur) {
 	    if (pPrev)
 	    	pPrev->next = pRREvent->next;
 	    else
@@ -309,8 +305,7 @@ RRFreeClient (pointer data, XID id)
     return 1;
 }
 
-/*ARGSUSED*/
-static int
+ /*ARGSUSED*/ static int
 RRFreeEvents (pointer data, XID id)
 {
     RREventPtr   *pHead, pCur, pNext;
@@ -330,7 +325,8 @@ RRExtensionInit (void)
 {
     ExtensionEntry *extEntry;
 
-    if (RRNScreens == 0) return;
+    if (RRNScreens == 0)
+        return;
 
     if (!dixRegisterPrivateKey(&RRClientPrivateKeyRec, PRIVATE_CLIENT,
 			       sizeof (RRClientRec) +
@@ -372,6 +368,7 @@ TellChanged (WindowPtr pWin, pointer value)
     RREventPtr			*pHead, pRREvent;
     ClientPtr			client;
     ScreenPtr			pScreen = pWin->drawable.pScreen;
+
     rrScrPriv(pScreen);
     int				i;
 
@@ -380,8 +377,7 @@ TellChanged (WindowPtr pWin, pointer value)
     if (!pHead)
 	return WT_WALKCHILDREN;
 
-    for (pRREvent = *pHead; pRREvent; pRREvent = pRREvent->next) 
-    {
+    for (pRREvent = *pHead; pRREvent; pRREvent = pRREvent->next) {
 	client = pRREvent->client;
 	if (client == serverClient || client->clientGone)
 	    continue;
@@ -389,21 +385,19 @@ TellChanged (WindowPtr pWin, pointer value)
 	if (pRREvent->mask & RRScreenChangeNotifyMask)
 	    RRDeliverScreenEvent (client, pWin, pScreen);
 	
-	if (pRREvent->mask & RRCrtcChangeNotifyMask)
-	{
-	    for (i = 0; i < pScrPriv->numCrtcs; i++)
-	    {
+        if (pRREvent->mask & RRCrtcChangeNotifyMask) {
+            for (i = 0; i < pScrPriv->numCrtcs; i++) {
 		RRCrtcPtr   crtc = pScrPriv->crtcs[i];
+
 		if (crtc->changed)
 		    RRDeliverCrtcEvent (client, pWin, crtc);
 	    }
 	}
 	
-	if (pRREvent->mask & RROutputChangeNotifyMask)
-	{
-	    for (i = 0; i < pScrPriv->numOutputs; i++)
-	    {
+        if (pRREvent->mask & RROutputChangeNotifyMask) {
+            for (i = 0; i < pScrPriv->numOutputs; i++) {
 		RROutputPtr   output = pScrPriv->outputs[i];
+
 		if (output->changed)
 		    RRDeliverOutputEvent (client, pWin, output);
 	    }
@@ -421,11 +415,9 @@ RRTellChanged (ScreenPtr pScreen)
     rrScrPriv (pScreen);
     int i;
     
-    if (pScrPriv->changed)
-    {
+    if (pScrPriv->changed) {
 	UpdateCurrentTime ();
-	if (pScrPriv->configChanged)
-	{
+        if (pScrPriv->configChanged) {
 	    pScrPriv->lastConfigTime = currentTime;
 	    pScrPriv->configChanged = FALSE;
 	}
@@ -435,8 +427,7 @@ RRTellChanged (ScreenPtr pScreen)
 	    pScrPriv->outputs[i]->changed = FALSE;
 	for (i = 0; i < pScrPriv->numCrtcs; i++)
 	    pScrPriv->crtcs[i]->changed = FALSE;
-	if (pScrPriv->layoutChanged)
-	{
+        if (pScrPriv->layoutChanged) {
 	    pScrPriv->layoutChanged = FALSE;
 	    RRPointerScreenConfigured (pScreen);
 	    RRSendConfigNotify (pScreen);
@@ -458,11 +449,10 @@ RRFirstOutput (ScreenPtr pScreen)
     if (pScrPriv->primaryOutput && pScrPriv->primaryOutput->crtc)
 	return pScrPriv->primaryOutput;
 
-    for (i = 0; i < pScrPriv->numCrtcs; i++)
-    {
+    for (i = 0; i < pScrPriv->numCrtcs; i++) {
 	RRCrtcPtr   crtc = pScrPriv->crtcs[i];
-	for (j = 0; j < pScrPriv->numOutputs; j++)
-	{
+
+        for (j = 0; j < pScrPriv->numOutputs; j++) {
 	    output = pScrPriv->outputs[j];
 	    if (output->crtc == crtc)
 		return output;
@@ -476,6 +466,7 @@ RRVerticalRefresh (xRRModeInfo *mode)
 {
     CARD32  refresh;
     CARD32  dots = mode->hTotal * mode->vTotal;
+
     if (!dots)
 	return 0;
     refresh = (mode->dotClock + dots/2) / dots;
@@ -501,4 +492,3 @@ SProcRRDispatch (ClientPtr client)
 	return BadRequest;
     return (*SProcRandrVector[stuff->data]) (client);
 }
-
