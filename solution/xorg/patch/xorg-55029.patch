diff --git a/Xi/xipassivegrab.c b/Xi/xipassivegrab.c
index c80da80..f8ff8d8 100644
--- a/Xi/xipassivegrab.c
+++ b/Xi/xipassivegrab.c
@@ -65,8 +65,7 @@ SProcXIPassiveGrabDevice(ClientPtr client)
 
     mods = (xXIModifierInfo*)&stuff[1];
 
-    for (i = 0; i < stuff->num_modifiers; i++, mods++)
-    {
+    for (i = 0; i < stuff->num_modifiers; i++, mods++) {
         swapl(&mods->base_mods);
         swapl(&mods->latched_mods);
         swapl(&mods->locked_mods);
@@ -95,11 +94,9 @@ ProcXIPassiveGrabDevice(ClientPtr client)
         dev = inputInfo.all_devices;
     else if (stuff->deviceid == XIAllMasterDevices)
         dev = inputInfo.all_master_devices;
-    else
-    {
+    else {
         ret = dixLookupDevice(&dev, stuff->deviceid, client, DixGrabAccess);
-        if (ret != Success)
-        {
+        if (ret != Success) {
             client->errorValue = stuff->deviceid;
             return ret;
         }
@@ -109,24 +106,21 @@ ProcXIPassiveGrabDevice(ClientPtr client)
         stuff->grab_type != XIGrabtypeKeycode &&
         stuff->grab_type != XIGrabtypeEnter &&
         stuff->grab_type != XIGrabtypeFocusIn &&
-        stuff->grab_type != XIGrabtypeTouchBegin)
-    {
+        stuff->grab_type != XIGrabtypeTouchBegin) {
         client->errorValue = stuff->grab_type;
         return BadValue;
     }
 
     if ((stuff->grab_type == XIGrabtypeEnter ||
          stuff->grab_type == XIGrabtypeFocusIn ||
-         stuff->grab_type == XIGrabtypeTouchBegin) && stuff->detail != 0)
-    {
+         stuff->grab_type == XIGrabtypeTouchBegin) && stuff->detail != 0) {
         client->errorValue = stuff->detail;
         return BadValue;
     }
 
     if (stuff->grab_type == XIGrabtypeTouchBegin &&
         (stuff->grab_mode != XIGrabModeTouch ||
-         stuff->paired_device_mode != GrabModeAsync))
-    {
+         stuff->paired_device_mode != GrabModeAsync)) {
         client->errorValue = stuff->grab_mode;
         return BadValue;
     }
@@ -140,7 +134,8 @@ ProcXIPassiveGrabDevice(ClientPtr client)
         return BadAlloc;
 
     mask_len = min(xi2mask_mask_size(mask.xi2mask), stuff->mask_len * 4);
-    xi2mask_set_one_mask(mask.xi2mask, stuff->deviceid, (unsigned char*)&stuff[1], mask_len * 4);
+    xi2mask_set_one_mask(mask.xi2mask, stuff->deviceid,
+                         (unsigned char *) &stuff[1], mask_len * 4);
 
     rep.repType = X_Reply;
     rep.RepType = X_XIPassiveGrabDevice;
@@ -157,23 +152,24 @@ ProcXIPassiveGrabDevice(ClientPtr client)
     if (IsKeyboardDevice(dev)) {
         param.this_device_mode = stuff->grab_mode;
         param.other_devices_mode = stuff->paired_device_mode;
-    } else {
+    }
+    else {
         param.this_device_mode = stuff->paired_device_mode;
         param.other_devices_mode = stuff->grab_mode;
     }
 
-    if (stuff->cursor != None)
-    {
+    if (stuff->cursor != None) {
         ret = dixLookupResourceByType(&tmp, stuff->cursor,
                                       RT_CURSOR, client, DixUseAccess);
-        if (ret != Success)
-        {
+        if (ret != Success) {
             client->errorValue = stuff->cursor;
             goto out;
         }
     }
 
-    ret = dixLookupWindow((WindowPtr*)&tmp, stuff->grab_window, client, DixSetAttrAccess);
+    ret =
+        dixLookupWindow((WindowPtr *) &tmp, stuff->grab_window, client,
+                        DixSetAttrAccess);
     if (ret != Success)
         goto out;
 
@@ -182,7 +178,8 @@ ProcXIPassiveGrabDevice(ClientPtr client)
         goto out;
 
     modifiers = (uint32_t*)&stuff[1] + stuff->mask_len;
-    modifiers_failed = calloc(stuff->num_modifiers, sizeof(xXIGrabModifierInfo));
+    modifiers_failed =
+        calloc(stuff->num_modifiers, sizeof(xXIGrabModifierInfo));
     if (!modifiers_failed) {
         ret = BadAlloc;
         goto out;
@@ -190,13 +187,11 @@ ProcXIPassiveGrabDevice(ClientPtr client)
 
     mod_dev = (IsFloating(dev)) ? dev : GetMaster(dev, MASTER_KEYBOARD);
 
-    for (i = 0; i < stuff->num_modifiers; i++, modifiers++)
-    {
+    for (i = 0; i < stuff->num_modifiers; i++, modifiers++) {
         uint8_t status = Success;
 
         param.modifiers = *modifiers;
-        switch(stuff->grab_type)
-        {
+        switch (stuff->grab_type) {
             case XIGrabtypeButton:
                 status = GrabButton(client, dev, mod_dev, stuff->detail,
                                     &param, XI2, &mask);
@@ -207,16 +202,14 @@ ProcXIPassiveGrabDevice(ClientPtr client)
                 break;
             case XIGrabtypeEnter:
             case XIGrabtypeFocusIn:
-                status = GrabWindow(client, dev, stuff->grab_type,
-                                    &param, &mask);
+            status = GrabWindow(client, dev, stuff->grab_type, &param, &mask);
                 break;
             case XIGrabtypeTouchBegin:
                 status = GrabTouch(client, dev, mod_dev, &param, &mask);
                 break;
         }
 
-        if (status != GrabSuccess)
-        {
+        if (status != GrabSuccess) {
             xXIGrabModifierInfo *info = modifiers_failed + rep.num_modifiers;
 
             info->status = status;
@@ -288,8 +281,7 @@ ProcXIPassiveUngrabDevice(ClientPtr client)
         dev = inputInfo.all_devices;
     else if (stuff->deviceid == XIAllMasterDevices)
         dev = inputInfo.all_master_devices;
-    else
-    {
+    else {
         rc = dixLookupDevice(&dev, stuff->deviceid, client, DixGrabAccess);
         if (rc != Success)
 	    return rc;
@@ -298,15 +290,13 @@ ProcXIPassiveUngrabDevice(ClientPtr client)
     if (stuff->grab_type != XIGrabtypeButton &&
         stuff->grab_type != XIGrabtypeKeycode &&
         stuff->grab_type != XIGrabtypeEnter &&
-        stuff->grab_type != XIGrabtypeFocusIn)
-    {
+        stuff->grab_type != XIGrabtypeFocusIn) {
         client->errorValue = stuff->grab_type;
         return BadValue;
     }
 
     if ((stuff->grab_type == XIGrabtypeEnter ||
-         stuff->grab_type == XIGrabtypeFocusIn) && stuff->detail != 0)
-    {
+         stuff->grab_type == XIGrabtypeFocusIn) && stuff->detail != 0) {
         client->errorValue = stuff->detail;
         return BadValue;
     }
@@ -317,7 +307,6 @@ ProcXIPassiveUngrabDevice(ClientPtr client)
 
     mod_dev = (IsFloating(dev)) ? dev : GetMaster(dev, MASTER_KEYBOARD);
 
-
     tempGrab = AllocGrab();
     if (!tempGrab)
         return BadAlloc;
@@ -325,12 +314,19 @@ ProcXIPassiveUngrabDevice(ClientPtr client)
     tempGrab->resource = client->clientAsMask;
     tempGrab->device = dev;
     tempGrab->window = win;
-    switch(stuff->grab_type)
-    {
-        case XIGrabtypeButton:  tempGrab->type = XI_ButtonPress; break;
-        case XIGrabtypeKeycode:  tempGrab->type = XI_KeyPress;    break;
-        case XIGrabtypeEnter:   tempGrab->type = XI_Enter;       break;
-        case XIGrabtypeFocusIn: tempGrab->type = XI_FocusIn;     break;
+    switch (stuff->grab_type) {
+    case XIGrabtypeButton:
+        tempGrab->type = XI_ButtonPress;
+        break;
+    case XIGrabtypeKeycode:
+        tempGrab->type = XI_KeyPress;
+        break;
+    case XIGrabtypeEnter:
+        tempGrab->type = XI_Enter;
+        break;
+    case XIGrabtypeFocusIn:
+        tempGrab->type = XI_FocusIn;
+        break;
     }
     tempGrab->grabtype = XI2;
     tempGrab->modifierDevice = mod_dev;
@@ -340,8 +336,7 @@ ProcXIPassiveUngrabDevice(ClientPtr client)
 
     modifiers = (uint32_t*)&stuff[1];
 
-    for (i = 0; i < stuff->num_modifiers; i++, modifiers++)
-    {
+    for (i = 0; i < stuff->num_modifiers; i++, modifiers++) {
         tempGrab->modifiersDetail.exact = *modifiers;
         DeletePassiveGrabFromList(tempGrab);
     }
