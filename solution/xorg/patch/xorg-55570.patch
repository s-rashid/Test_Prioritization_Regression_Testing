diff --git a/hw/xfree86/os-support/linux/int10/linux.c b/hw/xfree86/os-support/linux/int10/linux.c
index 564447f..fa58a72 100644
--- a/hw/xfree86/os-support/linux/int10/linux.c
+++ b/hw/xfree86/os-support/linux/int10/linux.c
@@ -137,7 +137,8 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
 		}
 	    }
 	    close(fd);
-	} else {
+        }
+        else {
 	    xf86DrvMsg(screen, X_ERROR, "Cannot open %s\n", DEV_MEM);
 	    goto error0;
 	}
@@ -169,7 +170,8 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
 			   "shmget(highmem) error: %s\n",strerror(errno));
 	    goto error1;
 	}
-    } else {
+    }
+    else {
 	DebugF("Mapping Video BIOS\n");
 	videoBiosMapped = TRUE;
 	if ((fd = open(DEV_MEM, O_RDWR, 0)) >= 0) {
@@ -182,14 +184,14 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
 		goto error1;
 	    }
 	    close (fd);
-	} else
+        }
+        else
 	    goto error1;
     }
     ((linuxInt10Priv*)pInt->private)->highMem = high_mem;
     
     DebugF("Mapping 640kB area\n");
-    if ((low_mem = shmget(counter++, V_RAM,
-			  IPC_CREAT | SHM_R | SHM_W)) == -1) {
+    if ((low_mem = shmget(counter++, V_RAM, IPC_CREAT | SHM_R | SHM_W)) == -1) {
 	xf86DrvMsg(screen, X_ERROR,
 		   "shmget(lowmem) error: %s\n",strerror(errno));
 	goto error2;
@@ -211,7 +213,8 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
 	    goto error3;
 	}
 	((linuxInt10Priv*)pInt->private)->base_high = base_high;
-    } else
+    }
+    else
 	((linuxInt10Priv*)pInt->private)->base_high = NULL;
 
     if (!MapCurrentInt10(pInt))
@@ -252,7 +255,8 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
 	    pInt->Flags &= ~RESTORE_BIOS_SCRATCH;
   	xf86Int10SaveRestoreBIOSVars(pInt, TRUE);
 #endif
-    } else {
+    }
+    else {
 	const BusType location_type = xf86int10GetBiosLocationType(pInt);
 
 	switch (location_type) {
@@ -326,7 +330,8 @@ MapCurrentInt10(xf86Int10InfoPtr pInt)
 	else
 	    munmap((pointer)V_BIOS, (SYS_BIOS - V_BIOS));
     }
-    addr = shmat(((linuxInt10Priv*)pInt->private)->lowMem, (char*)1, SHM_RND);
+    addr =
+        shmat(((linuxInt10Priv *) pInt->private)->lowMem, (char *) 1, SHM_RND);
     if (addr == SHMERRORPTR) {
 	xf86DrvMsg(pInt->scrnIndex, X_ERROR, "Cannot shmat() low memory\n");
 	xf86DrvMsg(pInt->scrnIndex, X_ERROR,
@@ -352,7 +357,8 @@ MapCurrentInt10(xf86Int10InfoPtr pInt)
 	    xf86DrvMsg(pInt->scrnIndex, X_ERROR,
 		       "Cannot set EXEC bit on high memory: %s\n",
 		       strerror(errno));
-    } else {
+    }
+    else {
 	if ((fd = open(DEV_MEM, O_RDWR, 0)) >= 0) {
 	    if (mmap((void *)(V_BIOS), SYS_BIOS - V_BIOS,
 			     PROT_READ | PROT_WRITE | PROT_EXEC,
@@ -362,7 +368,8 @@ MapCurrentInt10(xf86Int10InfoPtr pInt)
 		close (fd);
 		return FALSE;
 	    }
-	} else {
+        }
+        else {
 	    xf86DrvMsg(pInt->scrnIndex, X_ERROR, "Cannot open %s\n",DEV_MEM);
 	    return FALSE;
 	}
@@ -474,7 +481,8 @@ write_w(xf86Int10InfoPtr pInt, int addr, CARD16 val)
 }
 
 static
-void write_l(xf86Int10InfoPtr pInt, int addr, CARD32 val)
+    void
+write_l(xf86Int10InfoPtr pInt, int addr, CARD32 val)
 {
     *((CARD32 *)(memType) addr) = val;
 }
@@ -492,7 +500,8 @@ xf86int10Addr(xf86Int10InfoPtr pInt, CARD32 addr)
 			     - V_BIOS + addr);
 	else
 	    return (pointer) (memType)addr;
-    } else
+    }
+    else
 	return (pointer) (memType)addr;
 }
 
@@ -509,13 +518,10 @@ vm86_tst(void)
     __asm__ __volatile__("pushl %%ebx\n\t"
 			 "movl %2,%%ebx\n\t"
 			 "movl %1,%%eax\n\t"
-			 "int $0x80\n\t"
-			 "popl %%ebx"
-			 :"=a" (__res)
+                         "int $0x80\n\t" "popl %%ebx":"=a"(__res)
 			 :"n" ((int)113), "r" (NULL));
 #else
-    __asm__ __volatile__("int $0x80\n\t"
-			 :"=a" (__res):"a" ((int)113),
+    __asm__ __volatile__("int $0x80\n\t":"=a"(__res):"a"((int) 113),
 			 "b" ((struct vm86_struct *)NULL));
 #endif
 
