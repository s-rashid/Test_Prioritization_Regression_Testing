diff --git a/hw/kdrive/ephyr/ephyrdri.c b/hw/kdrive/ephyr/ephyrdri.c
index 932e468..5055436 100644
--- a/hw/kdrive/ephyr/ephyrdri.c
+++ b/hw/kdrive/ephyr/ephyrdri.c
@@ -43,11 +43,9 @@
 #ifndef TRUE
 #define TRUE 1
 #endif /*TRUE*/
-
 #ifndef FALSE
 #define FALSE 0
 #endif /*FALSE*/
-
 Bool
 ephyrDRIQueryDirectRenderingCapable (int a_screen, Bool *a_is_capable)
 {
@@ -65,8 +63,7 @@ ephyrDRIQueryDirectRenderingCapable (int a_screen, Bool *a_is_capable)
 
 Bool
 ephyrDRIOpenConnection (int a_screen,
-                        drm_handle_t *a_sarea,
-                        char **a_bus_id_string)
+                       drm_handle_t * a_sarea, char **a_bus_id_string)
 {
     Display *dpy = hostx_get_display () ;
     Bool is_ok=FALSE ;
@@ -74,14 +71,13 @@ ephyrDRIOpenConnection (int a_screen,
     EPHYR_RETURN_VAL_IF_FAIL (a_bus_id_string, FALSE) ;
     EPHYR_LOG ("enter. screen:%d\n", a_screen) ;
     is_ok = XF86DRIOpenConnection (dpy, DefaultScreen (dpy),
-                                   a_sarea,
-                                   a_bus_id_string) ;
+                                  a_sarea, a_bus_id_string);
     if (*a_bus_id_string) {
         EPHYR_LOG ("leave. bus_id_string:%s, is_ok:%d\n",
                    *a_bus_id_string, is_ok) ;
-    } else {
-        EPHYR_LOG ("leave. bus_id_string:null, is_ok:%d\n",
-                   is_ok) ;
+    }
+    else {
+        EPHYR_LOG("leave. bus_id_string:null, is_ok:%d\n", is_ok);
     }
     return is_ok ;
 }
@@ -123,8 +119,7 @@ ephyrDRIGetClientDriverName (int a_screen,
     EPHYR_RETURN_VAL_IF_FAIL (a_ddx_driver_major_version
                               && a_ddx_driver_minor_version
                               && a_ddx_driver_patch_version
-                              && a_client_driver_name,
-                              FALSE);
+                             && a_client_driver_name, FALSE);
     EPHYR_LOG ("enter\n") ;
     is_ok = XF86DRIGetClientDriverName (dpy, DefaultScreen (dpy),
                                         a_ddx_driver_major_version,
@@ -134,8 +129,7 @@ ephyrDRIGetClientDriverName (int a_screen,
     EPHYR_LOG ("major:%d, minor:%d, patch:%d, name:%s\n",
                 *a_ddx_driver_major_version,
                 *a_ddx_driver_minor_version,
-                *a_ddx_driver_patch_version,
-                *a_client_driver_name) ;
+              *a_ddx_driver_patch_version, *a_client_driver_name);
     EPHYR_LOG ("leave:%d\n", is_ok) ;
     return is_ok ;
 }
@@ -143,8 +137,7 @@ ephyrDRIGetClientDriverName (int a_screen,
 Bool
 ephyrDRICreateContext (int a_screen,
                        int a_visual_id,
-                       XID *a_returned_ctxt_id,
-                       drm_context_t *a_hw_ctxt)
+                      XID *a_returned_ctxt_id, drm_context_t * a_hw_ctxt)
 {
     Display *dpy = hostx_get_display () ;
     Bool is_ok=FALSE ;
@@ -155,16 +148,13 @@ ephyrDRICreateContext (int a_screen,
     v.visualid = a_visual_id ;
     is_ok = XF86DRICreateContext (dpy,
                                   DefaultScreen (dpy),
-                                  &v,
-                                  a_returned_ctxt_id,
-                                  a_hw_ctxt) ;
+                                 &v, a_returned_ctxt_id, a_hw_ctxt);
     EPHYR_LOG ("leave:%d\n", is_ok) ;
     return is_ok ;
 }
 
 Bool
-ephyrDRIDestroyContext (int a_screen,
-                        int a_context_id)
+ephyrDRIDestroyContext(int a_screen, int a_context_id)
 {
     Display *dpy = hostx_get_display () ;
     Bool is_ok=FALSE ;
@@ -177,8 +167,7 @@ ephyrDRIDestroyContext (int a_screen,
 
 Bool
 ephyrDRICreateDrawable (int a_screen,
-                        int a_drawable,
-                        drm_drawable_t *a_hw_drawable)
+                       int a_drawable, drm_drawable_t * a_hw_drawable)
 {
     Bool is_ok=FALSE;
     Display *dpy=hostx_get_display () ;
@@ -220,8 +209,7 @@ ephyrDRIGetDrawableInfo (int a_screen,
     EphyrHostWindowAttributes attrs ;
 
     EPHYR_RETURN_VAL_IF_FAIL (a_x && a_y && a_w && a_h
-                              && a_num_clip_rects,
-                              FALSE) ;
+                             && a_num_clip_rects, FALSE);
 
     EPHYR_LOG ("enter\n") ;
     memset (&attrs, 0, sizeof (attrs)) ;
@@ -235,19 +223,16 @@ ephyrDRIGetDrawableInfo (int a_screen,
                                  a_w, a_h,
                                  a_num_clip_rects, a_clip_rects,
                                  a_back_x, a_back_y,
-                                 a_num_back_clip_rects,
-                                 a_back_clip_rects)) {
+                                a_num_back_clip_rects, a_back_clip_rects)) {
         EPHYR_LOG_ERROR ("XF86DRIGetDrawableInfo ()\n") ;
         goto out ;
     }
     EPHYR_LOG ("host x,y,w,h: (%d,%d,%d,%d)\n", *a_x, *a_y, *a_w, *a_h) ;
     if (*a_num_clip_rects) {
         free (*a_back_clip_rects) ;
-        *a_back_clip_rects = calloc (*a_num_clip_rects,
-                                     sizeof (drm_clip_rect_t)) ;
+        *a_back_clip_rects = calloc(*a_num_clip_rects, sizeof(drm_clip_rect_t));
         memmove (*a_back_clip_rects,
-                 *a_clip_rects,
-                 *a_num_clip_rects * sizeof (drm_clip_rect_t)) ;
+                *a_clip_rects, *a_num_clip_rects * sizeof(drm_clip_rect_t));
         *a_num_back_clip_rects = *a_num_clip_rects;
     }
     EPHYR_LOG ("num back clip rects:%d, num clip rects:%d\n",
@@ -270,8 +255,7 @@ ephyrDRIGetDeviceInfo (int a_screen,
                        int *a_fb_origin,
                        int *a_fb_size,
                        int *a_fb_stride,
-                       int *a_dev_private_size,
-                       void **a_dev_private)
+                      int *a_dev_private_size, void **a_dev_private)
 {
     Bool is_ok = FALSE ;
     Display *dpy = hostx_get_display () ;
