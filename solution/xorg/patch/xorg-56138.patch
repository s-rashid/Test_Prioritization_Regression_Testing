diff --git a/xkb/ddxBeep.c b/xkb/ddxBeep.c
index 6f74cb5..f95d0ee 100644
--- a/xkb/ddxBeep.c
+++ b/xkb/ddxBeep.c
@@ -152,12 +152,14 @@ Atom		name;
 	 * beeps for off.
          */
 	case _BEEP_LED_ON:
-	    if (name==None)	name= ledOn;
+        if (name == None)
+            name = ledOn;
 	    duration= SHORT_TONE;
 	    pitch= HIGH_PITCH;
 	    break;
 	case _BEEP_LED_OFF:
-	    if (name==None)	name= ledOff;
+        if (name == None)
+            name = ledOff;
 	    duration= SHORT_TONE;
 	    pitch= LOW_PITCH;
 	    if (!doesPitch && xkbInfo->beepCount<1)
@@ -170,7 +172,8 @@ Atom		name;
 	 * beeps for off.
          */
 	case _BEEP_FEATURE_ON:
-	    if (name==None)	name= featureOn;
+        if (name == None)
+            name = featureOn;
 	    if (xkbInfo->beepCount<1) {
 		pitch= LOW_PITCH;
 		duration= VERY_LONG_TONE;
@@ -184,12 +187,14 @@ Atom		name;
 	    break;
 
 	case _BEEP_FEATURE_OFF:
-	    if (name==None)	name= featureOff;
+        if (name == None)
+            name = featureOff;
 	    if (xkbInfo->beepCount<1) {
 		pitch= MID_PITCH;
 		if (doesPitch)
 		     duration= VERY_LONG_TONE;
-		else duration= SHORT_TONE;
+            else
+                duration = SHORT_TONE;
 		next= SHORT_DELAY;
 	    }
 	    else {
@@ -203,9 +208,11 @@ Atom		name;
 	 * [[[WDW - This is not in AccessDOS ]]]
 	 */
 	case _BEEP_LED_CHANGE:
-            if (name==None)	name= ledChange;
+        if (name == None)
+            name = ledChange;
 	case _BEEP_FEATURE_CHANGE:
-	    if (name==None)	name= featureChange;
+        if (name == None)
+            name = featureChange;
 	    duration= SHORT_TONE;
 	    pitch= HIGH_PITCH;
 	    if (xkbInfo->beepCount<1) {
@@ -217,7 +224,8 @@ Atom		name;
 	 * is going to be turned on or off.
 	 */	  
 	case _BEEP_SLOW_WARN:
-	    if (name==None)	name= slowWarn;
+        if (name == None)
+            name = slowWarn;
 	    duration= SHORT_TONE;
 	    pitch= HIGH_PITCH;
 	    if (xkbInfo->beepCount<2)
@@ -230,18 +238,23 @@ Atom		name;
 	 * If we cannot do pitch, we want single beeps.
 	 */	  
         case _BEEP_SLOW_PRESS:
-	    if (name==None)	name= slowPress;
+        if (name == None)
+            name = slowPress;
 	case _BEEP_SLOW_ACCEPT:
-	    if (name==None)	name= slowAccept;
+        if (name == None)
+            name = slowAccept;
 	case _BEEP_SLOW_RELEASE:
-	    if (name==None)	name= slowRelease;
+        if (name == None)
+            name = slowRelease;
 	    duration= CLICK_DURATION;
 	    pitch= CLICK_PITCH;
 	    break;
 	case _BEEP_BOUNCE_REJECT:
-	    if (name==None)	name= bounceReject;
+        if (name == None)
+            name = bounceReject;
 	case _BEEP_SLOW_REJECT:
-	    if (name==None)	name= slowReject;
+        if (name == None)
+            name = slowReject;
 	    duration= SHORT_TONE;
 	    pitch= DEEP_PITCH;
 	    break;
@@ -253,23 +266,27 @@ Atom		name;
 	 * lock, and two for unlock.
 	 */	  
 	case _BEEP_STICKY_LATCH:
-	    if (name==None)	name= stickyLatch;
+        if (name == None)
+            name = stickyLatch;
 	    duration= SHORT_TONE;
 	    if (xkbInfo->beepCount<1) {
 		next= SHORT_DELAY;
 		pitch= LOW_PITCH;
 	    }
-	    else pitch= HIGH_PITCH;
+        else
+            pitch = HIGH_PITCH;
 	    break;
 	case _BEEP_STICKY_LOCK:
-	    if (name==None)	name= stickyLock;
+        if (name == None)
+            name = stickyLock;
 	    if (doesPitch) {
 		duration= SHORT_TONE;
 		pitch= HIGH_PITCH;
             }
 	    break;
 	case _BEEP_STICKY_UNLOCK:
-	    if (name==None)	name= stickyUnlock;
+        if (name == None)
+            name = stickyUnlock;
 	    duration= SHORT_TONE;
 	    pitch= LOW_PITCH;
 	    if (!doesPitch && xkbInfo->beepCount<1)
@@ -283,11 +300,12 @@ Atom		name;
 	ctrl->bell_duration= duration;
 	ctrl->bell_pitch= pitch;
 	if (xkbInfo->beepCount==0) {
-	     XkbHandleBell(0,0,dev,ctrl->bell,(pointer)ctrl,KbdFeedbackClass,name,None,
-									NULL);
+            XkbHandleBell(0, 0, dev, ctrl->bell, (pointer) ctrl,
+                          KbdFeedbackClass, name, None, NULL);
 	}
 	else if (xkbInfo->desc->ctrls->enabled_ctrls&XkbAudibleBellMask) {
-	    (*dev->kbdfeed->BellProc)(ctrl->bell,dev,(pointer)ctrl,KbdFeedbackClass);
+            (*dev->kbdfeed->BellProc) (ctrl->bell, dev, (pointer) ctrl,
+                                       KbdFeedbackClass);
 	}
 	ctrl->bell_duration= oldDuration;
 	ctrl->bell_pitch= oldPitch;
@@ -302,7 +320,8 @@ Atom		name;
 	if (elapsedtime > starttime) { /* watch out for millisecond counter
 					  overflow! */
 	    elapsedtime -= starttime;
-	} else {
+        }
+        else {
 	    elapsedtime = 0;
 	}
 	if (elapsedtime < duration) {
