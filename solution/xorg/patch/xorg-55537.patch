diff --git a/hw/xfree86/modes/xf86DisplayIDModes.c b/hw/xfree86/modes/xf86DisplayIDModes.c
index f18f18c..781c806 100644
--- a/hw/xfree86/modes/xf86DisplayIDModes.c
+++ b/hw/xfree86/modes/xf86DisplayIDModes.c
@@ -175,8 +175,7 @@ didDMTTiming(int i, unsigned char *x, void *closure)
 {
     MonPtr mon = closure;
 
-    mon->Modes = xf86ModesAdd(mon->Modes,
-			      xf86DuplicateMode(DMTModes + *x));
+    mon->Modes = xf86ModesAdd(mon->Modes, xf86DuplicateMode(DMTModes + *x));
 }
 
 #define RB 1
@@ -185,96 +184,105 @@ static const struct did_dmt {
     short w, h, r, f;
 } did_dmt[] = {
     /* byte 3 */
-    { 640, 350, 85, 0 },
-    { 640, 400, 85, 0 },
-    { 720, 400, 85, 0 },
-    { 640, 480, 60, 0 },
-    { 640, 480, 72, 0 },
-    { 640, 480, 75, 0 },
-    { 640, 480, 85, 0 },
-    { 800, 600, 56, 0 },
+    {
+    640, 350, 85, 0}, {
+    640, 400, 85, 0}, {
+    720, 400, 85, 0}, {
+    640, 480, 60, 0}, {
+    640, 480, 72, 0}, {
+    640, 480, 75, 0}, {
+    640, 480, 85, 0}, {
+    800, 600, 56, 0},
     /* byte 4 */
-    { 800, 600, 60, 0 },
-    { 800, 600, 72, 0 },
-    { 800, 600, 75, 0 },
-    { 800, 600, 85, 0 },
-    { 800, 600, 120, RB },
-    { 848, 480, 60, 0 },
-    { 1024, 768, 43, INT },
-    { 1024, 768, 60, 0 },
+    {
+    800, 600, 60, 0}, {
+    800, 600, 72, 0}, {
+    800, 600, 75, 0}, {
+    800, 600, 85, 0}, {
+    800, 600, 120, RB}, {
+    848, 480, 60, 0}, {
+    1024, 768, 43, INT}, {
+    1024, 768, 60, 0},
     /* byte 5 */
-    { 1024, 768, 70, 0 },
-    { 1024, 768, 75, 0 },
-    { 1024, 768, 85, 0 },
-    { 1024, 768, 120, RB },
-    { 1152, 864, 75, 0 },
-    { 1280, 768, 60, RB },
-    { 1280, 768, 60, 0 },
-    { 1280, 768, 75, 0 },
+    {
+    1024, 768, 70, 0}, {
+    1024, 768, 75, 0}, {
+    1024, 768, 85, 0}, {
+    1024, 768, 120, RB}, {
+    1152, 864, 75, 0}, {
+    1280, 768, 60, RB}, {
+    1280, 768, 60, 0}, {
+    1280, 768, 75, 0},
     /* byte 6 */
-    { 1280, 768, 85, 0 },
-    { 1280, 768, 120, RB },
-    { 1280, 800, 60, RB },
-    { 1280, 800, 60, 0 },
-    { 1280, 800, 75, 0 },
-    { 1280, 800, 85, 0 },
-    { 1280, 800, 120, RB },
-    { 1280, 960, 60, 0 },
+    {
+    1280, 768, 85, 0}, {
+    1280, 768, 120, RB}, {
+    1280, 800, 60, RB}, {
+    1280, 800, 60, 0}, {
+    1280, 800, 75, 0}, {
+    1280, 800, 85, 0}, {
+    1280, 800, 120, RB}, {
+    1280, 960, 60, 0},
     /* byte 7 */
-    { 1280, 960, 85, 0 },
-    { 1280, 960, 120, RB },
-    { 1280, 1024, 60, 0 },
-    { 1280, 1024, 75, 0 },
-    { 1280, 1024, 85, 0 },
-    { 1280, 1024, 120, RB },
-    { 1360, 768, 60, 0 },
-    { 1360, 768, 120, RB },
+    {
+    1280, 960, 85, 0}, {
+    1280, 960, 120, RB}, {
+    1280, 1024, 60, 0}, {
+    1280, 1024, 75, 0}, {
+    1280, 1024, 85, 0}, {
+    1280, 1024, 120, RB}, {
+    1360, 768, 60, 0}, {
+    1360, 768, 120, RB},
     /* byte 8 */
-    { 1400, 1050, 60, RB },
-    { 1400, 1050, 60, 0 },
-    { 1400, 1050, 75, 0 },
-    { 1400, 1050, 85, 0 },
-    { 1400, 1050, 120, RB },
-    { 1440, 900, 60, RB },
-    { 1440, 900, 60, 0 },
-    { 1440, 900, 75, 0 },
+    {
+    1400, 1050, 60, RB}, {
+    1400, 1050, 60, 0}, {
+    1400, 1050, 75, 0}, {
+    1400, 1050, 85, 0}, {
+    1400, 1050, 120, RB}, {
+    1440, 900, 60, RB}, {
+    1440, 900, 60, 0}, {
+    1440, 900, 75, 0},
     /* byte 9 */
-    { 1440, 900, 85, 0 },
-    { 1440, 900, 120, RB },
-    { 1600, 1200, 60, 0 },
-    { 1600, 1200, 65, 0 },
-    { 1600, 1200, 70, 0 },
-    { 1600, 1200, 75, 0 },
-    { 1600, 1200, 85, 0 },
-    { 1600, 1200, 120, RB },
+    {
+    1440, 900, 85, 0}, {
+    1440, 900, 120, RB}, {
+    1600, 1200, 60, 0}, {
+    1600, 1200, 65, 0}, {
+    1600, 1200, 70, 0}, {
+    1600, 1200, 75, 0}, {
+    1600, 1200, 85, 0}, {
+    1600, 1200, 120, RB},
     /* byte a */
-    { 1680, 1050, 60, RB },
-    { 1680, 1050, 60, 0 },
-    { 1680, 1050, 75, 0 },
-    { 1680, 1050, 85, 0 },
-    { 1680, 1050, 120, RB },
-    { 1792, 1344, 60, 0 },
-    { 1792, 1344, 75, 0 },
-    { 1792, 1344, 120, RB },
+    {
+    1680, 1050, 60, RB}, {
+    1680, 1050, 60, 0}, {
+    1680, 1050, 75, 0}, {
+    1680, 1050, 85, 0}, {
+    1680, 1050, 120, RB}, {
+    1792, 1344, 60, 0}, {
+    1792, 1344, 75, 0}, {
+    1792, 1344, 120, RB},
     /* byte b */
-    { 1856, 1392, 60, 0 },
-    { 1856, 1392, 75, 0 },
-    { 1856, 1392, 120, RB },
-    { 1920, 1200, 60, RB },
-    { 1920, 1200, 60, 0 },
-    { 1920, 1200, 75, 0 },
-    { 1920, 1200, 85, 0 },
-    { 1920, 1200, 120, RB },
+    {
+    1856, 1392, 60, 0}, {
+    1856, 1392, 75, 0}, {
+    1856, 1392, 120, RB}, {
+    1920, 1200, 60, RB}, {
+    1920, 1200, 60, 0}, {
+    1920, 1200, 75, 0}, {
+    1920, 1200, 85, 0}, {
+    1920, 1200, 120, RB},
     /* byte c */
-    { 1920, 1440, 60, 0 },
-    { 1920, 1440, 75, 0 },
-    { 1920, 1440, 120, RB },
-    { 2560, 1600, 60, RB },
-    { 2560, 1600, 60, 0 },
-    { 2560, 1600, 75, 0 },
-    { 2560, 1600, 85, 0 },
-    { 2560, 1600, 120, RB },
-};
+    {
+    1920, 1440, 60, 0}, {
+    1920, 1440, 75, 0}, {
+    1920, 1440, 120, RB}, {
+    2560, 1600, 60, RB}, {
+    2560, 1600, 60, 0}, {
+    2560, 1600, 75, 0}, {
+    2560, 1600, 85, 0}, {
+2560, 1600, 120, RB},};
 
 static void
 didVesaTiming(int scrn, unsigned char *x, MonPtr mon)
@@ -287,6 +295,7 @@ didVesaTiming(int scrn, unsigned char *x, MonPtr mon)
 	for (j = 0; j < 8; j++)
 	    if (x[i] & (1 << j)) {
 		const struct did_dmt *d = &(did_dmt[i * 8 + j]);
+
 		if (d->f == INT)
 		    continue;
 		mon->Modes = xf86ModesAdd(mon->Modes,
@@ -319,14 +328,16 @@ handleDisplayIDBlock(int scrnIndex, unsigned char *x, void *closure)
 	    if (n < MAX_HSYNC) {
 		mon->hsync[n].lo = x[9];
 		mon->hsync[n].hi = x[10];
-	    } else {
+        }
+        else {
 		n = MAX_HSYNC;
 	    }
 	    n = mon->nVrefresh++;
 	    if (n < MAX_VREFRESH) {
 		mon->vrefresh[n].lo = x[13];
 		mon->vrefresh[n].hi = x[14];
-	    } else {
+        }
+        else {
 		n = MAX_VREFRESH;
 	    }
 	    break;
@@ -335,6 +346,7 @@ handleDisplayIDBlock(int scrnIndex, unsigned char *x, void *closure)
 	case DID_TIMING_1_DETAILED:
 	{
 	    int i;
+
 	    for (i = 0; i < x[2]; i += 20)
 		didDetailedTiming1(scrnIndex, x + i + 3, mon);
 	    break;
@@ -343,6 +355,7 @@ handleDisplayIDBlock(int scrnIndex, unsigned char *x, void *closure)
 	case DID_TIMING_2_DETAILED:
 	{
 	    int i;
+
 	    for (i = 0; i < x[2]; i += 11)
 		didDetailedTiming2(scrnIndex, x + i + 3, mon);
 	    break;
@@ -351,6 +364,7 @@ handleDisplayIDBlock(int scrnIndex, unsigned char *x, void *closure)
 	case DID_TIMING_3_SHORT:
 	{
 	    int i;
+
 	    for (i = 0; i < x[2]; i += 3)
 		didShortTiming(scrnIndex, x + i + 3, mon);
 	    break;
@@ -359,6 +373,7 @@ handleDisplayIDBlock(int scrnIndex, unsigned char *x, void *closure)
 	case DID_TIMING_4_DMT:
 	{
 	    int i;
+
 	    for (i = 0; i < x[2]; i++)
 		didDMTTiming(scrnIndex, x + i + 3, mon);
 	    break;
