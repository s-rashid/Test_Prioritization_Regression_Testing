diff --git a/hw/xwin/winmouse.c b/hw/xwin/winmouse.c
index e645d7e..da1d5a9 100644
--- a/hw/xwin/winmouse.c
+++ b/hw/xwin/winmouse.c
@@ -36,14 +36,12 @@
 #endif
 #include "win.h"
 
-#if defined(XFree86Server)
 #include "inputstr.h"
 #include "exevents.h" /* for button/axes labels */
 #include "xserver-properties.h"
 
 /* Peek the internal button mapping */
 static CARD8 const *g_winMouseButtonMap = NULL;
-#endif
 
 
 /*
@@ -123,9 +121,7 @@ winMouseProc (DeviceIntPtr pDeviceInt, int iState)
       free(map);
       free(btn_labels);
 
-#if defined(XFree86Server)
       g_winMouseButtonMap = pDeviceInt->button->map;
-#endif
       break;
 
     case DEVICE_ON:
@@ -133,9 +129,8 @@ winMouseProc (DeviceIntPtr pDeviceInt, int iState)
       break;
 
     case DEVICE_CLOSE:
-#if defined(XFree86Server)
       g_winMouseButtonMap = NULL;
-#endif
+
     case DEVICE_OFF:
       pDevice->on = FALSE;
       break;
@@ -242,10 +237,8 @@ winMouseButtonsSendEvent (int iEventType, int iButton)
   int i, nevents;
   ValuatorMask mask;
 
-#if defined(XFree86Server)
   if (g_winMouseButtonMap)
     iButton = g_winMouseButtonMap[iButton];
-#endif
 
   valuator_mask_zero(&mask);
   GetEventList(&events);
@@ -253,7 +246,7 @@ winMouseButtonsSendEvent (int iEventType, int iButton)
 			     POINTER_RELATIVE, &mask);
 
   for (i = 0; i < nevents; i++)
-    mieqEnqueue(g_pwinPointer, events[i].event);
+    mieqEnqueue(g_pwinPointer, (InternalEvent*)events[i].event);
 
 #if CYGDEBUG
   ErrorF("winMouseButtonsSendEvent: iEventType: %d, iButton: %d, nEvents %d\n",
@@ -388,5 +381,5 @@ void winEnqueueMotion(int x, int y)
 			     POINTER_ABSOLUTE | POINTER_SCREEN, &mask);
 
   for (i = 0; i < nevents; i++)
-    mieqEnqueue(g_pwinPointer, events[i].event);
+    mieqEnqueue(g_pwinPointer, (InternalEvent*)events[i].event);
 }
