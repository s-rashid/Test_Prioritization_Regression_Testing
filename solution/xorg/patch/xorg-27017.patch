diff --git a/hw/dmx/dmx.c b/hw/dmx/dmx.c
index 75623e6..02e8b1e 100644
--- a/hw/dmx/dmx.c
+++ b/hw/dmx/dmx.c
@@ -282,12 +282,12 @@ static int ProcDMXForceWindowCreation(ClientPtr client)
         int          i;
 
         if (!(win = SecurityLookupIDByType(client, stuff->window, XRT_WINDOW,
-                                           SecurityReadAccess)))
+                                           DixReadAccess)))
             return -1;           /* BadWindow */
 
         FOR_NSCREENS(i) {
             if (!(pWin = SecurityLookupWindow(win->info[i].id, client,
-                                              SecurityReadAccess)))
+                                              DixReadAccess)))
                 return -1;       /* BadWindow */
 
             dmxForceWindowCreation(pWin);
@@ -297,7 +297,7 @@ static int ProcDMXForceWindowCreation(ClientPtr client)
 #endif
 
     if (!(pWin = SecurityLookupWindow(stuff->window, client,
-                                      SecurityReadAccess)))
+                                      DixReadAccess)))
         return -1;               /* BadWindow */
 
     dmxForceWindowCreation(pWin);
@@ -556,12 +556,12 @@ static int dmxPopulatePanoramiX(ClientPtr client, Window window,
     DMXWindowAttributesRec attr;
     
     if (!(win = SecurityLookupIDByType(client, window, XRT_WINDOW,
-                                       SecurityReadAccess)))
+                                       DixReadAccess)))
         return -1;               /* BadWindow */
     
     FOR_NSCREENS(i) {
         if (!(pWin = SecurityLookupWindow(win->info[i].id, client,
-                                          SecurityReadAccess)))
+                                          DixReadAccess)))
             return -1;          /* BadWindow */
         if (dmxGetWindowAttributes(pWin, &attr)) {
             screens[count] = attr.screen;
@@ -587,7 +587,7 @@ static int dmxPopulate(ClientPtr client, Window window, CARD32 *screens,
                                     pos, vis);
 #endif
     
-    if (!(pWin = SecurityLookupWindow(window, client, SecurityReadAccess)))
+    if (!(pWin = SecurityLookupWindow(window, client, DixReadAccess)))
         return -1;               /* BadWindow */
 
     dmxGetWindowAttributes(pWin, &attr);
