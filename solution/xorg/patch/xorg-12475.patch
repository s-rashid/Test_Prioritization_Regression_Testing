diff --git a/hw/xfree86/os-support/bsd/i386_video.c b/hw/xfree86/os-support/bsd/i386_video.c
index 62d0636..abec95b 100644
--- a/hw/xfree86/os-support/bsd/i386_video.c
+++ b/hw/xfree86/os-support/bsd/i386_video.c
@@ -331,25 +331,26 @@ xf86ReadBIOS(unsigned long Base, unsigned long Offset, unsigned char *Buf,
 
 static Bool ExtendedEnabled = FALSE;
 
-void
+Bool
 xf86EnableIO()
 {
 	if (ExtendedEnabled)
-		return;
+		return TRUE;
 
 	if (i386_iopl(TRUE) < 0)
 	{
 #ifndef __OpenBSD__
-		FatalError("%s: Failed to set IOPL for extended I/O",
+		xf86Msg(X_WARNING,"%s: Failed to set IOPL for extended I/O",
 			   "xf86EnableIO");
 #else
-		FatalError("%s: Failed to set IOPL for extended I/O\n%s",
+		xf86Msg(X_WARNING,"%s: Failed to set IOPL for extended I/O\n%s",
 			   "xf86EnableIO", SYSCTL_MSG);
 #endif
+		return FALSE;
 	}
 	ExtendedEnabled = TRUE;
 
-	return;
+	return TRUE;
 }
 	
 void
@@ -373,25 +374,26 @@ xf86DisableIO()
 
 static Bool ExtendedEnabled = FALSE;
 
-void
+Bool
 xf86EnableIO()
 {
 	if (ExtendedEnabled)
-		return;
+		return TRUE;
 
 	if (amd64_iopl(TRUE) < 0)
 	{
 #ifndef __OpenBSD__
-		FatalError("%s: Failed to set IOPL for extended I/O",
+		xf86Msg(X_WARNING,"%s: Failed to set IOPL for extended I/O",
 			   "xf86EnableIO");
 #else
-		FatalError("%s: Failed to set IOPL for extended I/O\n%s",
+		xf86Msg(X_WARNING,"%s: Failed to set IOPL for extended I/O\n%s",
 			   "xf86EnableIO", SYSCTL_MSG);
 #endif
+		return FALSE;
 	}
 	ExtendedEnabled = TRUE;
 
-	return;
+	return TRUE;
 }
 	
 void
@@ -414,18 +416,19 @@ xf86DisableIO()
 #ifdef USE_DEV_IO
 static int IoFd = -1;
 
-void
+Bool
 xf86EnableIO()
 {
 	if (IoFd >= 0)
-		return;
+		return TRUE;
 
 	if ((IoFd = open("/dev/io", O_RDWR)) == -1)
 	{
-		FatalError("xf86EnableIO: "
+		xf86Msg(X_WARNING,"xf86EnableIO: "
 				"Failed to open /dev/io for extended I/O");
+		return FALSE;
 	}
-	return;
+	return TRUE;
 }
 
 void
