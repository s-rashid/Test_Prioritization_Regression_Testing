diff --git a/hw/xquartz/xpr/xpr.h b/hw/xquartz/xpr/xpr.h
index ec7e49d..fc614eb 100644
--- a/hw/xquartz/xpr/xpr.h
+++ b/hw/xquartz/xpr/xpr.h
@@ -2,6 +2,7 @@
  * Xplugin rootless implementation
  *
  * Copyright (c) 2003 Torrey T. Lyons. All Rights Reserved.
+ * Copyright (c) 2002-2012 Apple Inc. All rights reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a
  * copy of this software and associated documentation files (the "Software"),
@@ -38,19 +39,29 @@
 #undef DEBUG_LOG
 #define DEBUG_LOG(msg, args...) ASL_LOG(ASL_LEVEL_DEBUG, "xpr", msg, ##args)
 
-Bool QuartzModeBundleInit(void);
+Bool
+QuartzModeBundleInit(void);
 
-void AppleDRIExtensionInit(void);
-void xprAppleWMInit(void);
-Bool xprInit(ScreenPtr pScreen);
-Bool xprIsX11Window(int windowNumber);
-WindowPtr xprGetXWindow(xp_window_id wid);
+void
+AppleDRIExtensionInit(void);
+void
+xprAppleWMInit(void);
+Bool
+xprInit(ScreenPtr pScreen);
+Bool
+xprIsX11Window(int windowNumber);
+WindowPtr
+xprGetXWindow(xp_window_id wid);
 
-void xprHideWindows(Bool hide);
+void
+xprHideWindows(Bool hide);
 
-Bool QuartzInitCursor(ScreenPtr pScreen);
-void QuartzSuspendXCursor(ScreenPtr pScreen);
-void QuartzResumeXCursor(ScreenPtr pScreen);
+Bool
+QuartzInitCursor(ScreenPtr pScreen);
+void
+QuartzSuspendXCursor(ScreenPtr pScreen);
+void
+QuartzResumeXCursor(ScreenPtr pScreen);
 
 /* If we are rooted, we need the root window and desktop levels to be below
  * the menubar (24) but above native windows.  Normal window level is 0.
@@ -62,7 +73,6 @@ void QuartzResumeXCursor(ScreenPtr pScreen);
 static const int normal_window_levels[AppleWMNumWindowLevels + 1] = {
     0, 3, 4, 5, INT_MIN + 30, INT_MIN + 29,
 };
-
 static const int rooted_window_levels[AppleWMNumWindowLevels + 1] = {
     20, 21, 22, 23, 19, 18,
 };
