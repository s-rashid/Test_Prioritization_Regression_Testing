diff --git a/miext/sync/misync.c b/miext/sync/misync.c
index 50226d9..b1e2a36 100644
--- a/miext/sync/misync.c
+++ b/miext/sync/misync.c
@@ -54,7 +54,8 @@ miSyncScreenCreateFence(ScreenPtr pScreen, SyncFence* pFence,
     pFence->triggered = initially_triggered;
 }
 
-void miSyncScreenDestroyFence(ScreenPtr pScreen, SyncFence* pFence)
+void
+miSyncScreenDestroyFence(ScreenPtr pScreen, SyncFence * pFence)
 {
     (void)pScreen;
     (void)pFence;
@@ -100,6 +101,7 @@ void
 miSyncInitFence(ScreenPtr pScreen, SyncFence* pFence, Bool initially_triggered)
 {
     SyncScreenPrivPtr pScreenPriv = SYNC_SCREEN_PRIV(pScreen);
+
     static const SyncFenceFuncsRec miSyncFenceFuncs = {
 	&miSyncFenceSetTriggered,
 	&miSyncFenceReset,
@@ -123,8 +125,7 @@ miSyncDestroyFence(SyncFence* pFence)
 
     pFence->sync.beingDestroyed = TRUE;
     /* tell all the fence's triggers that the counter has been destroyed */
-    for (ptl = pFence->sync.pTriglist; ptl; ptl = pNext)
-    {
+    for (ptl = pFence->sync.pTriglist; ptl; ptl = pNext) {
 	(*ptl->pTrigger->CounterDestroyed)(ptl->pTrigger);
 	pNext = ptl->next;
 	free(ptl); /* destroy the trigger list as we go */
@@ -146,15 +147,15 @@ miSyncTriggerFence(SyncFence* pFence)
     XSyncIntToValue(&unused, 0L);
 
     /* run through triggers to see if any fired */
-    for (ptl = pFence->sync.pTriglist; ptl; ptl = pNext)
-    {
+    for (ptl = pFence->sync.pTriglist; ptl; ptl = pNext) {
 	pNext = ptl->next;
 	if ((*ptl->pTrigger->CheckTrigger)(ptl->pTrigger, unused))
 	    (*ptl->pTrigger->TriggerFired)(ptl->pTrigger);
     }
 }
 
-SyncScreenFuncsPtr miSyncGetScreenFuncs(ScreenPtr pScreen)
+SyncScreenFuncsPtr
+miSyncGetScreenFuncs(ScreenPtr pScreen)
 {
     SyncScreenPrivPtr pScreenPriv = SYNC_SCREEN_PRIV(pScreen);
 
