diff --git a/record/set.c b/record/set.c
index 8419e29..dcdb263 100644
--- a/record/set.c
+++ b/record/set.c
@@ -95,9 +95,7 @@ void *Xcalloc(size)
 #include "set.h"
 
 static int
-maxMemberInInterval(pIntervals, nIntervals)
-    RecordSetInterval *pIntervals;
-    int nIntervals;
+maxMemberInInterval(RecordSetInterval *pIntervals, int nIntervals)
 {
     int i;
     int maxMember = -1;
@@ -110,8 +108,7 @@ maxMemberInInterval(pIntervals, nIntervals)
 }
 
 static void
-NoopDestroySet(pSet)
-    RecordSetPtr pSet;
+NoopDestroySet(RecordSetPtr pSet)
 {
 }
 
@@ -128,16 +125,13 @@ typedef struct {
 #define BITS_PER_LONG (sizeof(unsigned long) * 8)
 
 static void
-BitVectorDestroySet(pSet)
-    RecordSetPtr pSet;
+BitVectorDestroySet(RecordSetPtr pSet)
 {
     xfree(pSet);
 }
 
 static unsigned long
-BitVectorIsMemberOfSet(pSet, pm)
-    RecordSetPtr pSet;
-    int pm;
+BitVectorIsMemberOfSet(RecordSetPtr pSet, int pm)
 {
     BitVectorSetPtr pbvs = (BitVectorSetPtr)pSet;
     unsigned long *pbitvec;
@@ -149,10 +143,7 @@ BitVectorIsMemberOfSet(pSet, pm)
 
 
 static int
-BitVectorFindBit(pSet, iterbit, bitval)
-    RecordSetPtr pSet;
-    int iterbit;
-    Bool bitval;
+BitVectorFindBit(RecordSetPtr pSet, int iterbit, Bool bitval)
 {
     BitVectorSetPtr pbvs = (BitVectorSetPtr)pSet;
     unsigned long *pbitvec = (unsigned long *)(&pbvs[1]);
@@ -198,10 +189,8 @@ BitVectorFindBit(pSet, iterbit, bitval)
 
 
 static RecordSetIteratePtr
-BitVectorIterateSet(pSet, pIter, pInterval)
-    RecordSetPtr pSet;
-    RecordSetIteratePtr pIter;
-    RecordSetInterval *pInterval;
+BitVectorIterateSet(RecordSetPtr pSet, RecordSetIteratePtr pIter,
+		    RecordSetInterval *pInterval)
 {
     int iterbit = (int)(long)pIter;
     int b;
@@ -222,11 +211,8 @@ RecordSetOperations BitVectorNoFreeOperations = {
     NoopDestroySet, BitVectorIsMemberOfSet, BitVectorIterateSet };
 
 static int
-BitVectorSetMemoryRequirements(pIntervals, nIntervals, maxMember, alignment)
-    RecordSetInterval *pIntervals;
-    int nIntervals;
-    int maxMember;
-    int *alignment;
+BitVectorSetMemoryRequirements(RecordSetInterval *pIntervals, int nIntervals,
+			       int maxMember, int *alignment)
 {
     int nlongs;
 
@@ -236,11 +222,8 @@ BitVectorSetMemoryRequirements(pIntervals, nIntervals, maxMember, alignment)
 }
 
 static RecordSetPtr
-BitVectorCreateSet(pIntervals, nIntervals, pMem, memsize)
-    RecordSetInterval *pIntervals;
-    int nIntervals;
-    void *pMem;
-    int memsize;
+BitVectorCreateSet(RecordSetInterval *pIntervals, int nIntervals,
+		   void *pMem, int memsize)
 {
     BitVectorSetPtr pbvs;
     int i, j;
@@ -288,16 +271,13 @@ typedef struct {
 } IntervalListSet, *IntervalListSetPtr;
 
 static void
-IntervalListDestroySet(pSet)
-    RecordSetPtr pSet;
+IntervalListDestroySet(RecordSetPtr pSet)
 {
     xfree(pSet);
 }
 
 static unsigned long
-IntervalListIsMemberOfSet(pSet, pm)
-    RecordSetPtr pSet;
-    int pm;
+IntervalListIsMemberOfSet(RecordSetPtr pSet, int pm)
 {
     IntervalListSetPtr prls = (IntervalListSetPtr)pSet;
     RecordSetInterval *pInterval = (RecordSetInterval *)(&prls[1]);
@@ -317,10 +297,8 @@ IntervalListIsMemberOfSet(pSet, pm)
 
 
 static RecordSetIteratePtr
-IntervalListIterateSet(pSet, pIter, pIntervalReturn)
-    RecordSetPtr pSet;
-    RecordSetIteratePtr pIter;
-    RecordSetInterval *pIntervalReturn;
+IntervalListIterateSet(RecordSetPtr pSet, RecordSetIteratePtr pIter,
+		       RecordSetInterval *pIntervalReturn)
 {
     RecordSetInterval *pInterval = (RecordSetInterval *)pIter;
     IntervalListSetPtr prls = (IntervalListSetPtr)pSet;
@@ -346,22 +324,16 @@ RecordSetOperations IntervalListNoFreeOperations = {
     NoopDestroySet, IntervalListIsMemberOfSet, IntervalListIterateSet };
 
 static int
-IntervalListMemoryRequirements(pIntervals, nIntervals, maxMember, alignment)
-    RecordSetInterval *pIntervals;
-    int nIntervals;
-    int maxMember;
-    int *alignment;
+IntervalListMemoryRequirements(RecordSetInterval *pIntervals, int nIntervals,
+			       int maxMember, int *alignment)
 {
     *alignment = sizeof(unsigned long);
     return sizeof(IntervalListSet) + nIntervals * sizeof(RecordSetInterval);
 }
 
 static RecordSetPtr
-IntervalListCreateSet(pIntervals, nIntervals, pMem, memsize)
-    RecordSetInterval *pIntervals;
-    int nIntervals;
-    void *pMem;
-    int memsize;
+IntervalListCreateSet(RecordSetInterval *pIntervals, int nIntervals,
+		      void *pMem, int memsize)
 {
     IntervalListSetPtr prls;
     int i, j, k;
@@ -454,11 +426,9 @@ typedef RecordSetPtr (*RecordCreateSetProcPtr)(
 );
 
 static int
-_RecordSetMemoryRequirements(pIntervals, nIntervals, alignment, ppCreateSet)
-    RecordSetInterval *pIntervals;
-    int nIntervals;
-    int *alignment;
-    RecordCreateSetProcPtr *ppCreateSet;
+_RecordSetMemoryRequirements(RecordSetInterval *pIntervals, int nIntervals,
+			     int *alignment,
+			     RecordCreateSetProcPtr *ppCreateSet)
 {
     int bmsize, rlsize, bma, rla;
     int maxMember;
