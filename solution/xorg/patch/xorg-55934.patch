diff --git a/include/misc.h b/include/misc.h
index 3f57f4b..41c1333 100644
--- a/include/misc.h
+++ b/include/misc.h
@@ -22,7 +22,6 @@ Except as contained in this notice, the name of The Open Group shall not be
 used in advertising or otherwise to promote the sale, use or other dealings
 in this Software without prior written authorization from The Open Group.
 
-
 Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts.
 
                         All Rights Reserved
@@ -103,6 +102,7 @@ typedef uint32_t ATOM;
 
 #ifndef _XTYPEDEF_CALLBACKLISTPTR
 typedef struct _CallbackList *CallbackListPtr; /* also in dix.h */
+
 #define _XTYPEDEF_CALLBACKLISTPTR
 #endif
 
@@ -122,18 +122,17 @@ typedef struct _xReq *xReqPtr;
 #define USE_BACKGROUND_PIXEL 3
 #define USE_BORDER_PIXEL 3
 
-
 /* byte swap a 32-bit literal */
-static inline uint32_t lswapl(uint32_t x)
+static inline uint32_t
+lswapl(uint32_t x)
 {
 	return  ((x & 0xff) << 24) |
-		((x & 0xff00) << 8) |
-		((x & 0xff0000) >> 8) |
-		((x >> 24) & 0xff);
+        ((x & 0xff00) << 8) | ((x & 0xff0000) >> 8) | ((x >> 24) & 0xff);
 }
 
 /* byte swap a 16-bit literal */
-static inline uint16_t lswaps(uint16_t x)
+static inline uint16_t
+lswaps(uint16_t x)
 {
 	return ((x & 0xff) << 8) | ((x >> 8) & 0xff);
 }
@@ -201,9 +200,11 @@ static inline uint16_t lswaps(uint16_t x)
  * @return The number of bytes needed to hold bits.
  */
 static inline int
-bits_to_bytes(const int bits) {
+bits_to_bytes(const int bits)
+{
     return ((bits + 7) >> 3);
 }
+
 /**
  * Calculate the number of 4-byte units needed to hold the given number of
  * bytes.
@@ -211,7 +212,8 @@ bits_to_bytes(const int bits) {
  * @return The number of 4-byte units needed to hold bytes.
  */
 static inline int
-bytes_to_int32(const int bytes) {
+bytes_to_int32(const int bytes)
+{
     return (((bytes) + 3) >> 2);
 }
 
@@ -221,12 +223,12 @@ bytes_to_int32(const int bytes) {
  * @return The closest multiple of 4 that is equal or higher than bytes.
  */
 static inline int
-pad_to_int32(const int bytes) {
+pad_to_int32(const int bytes)
+{
     return (((bytes) + 3) & ~3);
 }
 
-extern char**
-xstrtokenize(const char *str, const char* separators);
+extern char **xstrtokenize(const char *str, const char *separators);
 
 /**
  * Compare the two version numbers comprising of major.minor.
@@ -264,24 +266,29 @@ version_compare(uint16_t a_major, uint16_t a_minor,
     SwapLongs((CARD32 *)(stuff + 1), LengthRestL(stuff))
 
 #if defined(__GNUC__) && ((__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
-void __attribute__((error("wrong sized variable passed to swap"))) wrong_size(void);
+void __attribute__ ((error("wrong sized variable passed to swap")))
+wrong_size(void);
 #else
-static inline void wrong_size(void)
+static inline void
+wrong_size(void)
 {
 }
 #endif
 
 #if !(defined(__GNUC__) || (defined(__SUNPRO_C) && (__SUNPRO_C >= 0x590)))
-static inline int __builtin_constant_p(int x)
+static inline int
+__builtin_constant_p(int x)
 {
 	return 0;
 }
 #endif
 
 /* byte swap a 32-bit value */
-static inline void swap_uint32(uint32_t *x)
+static inline void
+swap_uint32(uint32_t * x)
 {
 	char n = ((char *) x)[0];
+
 	((char *) x)[0] = ((char *) x)[3];
 	((char *) x)[3] = n;
 	n = ((char *) x)[1];
@@ -299,9 +306,11 @@ static inline void swap_uint32(uint32_t *x)
 	} while (0)
 
 /* byte swap a 16-bit value */
-static inline void swap_uint16(uint16_t *x)
+static inline void
+swap_uint16(uint16_t * x)
 {
 	char  n = ((char *) x)[0];
+
 	((char *) x)[0] = ((char *) x)[1];
 	((char *) x)[1] = n;
 }
@@ -329,18 +338,13 @@ static inline void swap_uint16(uint16_t *x)
 		(dst) = lswaps((src)); \
 	} while (0)
 
-extern _X_EXPORT void SwapLongs(
-    CARD32 *list,
-    unsigned long count);
+extern _X_EXPORT void SwapLongs(CARD32 *list, unsigned long count);
 
-extern _X_EXPORT void SwapShorts(
-    short *list,
-    unsigned long count);
+extern _X_EXPORT void SwapShorts(short *list, unsigned long count);
 
 extern _X_EXPORT void MakePredeclaredAtoms(void);
 
-extern _X_EXPORT int Ones(
-    unsigned long /*mask*/);
+extern _X_EXPORT int Ones(unsigned long /*mask */ );
 
 typedef struct _xPoint *DDXPointPtr;
 typedef struct pixman_box16 *BoxPtr;
@@ -355,6 +359,7 @@ typedef struct _GrabRec *GrabPtr;
 
 #ifndef _XTYPEDEF_CHARINFOPTR
 typedef struct _CharInfo *CharInfoPtr; /* also in fonts/include/font.h */
+
 #define _XTYPEDEF_CHARINFOPTR
 #endif
 
