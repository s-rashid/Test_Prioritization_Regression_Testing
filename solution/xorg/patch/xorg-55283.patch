diff --git a/hw/dmx/glxProxy/compsize.c b/hw/dmx/glxProxy/compsize.c
index 5a5d5d0..c204d3d 100644
--- a/hw/dmx/glxProxy/compsize.c
+++ b/hw/dmx/glxProxy/compsize.c
@@ -31,48 +31,79 @@
 #include <GL/gl.h>
 #include "compsize.h"
 
-GLint __glFogiv_size(GLenum pname)
+GLint
+__glFogiv_size(GLenum pname)
 {
     switch (pname) {
-      case GL_FOG_COLOR:	return 4;
-      case GL_FOG_DENSITY:	return 1;
-      case GL_FOG_END:		return 1;
-      case GL_FOG_MODE:		return 1;
-      case GL_FOG_INDEX:	return 1;
-      case GL_FOG_START:	return 1;
+    case GL_FOG_COLOR:
+        return 4;
+    case GL_FOG_DENSITY:
+        return 1;
+    case GL_FOG_END:
+        return 1;
+    case GL_FOG_MODE:
+        return 1;
+    case GL_FOG_INDEX:
+        return 1;
+    case GL_FOG_START:
+        return 1;
       default:
 	return 0;
     }
 }
 
-GLint __glFogfv_size(GLenum pname)
+GLint
+__glFogfv_size(GLenum pname)
 {
     return __glFogiv_size(pname);
 }
 
-GLint __glCallLists_size(GLsizei n, GLenum type)
+GLint
+__glCallLists_size(GLsizei n, GLenum type)
 {
     GLint size;
 
-    if (n < 0) return 0;
+    if (n < 0)
+        return 0;
     switch (type) {
-      case GL_BYTE:		size = 1; break;
-      case GL_UNSIGNED_BYTE:	size = 1; break;
-      case GL_SHORT:		size = 2; break;
-      case GL_UNSIGNED_SHORT:	size = 2; break;
-      case GL_INT:		size = 4; break;
-      case GL_UNSIGNED_INT:	size = 4; break;
-      case GL_FLOAT:		size = 4; break;
-      case GL_2_BYTES:		size = 2; break;
-      case GL_3_BYTES:		size = 3; break;
-      case GL_4_BYTES:		size = 4; break;
+    case GL_BYTE:
+        size = 1;
+        break;
+    case GL_UNSIGNED_BYTE:
+        size = 1;
+        break;
+    case GL_SHORT:
+        size = 2;
+        break;
+    case GL_UNSIGNED_SHORT:
+        size = 2;
+        break;
+    case GL_INT:
+        size = 4;
+        break;
+    case GL_UNSIGNED_INT:
+        size = 4;
+        break;
+    case GL_FLOAT:
+        size = 4;
+        break;
+    case GL_2_BYTES:
+        size = 2;
+        break;
+    case GL_3_BYTES:
+        size = 3;
+        break;
+    case GL_4_BYTES:
+        size = 4;
+        break;
       default:
 	return 0;
     }
     return n * size;
 }
 
-GLint __glDrawPixels_size(GLenum format, GLenum type, GLsizei w, GLsizei h)
+GLint
+__glDrawPixels_size(GLenum format, GLenum type, GLsizei w, GLsizei h)
 {
     GLint elements, esize;
     
@@ -106,7 +137,8 @@ GLint __glDrawPixels_size(GLenum format, GLenum type, GLsizei w, GLsizei h)
       case GL_BITMAP:
 	if (format == GL_COLOR_INDEX || format == GL_STENCIL_INDEX) {
 	    return (h * ((w+7)/8));
-	} else {
+        }
+        else {
 	    return 0;
 	}
       case GL_BYTE:
@@ -149,12 +181,14 @@ GLint __glDrawPixels_size(GLenum format, GLenum type, GLsizei w, GLsizei h)
     return elements * esize * w * h;
 }
 
-GLint __glBitmap_size(GLsizei w, GLsizei h)
+GLint
+__glBitmap_size(GLsizei w, GLsizei h)
 {
     return __glDrawPixels_size(GL_COLOR_INDEX, GL_BITMAP, w, h);
 }
 
-GLint __glTexGendv_size(GLenum e)
+GLint
+__glTexGendv_size(GLenum e)
 {
     switch (e) {
       case GL_TEXTURE_GEN_MODE:
@@ -167,17 +201,20 @@ GLint __glTexGendv_size(GLenum e)
     }
 }
 
-GLint __glTexGenfv_size(GLenum e)
+GLint
+__glTexGenfv_size(GLenum e)
 {
     return __glTexGendv_size(e);
 }
 
-GLint __glTexGeniv_size(GLenum e)
+GLint
+__glTexGeniv_size(GLenum e)
 {
     return __glTexGendv_size(e);
 }
 
-GLint __glTexParameterfv_size(GLenum e)
+GLint
+__glTexParameterfv_size(GLenum e)
 {
     switch (e) {
       case GL_TEXTURE_WRAP_S:
@@ -200,12 +237,14 @@ GLint __glTexParameterfv_size(GLenum e)
     }
 }
 
-GLint __glTexParameteriv_size(GLenum e)
+GLint
+__glTexParameteriv_size(GLenum e)
 {
     return __glTexParameterfv_size(e);
 }
 
-GLint __glTexEnvfv_size(GLenum e)
+GLint
+__glTexEnvfv_size(GLenum e)
 {
     switch (e) {
       case GL_TEXTURE_ENV_MODE:
@@ -217,16 +256,19 @@ GLint __glTexEnvfv_size(GLenum e)
     }
 }
 
-GLint __glTexEnviv_size(GLenum e)
+GLint
+__glTexEnviv_size(GLenum e)
 {
     return __glTexEnvfv_size(e);
 }
 
-GLint __glTexImage1D_size(GLenum format, GLenum type, GLsizei w)
+GLint
+__glTexImage1D_size(GLenum format, GLenum type, GLsizei w)
 {
     GLint elements, esize;
 
-    if (w < 0) return 0;
+    if (w < 0)
+        return 0;
     switch (format) {
       case GL_COLOR_INDEX:
 	elements = 1;
@@ -255,7 +297,8 @@ GLint __glTexImage1D_size(GLenum format, GLenum type, GLsizei w)
       case GL_BITMAP:
 	if (format == GL_COLOR_INDEX) {
 	    return (w+7)/8;
-	} else {
+        }
+        else {
 	    return 0;
 	}
       case GL_BYTE:
@@ -298,12 +341,15 @@ GLint __glTexImage1D_size(GLenum format, GLenum type, GLsizei w)
     return elements * esize * w;
 }
 
-GLint __glTexImage2D_size(GLenum format, GLenum type, GLsizei w, GLsizei h)
+GLint
+__glTexImage2D_size(GLenum format, GLenum type, GLsizei w, GLsizei h)
 {
     GLint elements, esize;
 
-    if (w < 0) return 0;
-    if (h < 0) return 0;
+    if (w < 0)
+        return 0;
+    if (h < 0)
+        return 0;
     switch (format) {
       case GL_COLOR_INDEX:
 	elements = 1;
@@ -332,7 +378,8 @@ GLint __glTexImage2D_size(GLenum format, GLenum type, GLsizei w, GLsizei h)
       case GL_BITMAP:
 	if (format == GL_COLOR_INDEX) {
 	    return (h * ((w+7)/8));
-	} else {
+        }
+        else {
 	    return 0;
 	}
       case GL_BYTE:
@@ -375,14 +422,17 @@ GLint __glTexImage2D_size(GLenum format, GLenum type, GLsizei w, GLsizei h)
     return elements * esize * w * h;
 }
 
-GLint __glTexImage3D_size(GLenum format, GLenum type, GLsizei w, GLsizei h,
-			  GLsizei d)
+GLint
+__glTexImage3D_size(GLenum format, GLenum type, GLsizei w, GLsizei h, GLsizei d)
 {
     GLint elements, esize;
 
-    if (w < 0) return 0;
-    if (h < 0) return 0;
-    if (d < 0) return 0;
+    if (w < 0)
+        return 0;
+    if (h < 0)
+        return 0;
+    if (d < 0)
+        return 0;
     switch (format) {
       case GL_COLOR_INDEX:
 	elements = 1;
@@ -411,7 +461,8 @@ GLint __glTexImage3D_size(GLenum format, GLenum type, GLsizei w, GLsizei h,
       case GL_BITMAP:
 	if (format == GL_COLOR_INDEX) {
 	    return (d * (h * ((w+7)/8)));
-	} else {
+        }
+        else {
 	    return 0;
 	}
       case GL_BYTE:
@@ -454,67 +505,95 @@ GLint __glTexImage3D_size(GLenum format, GLenum type, GLsizei w, GLsizei h,
     return elements * esize * w * h * d;
 }
 
-GLint __glLightfv_size(GLenum pname)
+GLint
+__glLightfv_size(GLenum pname)
 {
     switch (pname) {
-      case GL_SPOT_EXPONENT:		return 1;
-      case GL_SPOT_CUTOFF:		return 1;
-      case GL_AMBIENT:			return 4;
-      case GL_DIFFUSE:			return 4;
-      case GL_SPECULAR:			return 4;
-      case GL_POSITION:			return 4;
-      case GL_SPOT_DIRECTION:		return 3;
-      case GL_CONSTANT_ATTENUATION:	return 1;
-      case GL_LINEAR_ATTENUATION:	return 1;
-      case GL_QUADRATIC_ATTENUATION:	return 1;
+    case GL_SPOT_EXPONENT:
+        return 1;
+    case GL_SPOT_CUTOFF:
+        return 1;
+    case GL_AMBIENT:
+        return 4;
+    case GL_DIFFUSE:
+        return 4;
+    case GL_SPECULAR:
+        return 4;
+    case GL_POSITION:
+        return 4;
+    case GL_SPOT_DIRECTION:
+        return 3;
+    case GL_CONSTANT_ATTENUATION:
+        return 1;
+    case GL_LINEAR_ATTENUATION:
+        return 1;
+    case GL_QUADRATIC_ATTENUATION:
+        return 1;
       default:
 	return 0;
     }
 }
 
-GLint __glLightiv_size(GLenum pname)
+GLint
+__glLightiv_size(GLenum pname)
 {
     return __glLightfv_size(pname);
 }
 
-GLint __glLightModelfv_size(GLenum pname)
+GLint
+__glLightModelfv_size(GLenum pname)
 {
     switch (pname) {
-      case GL_LIGHT_MODEL_AMBIENT:		return 4;
-      case GL_LIGHT_MODEL_LOCAL_VIEWER:		return 1;
-      case GL_LIGHT_MODEL_TWO_SIDE:		return 1;
-      case GL_LIGHT_MODEL_COLOR_CONTROL:	return 1;
+    case GL_LIGHT_MODEL_AMBIENT:
+        return 4;
+    case GL_LIGHT_MODEL_LOCAL_VIEWER:
+        return 1;
+    case GL_LIGHT_MODEL_TWO_SIDE:
+        return 1;
+    case GL_LIGHT_MODEL_COLOR_CONTROL:
+        return 1;
       default:
 	return 0;
     }
 }
 
-GLint __glLightModeliv_size(GLenum pname)
+GLint
+__glLightModeliv_size(GLenum pname)
 {
     return __glLightModelfv_size(pname);
 }
 
-GLint __glMaterialfv_size(GLenum pname)
+GLint
+__glMaterialfv_size(GLenum pname)
 {
     switch (pname) {
-      case GL_SHININESS:		return 1;
-      case GL_EMISSION:			return 4;
-      case GL_AMBIENT:			return 4;
-      case GL_DIFFUSE:			return 4;
-      case GL_SPECULAR:			return 4;
-      case GL_AMBIENT_AND_DIFFUSE:	return 4;
-      case GL_COLOR_INDEXES:		return 3;
+    case GL_SHININESS:
+        return 1;
+    case GL_EMISSION:
+        return 4;
+    case GL_AMBIENT:
+        return 4;
+    case GL_DIFFUSE:
+        return 4;
+    case GL_SPECULAR:
+        return 4;
+    case GL_AMBIENT_AND_DIFFUSE:
+        return 4;
+    case GL_COLOR_INDEXES:
+        return 3;
       default:
 	return 0;
     }
 }
 
-GLint __glMaterialiv_size(GLenum pname)
+GLint
+__glMaterialiv_size(GLenum pname)
 {
     return __glMaterialfv_size(pname);
 }
 
-GLint __glColorTableParameterfv_size(GLenum pname)
+GLint
+__glColorTableParameterfv_size(GLenum pname)
 {
     switch (pname) {
       case GL_COLOR_TABLE_FORMAT:
@@ -534,12 +613,14 @@ GLint __glColorTableParameterfv_size(GLenum pname)
     }
 }
 
-GLint __glColorTableParameteriv_size(GLenum pname)
+GLint
+__glColorTableParameteriv_size(GLenum pname)
 {
     return __glColorTableParameterfv_size(pname);
 }
 
-GLint __glConvolutionParameterfv_size(GLenum pname)
+GLint
+__glConvolutionParameterfv_size(GLenum pname)
 {
     switch(pname) {
       case GL_CONVOLUTION_BORDER_MODE:
@@ -553,7 +634,8 @@ GLint __glConvolutionParameterfv_size(GLenum pname)
     }
 }
 
-GLint __glConvolutionParameteriv_size(GLenum pname)
+GLint
+__glConvolutionParameteriv_size(GLenum pname)
 {
     return __glConvolutionParameterfv_size(pname);
 }
