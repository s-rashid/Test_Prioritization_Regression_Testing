diff --git a/glx/glxserver.h b/glx/glxserver.h
index 6bcf7d3..7076848 100644
--- a/glx/glxserver.h
+++ b/glx/glxserver.h
@@ -79,8 +79,7 @@ extern __GLXclientState *glxGetClient(ClientPtr pClient);
 
 void GlxExtensionInit(void);
 
-void GlxSetVisualConfigs(int nconfigs, 
-                         void *configs, void **privates);
+void GlxSetVisualConfigs(int nconfigs, void *configs, void **privates);
 
 void __glXScreenInitVisuals(__GLXscreen *screen);
 
@@ -88,7 +87,8 @@ void __glXScreenInitVisuals(__GLXscreen *screen);
 ** The last context used (from the server's persective) is cached.
 */
 extern __GLXcontext *__glXLastContext;
-extern __GLXcontext *__glXForceCurrent(__GLXclientState*, GLXContextTag, int*);
+extern __GLXcontext *__glXForceCurrent(__GLXclientState *, GLXContextTag,
+                                       int *);
 
 int __glXError(int error);
 
@@ -198,20 +198,21 @@ extern char *__glXcombine_strings(const char *, const char *);
 
 extern void __glXSwapMakeCurrentReply(ClientPtr client,
 				      xGLXMakeCurrentReply *reply);
-extern void __glXSwapIsDirectReply(ClientPtr client,
-				   xGLXIsDirectReply *reply);
+extern void __glXSwapIsDirectReply(ClientPtr client, xGLXIsDirectReply * reply);
 extern void __glXSwapQueryVersionReply(ClientPtr client,
 				       xGLXQueryVersionReply *reply);
 extern void __glXSwapQueryContextInfoEXTReply(ClientPtr client,
-					      xGLXQueryContextInfoEXTReply *reply,
-					      int *buf);
+                                              xGLXQueryContextInfoEXTReply *
+                                              reply, int *buf);
 extern void __glXSwapGetDrawableAttributesReply(ClientPtr client,
-						xGLXGetDrawableAttributesReply *reply, CARD32 *buf);
+                                                xGLXGetDrawableAttributesReply *
+                                                reply, CARD32 *buf);
 extern void glxSwapQueryExtensionsStringReply(ClientPtr client,
-				xGLXQueryExtensionsStringReply *reply, char *buf);
+                                              xGLXQueryExtensionsStringReply *
+                                              reply, char *buf);
 extern void glxSwapQueryServerStringReply(ClientPtr client,
-				xGLXQueryServerStringReply *reply, char *buf);
-
+                                          xGLXQueryServerStringReply * reply,
+                                          char *buf);
 
 /*
  * Routines for computing the size of variably-sized rendering commands.
@@ -220,8 +221,8 @@ extern void glxSwapQueryServerStringReply(ClientPtr client,
 extern int __glXTypeSize(GLenum enm);
 extern int __glXImageSize(GLenum format, GLenum type,
     GLenum target, GLsizei w, GLsizei h, GLsizei d,
-    GLint imageHeight, GLint rowLength, GLint skipImages, GLint skipRows,
-    GLint alignment);
+                          GLint imageHeight, GLint rowLength, GLint skipImages,
+                          GLint skipRows, GLint alignment);
 
 extern unsigned glxMajorVersion;
 extern unsigned glxMinorVersion;
