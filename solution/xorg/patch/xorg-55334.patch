diff --git a/hw/dmx/input/dmxmotion.c b/hw/dmx/input/dmxmotion.c
index 1aae5fe..1642894 100644
--- a/hw/dmx/input/dmxmotion.c
+++ b/hw/dmx/input/dmxmotion.c
@@ -50,7 +50,8 @@
 #define OFFSET(offset,element) ((offset) * (numAxes + 1) + (element))
 
 /** Return size of motion buffer. \see DMX_MOTION_SIZE */
-int dmxPointerGetMotionBufferSize(void)
+int
+dmxPointerGetMotionBufferSize(void)
 {
     return DMX_MOTION_SIZE;
 }
@@ -71,11 +72,11 @@ int dmxPointerGetMotionBufferSize(void)
  * only has to support extension devices using the polymorphic coords.
  * Because compatibility with miPointerGetMotionEvents is not possible,
  * it is not provided. */
-int dmxPointerGetMotionEvents(DeviceIntPtr pDevice,
+int
+dmxPointerGetMotionEvents(DeviceIntPtr pDevice,
                               xTimecoord *coords,
                               unsigned long start,
-                              unsigned long stop,
-                              ScreenPtr pScreen)
+                          unsigned long stop, ScreenPtr pScreen)
 {
     GETDMXLOCALFROMPDEVICE;
     int           numAxes = pDevice->valuator->numAxes;
@@ -83,15 +84,18 @@ int dmxPointerGetMotionEvents(DeviceIntPtr pDevice,
     int           count   = 0;
     int           i, j;
 
-    if (!dmxLocal->history) return 0;
+    if (!dmxLocal->history)
+        return 0;
     for (i = dmxLocal->head; i != dmxLocal->tail;) {
-        if (dmxLocal->history[OFFSET(i,0)] >= stop) break;
+        if (dmxLocal->history[OFFSET(i, 0)] >= stop)
+            break;
         if (dmxLocal->history[OFFSET(i,0)] >= start) {
             for (j = 0; j < numAxes + 1; j++)
                 c[OFFSET(count,j)] = dmxLocal->history[OFFSET(i,j)];
             ++count;
         }
-        if (++i >= DMX_MOTION_SIZE) i = 0;
+        if (++i >= DMX_MOTION_SIZE)
+            i = 0;
     }
     return count;
 }
@@ -99,7 +103,8 @@ int dmxPointerGetMotionEvents(DeviceIntPtr pDevice,
 /** This routine adds an event to the motion history.  A similar
  * function is performed by miPointerMove for the mi versions of these
  * routines. */
-void dmxPointerPutMotionEvent(DeviceIntPtr pDevice,
+void
+dmxPointerPutMotionEvent(DeviceIntPtr pDevice,
                               int firstAxis, int axesCount, int *v,
                               unsigned long time)
 {
@@ -114,10 +119,13 @@ void dmxPointerPutMotionEvent(DeviceIntPtr pDevice,
         dmxLocal->head      = 0;
         dmxLocal->tail      = 0;
         dmxLocal->valuators = calloc(sizeof(*dmxLocal->valuators), numAxes);
-    } else {
-        if (++dmxLocal->tail >= DMX_MOTION_SIZE) dmxLocal->tail = 0;
+    }
+    else {
+        if (++dmxLocal->tail >= DMX_MOTION_SIZE)
+            dmxLocal->tail = 0;
         if (dmxLocal->head == dmxLocal->tail)
-            if (++dmxLocal->head >= DMX_MOTION_SIZE) dmxLocal->head = 0;
+            if (++dmxLocal->head >= DMX_MOTION_SIZE)
+                dmxLocal->head = 0;
     }
 
     dmxLocal->history[OFFSET(dmxLocal->tail,0)] = time;
