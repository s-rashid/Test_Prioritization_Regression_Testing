diff --git a/hw/xfree86/dri/dri.c b/hw/xfree86/dri/dri.c
index 3d7724d..faddfe6 100644
--- a/hw/xfree86/dri/dri.c
+++ b/hw/xfree86/dri/dri.c
@@ -73,10 +73,6 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 #define PCI_BUS_NO_DOMAIN(bus) ((bus) & 0xffu)
 
-#if !defined(PANORAMIX)
-extern Bool noPanoramiXExtension;
-#endif
-
 static int DRIEntPrivIndex = -1;
 static int DRIScreenPrivKeyIndex;
 static DevPrivateKey DRIScreenPrivKey = &DRIScreenPrivKeyIndex;
@@ -321,7 +317,6 @@ DRIScreenInit(ScreenPtr pScreen, DRIInfoPtr pDRIInfo, int *pDRMFD)
     drm_context_t *       reserved;
     int                 reserved_count;
     int                 i;
-    Bool                xineramaInCore = FALSE;
     DRIEntPrivPtr       pDRIEntPriv;
     ScrnInfoPtr         pScrn = xf86Screens[pScreen->myNum];
     DRIContextFlags	flags    = 0;
@@ -340,20 +335,17 @@ DRIScreenInit(ScreenPtr pScreen, DRIInfoPtr pDRIInfo, int *pDRMFD)
 	return FALSE;
     }
 		
+#ifdef PANORAMIX
     /*
      * If Xinerama is on, don't allow DRI to initialise.  It won't be usable
      * anyway.
      */
-    if (xf86LoaderCheckSymbol("noPanoramiXExtension"))
-	xineramaInCore = TRUE;
-
-    if (xineramaInCore) {
 	if (!noPanoramiXExtension) {
 	    DRIDrvMsg(pScreen->myNum, X_WARNING,
 		"Direct rendering is not supported when Xinerama is enabled\n");
 	    return FALSE;
 	}
-    }
+#endif
 
     if (!DRIOpenDRMMaster(pScrn, pDRIInfo->SAREASize,
 			  pDRIInfo->busIdString,
