diff --git a/hw/xfree86/xaa/xaaStateChange.c b/hw/xfree86/xaa/xaaStateChange.c
index 189441d..0218cb5 100644
--- a/hw/xfree86/xaa/xaaStateChange.c
+++ b/hw/xfree86/xaa/xaaStateChange.c
@@ -111,24 +111,24 @@ typedef struct _XAAStateWrapRec {
 				    int fSorted, XAACacheInfoPtr pCache,
 				    int xorg, int yorg);
    void (*FillCacheBltSpans)(ScrnInfoPtr pScrn, int rop,
-			     unsigned int planemask, int n, DDXPointPtr points,
-			     int *widths, int fSorted, XAACacheInfoPtr pCache,
-			     int xorg, int yorg);
+                               unsigned int planemask, int n,
+                               DDXPointPtr points, int *widths, int fSorted,
+                               XAACacheInfoPtr pCache, int xorg, int yorg);
    void (*FillColorExpandSpans)(ScrnInfoPtr pScrn, int fg, int bg, int rop,
 				unsigned int planemask, int n,
 				DDXPointPtr points, int *widths, int fSorted,
 				int xorg, int yorg, PixmapPtr pPix);
    void (*FillCacheExpandSpans)(ScrnInfoPtr pScrn, int fg, int bg, int rop,
-				unsigned int planemask, int n, DDXPointPtr ppt,
-				int *pwidth, int fSorted, int xorg, int yorg,
-				PixmapPtr pPix);
+                                  unsigned int planemask, int n,
+                                  DDXPointPtr ppt, int *pwidth, int fSorted,
+                                  int xorg, int yorg, PixmapPtr pPix);
    void (*TEGlyphRenderer)(ScrnInfoPtr pScrn, int x, int y, int w, int h, 
 			   int skipleft, int startline, unsigned int **glyphs,
 			   int glyphWidth, int fg, int bg, int rop, 
 			   unsigned planemask);
    void (*NonTEGlyphRenderer)(ScrnInfoPtr pScrn, int x, int y, int n,
-			      NonTEGlyphPtr glyphs, BoxPtr pbox,
-			      int fg, int rop, unsigned int planemask);
+                                NonTEGlyphPtr glyphs, BoxPtr pbox, int fg,
+                                int rop, unsigned int planemask);
    void (*WritePixmap) (ScrnInfoPtr pScrn, int x, int y, int w, int h,
 			unsigned char *src, int srcwidth, int rop,
 			unsigned int planemask, int transparency_color,
@@ -263,16 +263,18 @@ typedef struct _XAAStateWrapRec {
    Bool (*SetupForCPUToScreenAlphaTexture2)(ScrnInfoPtr pScrn, int op,
                                            CARD16 red, CARD16 green,
                                            CARD16 blue, CARD16 alpha,
-					   CARD32 maskFormat, CARD32 dstFormat,
-                                           CARD8 *alphaPtr, int alphaPitch,
-					   int width, int height, int flags);
+                                              CARD32 maskFormat,
+                                              CARD32 dstFormat, CARD8 *alphaPtr,
+                                              int alphaPitch, int width,
+                                              int height, int flags);
    Bool (*SetupForCPUToScreenTexture2)(ScrnInfoPtr pScrn, int op,
                                       CARD32 srcFormat, CARD32 dstFormat,
-                                      CARD8 *texPtr, int texPitch,
-                                      int width, int height, int flags);
+                                         CARD8 *texPtr, int texPitch, int width,
+                                         int height, int flags);
 } XAAStateWrapRec, *XAAStateWrapPtr;
 
 static DevPrivateKeyRec XAAStateKeyRec;
+
 #define XAAStateKey (&XAAStateKeyRec)
 
 /* Wrap functions start here */
@@ -316,7 +318,8 @@ static DevPrivateKeyRec XAAStateKeyRec;
 	if(need_change == 1) (*pStatePriv->RestoreAccelState)(pScrn);\
 }
 
-static void XAAStateWrapSync(ScrnInfoPtr pScrn)
+static void
+XAAStateWrapSync(ScrnInfoPtr pScrn)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
@@ -324,18 +327,20 @@ static void XAAStateWrapSync(ScrnInfoPtr pScrn)
    (*pStatePriv->Sync)(pScrn);
 }
 
-static void XAAStateWrapSetupForScreenToScreenCopy(ScrnInfoPtr pScrn, int xdir, int ydir,
+static void
+XAAStateWrapSetupForScreenToScreenCopy(ScrnInfoPtr pScrn, int xdir, int ydir,
 						   int rop, unsigned int planemask, 
 						   int trans_color)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
    
-   (*pStatePriv->SetupForScreenToScreenCopy)(pScrn, xdir, ydir, rop, planemask, 
-					     trans_color);
+    (*pStatePriv->SetupForScreenToScreenCopy) (pScrn, xdir, ydir, rop,
+                                               planemask, trans_color);
 }
 
-static void XAAStateWrapSetupForSolidFill(ScrnInfoPtr pScrn, int color, int rop, 
+static void
+XAAStateWrapSetupForSolidFill(ScrnInfoPtr pScrn, int color, int rop,
 					  unsigned int planemask)
 {
    GET_STATEPRIV_PSCRN(pScrn);
@@ -344,7 +349,8 @@ static void XAAStateWrapSetupForSolidFill(ScrnInfoPtr pScrn, int color, int rop,
    (*pStatePriv->SetupForSolidFill)(pScrn, color, rop, planemask);
 }
 
-static void XAAStateWrapSetupForSolidLine(ScrnInfoPtr pScrn,int color,int rop,
+static void
+XAAStateWrapSetupForSolidLine(ScrnInfoPtr pScrn, int color, int rop,
 					  unsigned int planemask)
 {
    GET_STATEPRIV_PSCRN(pScrn);
@@ -353,17 +359,20 @@ static void XAAStateWrapSetupForSolidLine(ScrnInfoPtr pScrn,int color,int rop,
    (*pStatePriv->SetupForSolidLine)(pScrn, color, rop, planemask);
 }
 
-static void XAAStateWrapSetupForDashedLine(ScrnInfoPtr pScrn, int fg, int bg, int rop,
+static void
+XAAStateWrapSetupForDashedLine(ScrnInfoPtr pScrn, int fg, int bg, int rop,
 					   unsigned int planemask, int length,
 					   unsigned char *pattern)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->SetupForDashedLine)(pScrn, fg, bg, rop, planemask, length, pattern);
+    (*pStatePriv->SetupForDashedLine) (pScrn, fg, bg, rop, planemask, length,
+                                       pattern);
 }
 
-static void XAAStateWrapSetClippingRectangle(ScrnInfoPtr pScrn, int left, int top, 
+static void
+XAAStateWrapSetClippingRectangle(ScrnInfoPtr pScrn, int left, int top,
 					     int right, int bottom)
 {
    GET_STATEPRIV_PSCRN(pScrn);
@@ -372,7 +381,8 @@ static void XAAStateWrapSetClippingRectangle(ScrnInfoPtr pScrn, int left, int to
    (*pStatePriv->SetClippingRectangle)(pScrn, left, top, right, bottom);
 }
 
-static void XAAStateWrapDisableClipping(ScrnInfoPtr pScrn)
+static void
+XAAStateWrapDisableClipping(ScrnInfoPtr pScrn)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
@@ -380,38 +390,44 @@ static void XAAStateWrapDisableClipping(ScrnInfoPtr pScrn)
    (*pStatePriv->DisableClipping)(pScrn);
 }
 
-static void XAAStateWrapSetupForMono8x8PatternFill(ScrnInfoPtr pScrn, int patx, int paty,
+static void
+XAAStateWrapSetupForMono8x8PatternFill(ScrnInfoPtr pScrn, int patx, int paty,
 						   int fg, int bg, int rop, 
 						   unsigned int planemask)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->SetupForMono8x8PatternFill)(pScrn, patx, paty, fg, bg, rop, planemask);
+    (*pStatePriv->SetupForMono8x8PatternFill) (pScrn, patx, paty, fg, bg, rop,
+                                               planemask);
 }
 
-static void XAAStateWrapSetupForColor8x8PatternFill(ScrnInfoPtr pScrn, int patx, int paty,
+static void
+XAAStateWrapSetupForColor8x8PatternFill(ScrnInfoPtr pScrn, int patx, int paty,
 						    int rop, unsigned int planemask,
 						    int transparency_color)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->SetupForColor8x8PatternFill)(pScrn, patx, paty, rop, planemask, 
-					      transparency_color);
+    (*pStatePriv->SetupForColor8x8PatternFill) (pScrn, patx, paty, rop,
+                                                planemask, transparency_color);
 }
 
-static void XAAStateWrapSetupForCPUToScreenColorExpandFill(ScrnInfoPtr pScrn, int fg, 
+static void
+XAAStateWrapSetupForCPUToScreenColorExpandFill(ScrnInfoPtr pScrn, int fg,
 							   int bg, int rop,
 							   unsigned int planemask)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->SetupForCPUToScreenColorExpandFill)(pScrn, fg, bg, rop, planemask);
+    (*pStatePriv->SetupForCPUToScreenColorExpandFill) (pScrn, fg, bg, rop,
+                                                       planemask);
 }
 
-static void XAAStateWrapSetupForScanlineCPUToScreenColorExpandFill(ScrnInfoPtr pScrn,
+static void
+XAAStateWrapSetupForScanlineCPUToScreenColorExpandFill(ScrnInfoPtr pScrn,
 								   int fg, int bg, 
 								   int rop,
 								   unsigned int planemask)
@@ -419,32 +435,36 @@ static void XAAStateWrapSetupForScanlineCPUToScreenColorExpandFill(ScrnInfoPtr p
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->SetupForScanlineCPUToScreenColorExpandFill)(pScrn, fg, bg, rop,
-							     planemask);
+    (*pStatePriv->SetupForScanlineCPUToScreenColorExpandFill) (pScrn, fg, bg,
+                                                               rop, planemask);
 }
 
-static void XAAStateWrapSetupForScreenToScreenColorExpandFill(ScrnInfoPtr pScrn,
+static void
+XAAStateWrapSetupForScreenToScreenColorExpandFill(ScrnInfoPtr pScrn,
 							      int fg, int bg, int rop,
 							      unsigned int planemask)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->SetupForScreenToScreenColorExpandFill)(pScrn, fg, bg, rop, planemask);
+    (*pStatePriv->SetupForScreenToScreenColorExpandFill) (pScrn, fg, bg, rop,
+                                                          planemask);
 }
 
-static void XAAStateWrapSetupForImageWrite(ScrnInfoPtr pScrn, int rop, 
+static void
+XAAStateWrapSetupForImageWrite(ScrnInfoPtr pScrn, int rop,
 					   unsigned int planemask, int transparency_color,
 					   int bpp, int depth)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->SetupForImageWrite)(pScrn, rop, planemask, transparency_color, bpp, 
-				     depth);
+    (*pStatePriv->SetupForImageWrite) (pScrn, rop, planemask,
+                                       transparency_color, bpp, depth);
 }
 
-static void XAAStateWrapSetupForScanlineImageWrite(ScrnInfoPtr pScrn, int rop, 
+static void
+XAAStateWrapSetupForScanlineImageWrite(ScrnInfoPtr pScrn, int rop,
 						   unsigned int planemask,
 						   int transparency_color,
 						   int bpp, int depth)
@@ -452,11 +472,12 @@ static void XAAStateWrapSetupForScanlineImageWrite(ScrnInfoPtr pScrn, int rop,
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->SetupForScanlineImageWrite)(pScrn, rop, planemask, transparency_color, 
-					     bpp, depth);
+    (*pStatePriv->SetupForScanlineImageWrite) (pScrn, rop, planemask,
+                                               transparency_color, bpp, depth);
 }
 
-static void XAAStateWrapSetupForImageRead(ScrnInfoPtr pScrn, int bpp, int depth)
+static void
+XAAStateWrapSetupForImageRead(ScrnInfoPtr pScrn, int bpp, int depth)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
@@ -464,7 +485,8 @@ static void XAAStateWrapSetupForImageRead(ScrnInfoPtr pScrn, int bpp, int depth)
    (*pStatePriv->SetupForImageRead)(pScrn, bpp, depth);
 }
 
-static void XAAStateWrapScreenToScreenBitBlt(ScrnInfoPtr pScrn, int nbox,
+static void
+XAAStateWrapScreenToScreenBitBlt(ScrnInfoPtr pScrn, int nbox,
 					     DDXPointPtr pptSrc, BoxPtr pbox, int xdir, 
 					     int ydir, int alu, unsigned int planmask)
 {
@@ -476,7 +498,8 @@ static void XAAStateWrapScreenToScreenBitBlt(ScrnInfoPtr pScrn, int nbox,
 				       ydir, alu, planmask);
 }
 
-static void XAAStateWrapWriteBitmap(ScrnInfoPtr pScrn, int x, int y, int w, int h,
+static void
+XAAStateWrapWriteBitmap(ScrnInfoPtr pScrn, int x, int y, int w, int h,
 				    unsigned char *src, int srcwidth, int skipleft,
 				    int fg, int bg, int rop, unsigned int planemask)
 {
@@ -488,17 +511,18 @@ static void XAAStateWrapWriteBitmap(ScrnInfoPtr pScrn, int x, int y, int w, int
 			      fg, bg, rop, planemask);
 }
 
-static void XAAStateWrapFillSolidRects(ScrnInfoPtr pScrn, int fg, int rop,
+static void
+XAAStateWrapFillSolidRects(ScrnInfoPtr pScrn, int fg, int rop,
 				       unsigned int planemask, int nBox, BoxPtr pBox)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->FillSolidRects)(pScrn, fg, rop,
-				 planemask, nBox, pBox);
+    (*pStatePriv->FillSolidRects) (pScrn, fg, rop, planemask, nBox, pBox);
 }
 
-static void XAAStateWrapFillMono8x8PatternRects(ScrnInfoPtr pScrn, int fg, int bg, 
+static void
+XAAStateWrapFillMono8x8PatternRects(ScrnInfoPtr pScrn, int fg, int bg,
 						int rop, unsigned int planemask, int nBox,
 						BoxPtr pBox, int pat0, int pat1,
 						int xorg, int yorg)
@@ -508,11 +532,11 @@ static void XAAStateWrapFillMono8x8PatternRects(ScrnInfoPtr pScrn, int fg, int b
 
    (*pStatePriv->FillMono8x8PatternRects)(pScrn, fg, bg, 
 					  rop, planemask, nBox,
-					  pBox, pat0, pat1,
-					  xorg, yorg);
+                                            pBox, pat0, pat1, xorg, yorg);
 }
 
-static void XAAStateWrapFillColor8x8PatternRects(ScrnInfoPtr pScrn, int rop,
+static void
+XAAStateWrapFillColor8x8PatternRects(ScrnInfoPtr pScrn, int rop,
 						 unsigned int planemask, int nBox,
 						 BoxPtr pBox, int xorg, int yorg,
 						 XAACacheInfoPtr pCache)
@@ -522,11 +546,11 @@ static void XAAStateWrapFillColor8x8PatternRects(ScrnInfoPtr pScrn, int rop,
 
    (*pStatePriv->FillColor8x8PatternRects)(pScrn, rop,
 					   planemask, nBox,
-					   pBox, xorg, yorg,
-					   pCache);
+                                             pBox, xorg, yorg, pCache);
 }
 
-static void XAAStateWrapFillCacheBltRects(ScrnInfoPtr pScrn, int rop, 
+static void
+XAAStateWrapFillCacheBltRects(ScrnInfoPtr pScrn, int rop,
 					  unsigned int planemask, int nBox, BoxPtr pBox,
 					  int xorg, int yorg, XAACacheInfoPtr pCache)
 {
@@ -538,7 +562,8 @@ static void XAAStateWrapFillCacheBltRects(ScrnInfoPtr pScrn, int rop,
 				    xorg, yorg, pCache);
 }
 
-static void XAAStateWrapFillColorExpandRects(ScrnInfoPtr pScrn, int fg, int bg, int rop,
+static void
+XAAStateWrapFillColorExpandRects(ScrnInfoPtr pScrn, int fg, int bg, int rop,
 					     unsigned int planemask, int nBox,
 					     BoxPtr pBox, int xorg, int yorg, 
 					     PixmapPtr pPix)
@@ -548,11 +573,11 @@ static void XAAStateWrapFillColorExpandRects(ScrnInfoPtr pScrn, int fg, int bg,
 
    (*pStatePriv->FillColorExpandRects)(pScrn, fg, bg, rop,
 				       planemask, nBox,
-				       pBox, xorg, yorg, 
-				       pPix);
+                                         pBox, xorg, yorg, pPix);
 }
 
-static void XAAStateWrapFillCacheExpandRects(ScrnInfoPtr pScrn, int fg, int bg, int rop,
+static void
+XAAStateWrapFillCacheExpandRects(ScrnInfoPtr pScrn, int fg, int bg, int rop,
 					     unsigned int planemask, int nBox, 
 					     BoxPtr pBox, int xorg, int yorg, 
 					     PixmapPtr pPix)
@@ -562,11 +587,11 @@ static void XAAStateWrapFillCacheExpandRects(ScrnInfoPtr pScrn, int fg, int bg,
 
    (*pStatePriv->FillCacheExpandRects)(pScrn, fg, bg, rop,
 				       planemask, nBox, 
-				       pBox, xorg, yorg, 
-				       pPix);
+                                         pBox, xorg, yorg, pPix);
 }
 
-static void XAAStateWrapFillImageWriteRects(ScrnInfoPtr pScrn, int rop,
+static void
+XAAStateWrapFillImageWriteRects(ScrnInfoPtr pScrn, int rop,
 					    unsigned int planemask, int nBox, BoxPtr pBox,
 					    int xorg, int yorg, PixmapPtr pPix)
 {
@@ -578,7 +603,8 @@ static void XAAStateWrapFillImageWriteRects(ScrnInfoPtr pScrn, int rop,
 				      xorg, yorg, pPix);
 }
 
-static void XAAStateWrapFillSolidSpans(ScrnInfoPtr pScrn, int fg, int rop,
+static void
+XAAStateWrapFillSolidSpans(ScrnInfoPtr pScrn, int fg, int rop,
 				       unsigned int planemask, int n, DDXPointPtr points,
 				       int *widths, int fSorted)
 {
@@ -586,11 +612,11 @@ static void XAAStateWrapFillSolidSpans(ScrnInfoPtr pScrn, int fg, int rop,
    STATE_CHECK_PSCRN(pScrn);
 
    (*pStatePriv->FillSolidSpans)(pScrn, fg, rop,
-				 planemask, n, points,
-				 widths, fSorted);
+                                   planemask, n, points, widths, fSorted);
 }
 
-static void XAAStateWrapFillMono8x8PatternSpans(ScrnInfoPtr pScrn, int fg, int bg, 
+static void
+XAAStateWrapFillMono8x8PatternSpans(ScrnInfoPtr pScrn, int fg, int bg,
 						int rop, unsigned int planemask, int n,
 						DDXPointPtr points, int *widths,
 						int fSorted, int pat0, int pat1,
@@ -602,11 +628,11 @@ static void XAAStateWrapFillMono8x8PatternSpans(ScrnInfoPtr pScrn, int fg, int b
    (*pStatePriv->FillMono8x8PatternSpans)(pScrn, fg, bg, 
 					  rop, planemask, n,
 					  points, widths,
-					  fSorted, pat0, pat1,
-					  xorg, yorg);
+                                            fSorted, pat0, pat1, xorg, yorg);
 }
 
-static void XAAStateWrapFillColor8x8PatternSpans(ScrnInfoPtr pScrn, int rop,
+static void
+XAAStateWrapFillColor8x8PatternSpans(ScrnInfoPtr pScrn, int rop,
 						 unsigned int planemask, int n,
 						 DDXPointPtr points, int *widths,
 						 int fSorted, XAACacheInfoPtr pCache,
@@ -618,11 +644,11 @@ static void XAAStateWrapFillColor8x8PatternSpans(ScrnInfoPtr pScrn, int rop,
    (*pStatePriv->FillColor8x8PatternSpans)(pScrn, rop,
 					   planemask, n,
 					   points, widths,
-					   fSorted, pCache,
-					   xorg, yorg);
+                                             fSorted, pCache, xorg, yorg);
 }
 
-static void XAAStateWrapFillCacheBltSpans(ScrnInfoPtr pScrn, int rop,
+static void
+XAAStateWrapFillCacheBltSpans(ScrnInfoPtr pScrn, int rop,
 					  unsigned int planemask, int n, 
 					  DDXPointPtr points, int *widths, 
 					  int fSorted, XAACacheInfoPtr pCache,
@@ -634,11 +660,11 @@ static void XAAStateWrapFillCacheBltSpans(ScrnInfoPtr pScrn, int rop,
    (*pStatePriv->FillCacheBltSpans)(pScrn, rop,
 				    planemask, n, 
 				    points, widths, 
-				    fSorted, pCache,
-				    xorg, yorg);
+                                      fSorted, pCache, xorg, yorg);
 }
 
-static void XAAStateWrapFillColorExpandSpans(ScrnInfoPtr pScrn, int fg, int bg, int rop,
+static void
+XAAStateWrapFillColorExpandSpans(ScrnInfoPtr pScrn, int fg, int bg, int rop,
 					     unsigned int planemask, int n,
 					     DDXPointPtr points, int *widths, int fSorted,
 					     int xorg, int yorg, PixmapPtr pPix)
@@ -652,7 +678,8 @@ static void XAAStateWrapFillColorExpandSpans(ScrnInfoPtr pScrn, int fg, int bg,
 				       xorg, yorg, pPix);
 }
 
-static void XAAStateWrapFillCacheExpandSpans(ScrnInfoPtr pScrn, int fg, int bg, int rop,
+static void
+XAAStateWrapFillCacheExpandSpans(ScrnInfoPtr pScrn, int fg, int bg, int rop,
 					     unsigned int planemask, int n, 
 					     DDXPointPtr ppt, int *pwidth, int fSorted, 
 					     int xorg, int yorg, PixmapPtr pPix)
@@ -666,7 +693,8 @@ static void XAAStateWrapFillCacheExpandSpans(ScrnInfoPtr pScrn, int fg, int bg,
 				       xorg, yorg, pPix);
 }
 
-static void XAAStateWrapTEGlyphRenderer(ScrnInfoPtr pScrn, int x, int y, int w, int h, 
+static void
+XAAStateWrapTEGlyphRenderer(ScrnInfoPtr pScrn, int x, int y, int w, int h,
 					int skipleft, int startline, 
 					unsigned int **glyphs,
 					int glyphWidth, int fg, int bg, int rop, 
@@ -677,12 +705,11 @@ static void XAAStateWrapTEGlyphRenderer(ScrnInfoPtr pScrn, int x, int y, int w,
 
    (*pStatePriv->TEGlyphRenderer)(pScrn, x, y, w, h, 
 				  skipleft, startline, 
-				  glyphs,
-				  glyphWidth, fg, bg, rop, 
-				  planemask);
+                                    glyphs, glyphWidth, fg, bg, rop, planemask);
 }
 
-static void XAAStateWrapNonTEGlyphRenderer(ScrnInfoPtr pScrn, int x, int y, int n,
+static void
+XAAStateWrapNonTEGlyphRenderer(ScrnInfoPtr pScrn, int x, int y, int n,
 					   NonTEGlyphPtr glyphs, BoxPtr pbox,
 					   int fg, int rop, unsigned int planemask)
 {
@@ -690,11 +717,11 @@ static void XAAStateWrapNonTEGlyphRenderer(ScrnInfoPtr pScrn, int x, int y, int
    STATE_CHECK_PSCRN(pScrn);
 
    (*pStatePriv->NonTEGlyphRenderer)(pScrn, x, y, n,
-				     glyphs, pbox,
-				     fg, rop, planemask);
+                                       glyphs, pbox, fg, rop, planemask);
 }
 
-static void XAAStateWrapWritePixmap(ScrnInfoPtr pScrn, int x, int y, int w, int h,
+static void
+XAAStateWrapWritePixmap(ScrnInfoPtr pScrn, int x, int y, int w, int h,
 				    unsigned char *src, int srcwidth, int rop,
 				    unsigned int planemask, int transparency_color,
 				    int bpp, int depth)
@@ -704,21 +731,21 @@ static void XAAStateWrapWritePixmap(ScrnInfoPtr pScrn, int x, int y, int w, int
 
    (*pStatePriv->WritePixmap)(pScrn, x, y, w, h,
 			      src, srcwidth, rop,
-			      planemask, transparency_color,
-			      bpp, depth);
+                                planemask, transparency_color, bpp, depth);
 }
 
-static void XAAStateWrapReadPixmap(ScrnInfoPtr pScrn, int x, int y, int w, int h,
+static void
+XAAStateWrapReadPixmap(ScrnInfoPtr pScrn, int x, int y, int w, int h,
 				   unsigned char *dst, int dstwidth, int bpp, int depth)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->ReadPixmap)(pScrn, x, y, w, h,
-			     dst, dstwidth, bpp, depth);
+    (*pStatePriv->ReadPixmap) (pScrn, x, y, w, h, dst, dstwidth, bpp, depth);
 }
 
-static RegionPtr XAAStateWrapCopyArea(DrawablePtr pSrcDrawable, DrawablePtr pDstDrawable,
+static RegionPtr
+XAAStateWrapCopyArea(DrawablePtr pSrcDrawable, DrawablePtr pDstDrawable,
 				      GC *pGC, int srcx, int srcy, int width, int height,
 				      int dstx, int dsty)
 {
@@ -726,11 +753,11 @@ static RegionPtr XAAStateWrapCopyArea(DrawablePtr pSrcDrawable, DrawablePtr pDst
    STATE_CHECK_SP(pStatePriv);
 
    return (*pStatePriv->CopyArea)(pSrcDrawable, pDstDrawable,
-				  pGC, srcx, srcy, width, height,
-				  dstx, dsty);
+                                    pGC, srcx, srcy, width, height, dstx, dsty);
 }
 
-static RegionPtr XAAStateWrapCopyPlane(DrawablePtr pSrc, DrawablePtr pDst, GCPtr pGC,
+static RegionPtr
+XAAStateWrapCopyPlane(DrawablePtr pSrc, DrawablePtr pDst, GCPtr pGC,
 				       int srcx, int srcy, int width, int height, 
 				       int dstx, int dsty, unsigned long bitPlane)
 {
@@ -742,7 +769,8 @@ static RegionPtr XAAStateWrapCopyPlane(DrawablePtr pSrc, DrawablePtr pDst, GCPtr
 				   dstx, dsty, bitPlane);
 }
 
-static void XAAStateWrapPushPixelsSolid(GCPtr pGC, PixmapPtr pBitMap,
+static void
+XAAStateWrapPushPixelsSolid(GCPtr pGC, PixmapPtr pBitMap,
 					DrawablePtr pDrawable, int dx, int dy, int xOrg, 
 					int yOrg)
 {
@@ -750,31 +778,31 @@ static void XAAStateWrapPushPixelsSolid(GCPtr pGC, PixmapPtr pBitMap,
    STATE_CHECK_SP(pStatePriv);
 
    (*pStatePriv->PushPixelsSolid)(pGC, pBitMap,
-				  pDrawable, dx, dy, xOrg, 
-				  yOrg);
+                                    pDrawable, dx, dy, xOrg, yOrg);
 }
 
-static void XAAStateWrapPolyFillRectSolid(DrawablePtr pDraw, GCPtr pGC, int nrectFill,
+static void
+XAAStateWrapPolyFillRectSolid(DrawablePtr pDraw, GCPtr pGC, int nrectFill,
 					  xRectangle *prectInit)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolyFillRectSolid)(pDraw, pGC, nrectFill,
-				    prectInit);
+    (*pStatePriv->PolyFillRectSolid) (pDraw, pGC, nrectFill, prectInit);
 }
 
-static void XAAStateWrapPolyFillRectStippled(DrawablePtr pDraw, GCPtr pGC, int nrectFill,
+static void
+XAAStateWrapPolyFillRectStippled(DrawablePtr pDraw, GCPtr pGC, int nrectFill,
 					     xRectangle *prectInit)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolyFillRectStippled)(pDraw, pGC, nrectFill,
-				       prectInit);
+    (*pStatePriv->PolyFillRectStippled) (pDraw, pGC, nrectFill, prectInit);
 }
 
-static void XAAStateWrapPolyFillRectOpaqueStippled(DrawablePtr pDraw, GCPtr pGC,
+static void
+XAAStateWrapPolyFillRectOpaqueStippled(DrawablePtr pDraw, GCPtr pGC,
 						   int nrectFill, xRectangle *prectInit)
 {
    GET_STATEPRIV_GC(pGC);
@@ -784,37 +812,38 @@ static void XAAStateWrapPolyFillRectOpaqueStippled(DrawablePtr pDraw, GCPtr pGC,
 					     nrectFill, prectInit);
 }
 
-static void XAAStateWrapPolyFillRectTiled(DrawablePtr pDraw, GCPtr pGC, int nrectFill,
+static void
+XAAStateWrapPolyFillRectTiled(DrawablePtr pDraw, GCPtr pGC, int nrectFill,
 					  xRectangle *prectInit)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolyFillRectTiled)(pDraw, pGC, nrectFill,
-				    prectInit);
+    (*pStatePriv->PolyFillRectTiled) (pDraw, pGC, nrectFill, prectInit);
 }
 
-static void XAAStateWrapFillSpansSolid(DrawablePtr pDraw, GCPtr pGC, int nInit,
+static void
+XAAStateWrapFillSpansSolid(DrawablePtr pDraw, GCPtr pGC, int nInit,
 				       DDXPointPtr ppt, int *pwidth, int fSorted)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->FillSpansSolid)(pDraw, pGC, nInit,
-				 ppt, pwidth, fSorted);
+    (*pStatePriv->FillSpansSolid) (pDraw, pGC, nInit, ppt, pwidth, fSorted);
 }
 
-static void XAAStateWrapFillSpansStippled(DrawablePtr pDraw, GCPtr pGC, int nInit,
+static void
+XAAStateWrapFillSpansStippled(DrawablePtr pDraw, GCPtr pGC, int nInit,
 					  DDXPointPtr ppt, int *pwidth, int fSorted)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->FillSpansStippled)(pDraw, pGC, nInit,
-				    ppt, pwidth, fSorted);
+    (*pStatePriv->FillSpansStippled) (pDraw, pGC, nInit, ppt, pwidth, fSorted);
 }
 
-static void XAAStateWrapFillSpansOpaqueStippled(DrawablePtr pDraw, GCPtr pGC, int nInit, 
+static void
+XAAStateWrapFillSpansOpaqueStippled(DrawablePtr pDraw, GCPtr pGC, int nInit,
 						DDXPointPtr ppt, int *pwidth, int fSorted)
 {
    GET_STATEPRIV_GC(pGC);
@@ -824,57 +853,58 @@ static void XAAStateWrapFillSpansOpaqueStippled(DrawablePtr pDraw, GCPtr pGC, in
 					  ppt, pwidth, fSorted);
 }
 
-static void XAAStateWrapFillSpansTiled(DrawablePtr pDraw, GCPtr pGC, int nInit, 
+static void
+XAAStateWrapFillSpansTiled(DrawablePtr pDraw, GCPtr pGC, int nInit,
 				       DDXPointPtr ppt, int *pwidth, int fSorted)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->FillSpansTiled)(pDraw, pGC, nInit, 
-				 ppt, pwidth, fSorted);
+    (*pStatePriv->FillSpansTiled) (pDraw, pGC, nInit, ppt, pwidth, fSorted);
 }
 
-static int XAAStateWrapPolyText8TE(DrawablePtr pDraw, GCPtr pGC, int x, int y, int count,
+static int
+XAAStateWrapPolyText8TE(DrawablePtr pDraw, GCPtr pGC, int x, int y, int count,
 				   char *chars)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   return (*pStatePriv->PolyText8TE)(pDraw, pGC, x, y, count,
-				     chars);
+    return (*pStatePriv->PolyText8TE) (pDraw, pGC, x, y, count, chars);
 }
 
-static int XAAStateWrapPolyText16TE(DrawablePtr pDraw, GCPtr pGC, int x, int y, int count,
+static int
+XAAStateWrapPolyText16TE(DrawablePtr pDraw, GCPtr pGC, int x, int y, int count,
 				    unsigned short *chars)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   return (*pStatePriv->PolyText16TE)(pDraw, pGC, x, y, count,
-				      chars);
+    return (*pStatePriv->PolyText16TE) (pDraw, pGC, x, y, count, chars);
 }
 
-static void XAAStateWrapImageText8TE(DrawablePtr pDraw, GCPtr pGC, int x, int y, 
+static void
+XAAStateWrapImageText8TE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
 				     int count, char *chars)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ImageText8TE)(pDraw, pGC, x, y, 
-			       count, chars);
+    (*pStatePriv->ImageText8TE) (pDraw, pGC, x, y, count, chars);
 }
 
-static void XAAStateWrapImageText16TE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
+static void
+XAAStateWrapImageText16TE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
 				      int count, unsigned short *chars)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ImageText16TE)(pDraw, pGC, x, y,
-				count, chars);
+    (*pStatePriv->ImageText16TE) (pDraw, pGC, x, y, count, chars);
 }
 
-static void XAAStateWrapImageGlyphBltTE(DrawablePtr pDrawable, GCPtr pGC, int xInit, 
+static void
+XAAStateWrapImageGlyphBltTE(DrawablePtr pDrawable, GCPtr pGC, int xInit,
 					int yInit, unsigned int nglyph, CharInfoPtr *ppci,
 					pointer pglyphBase)
 {
@@ -882,11 +912,11 @@ static void XAAStateWrapImageGlyphBltTE(DrawablePtr pDrawable, GCPtr pGC, int xI
    STATE_CHECK_SP(pStatePriv);
 
    (*pStatePriv->ImageGlyphBltTE)(pDrawable, pGC, xInit, 
-				  yInit, nglyph, ppci,
-				  pglyphBase);
+                                    yInit, nglyph, ppci, pglyphBase);
 }
 
-static void XAAStateWrapPolyGlyphBltTE(DrawablePtr pDrawable, GCPtr pGC, int xInit, 
+static void
+XAAStateWrapPolyGlyphBltTE(DrawablePtr pDrawable, GCPtr pGC, int xInit,
 				       int yInit, unsigned int nglyph, CharInfoPtr *ppci,
 				       pointer pglyphBase)
 {
@@ -894,51 +924,51 @@ static void XAAStateWrapPolyGlyphBltTE(DrawablePtr pDrawable, GCPtr pGC, int xIn
    STATE_CHECK_SP(pStatePriv);
 
    (*pStatePriv->PolyGlyphBltTE)(pDrawable, pGC, xInit, 
-				 yInit, nglyph, ppci,
-				 pglyphBase);
+                                   yInit, nglyph, ppci, pglyphBase);
 }
 
-static int XAAStateWrapPolyText8NonTE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
+static int
+XAAStateWrapPolyText8NonTE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
 				      int count, char *chars)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   return (*pStatePriv->PolyText8NonTE)(pDraw, pGC, x, y,
-					count, chars);
+    return (*pStatePriv->PolyText8NonTE) (pDraw, pGC, x, y, count, chars);
 }
 
-static int XAAStateWrapPolyText16NonTE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
+static int
+XAAStateWrapPolyText16NonTE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
 				       int count, unsigned short *chars)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   return (*pStatePriv->PolyText16NonTE)(pDraw, pGC, x, y,
-					 count, chars);
+    return (*pStatePriv->PolyText16NonTE) (pDraw, pGC, x, y, count, chars);
 }
 
-static void XAAStateWrapImageText8NonTE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
+static void
+XAAStateWrapImageText8NonTE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
 					int count, char *chars)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ImageText8NonTE)(pDraw, pGC, x, y,
-				  count, chars);
+    (*pStatePriv->ImageText8NonTE) (pDraw, pGC, x, y, count, chars);
 }
 
-static void XAAStateWrapImageText16NonTE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
+static void
+XAAStateWrapImageText16NonTE(DrawablePtr pDraw, GCPtr pGC, int x, int y,
 					 int count, unsigned short *chars)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ImageText16NonTE)(pDraw, pGC, x, y,
-				   count, chars);
+    (*pStatePriv->ImageText16NonTE) (pDraw, pGC, x, y, count, chars);
 }
 
-static void XAAStateWrapImageGlyphBltNonTE(DrawablePtr pDrawable, GCPtr pGC, int xInit,
+static void
+XAAStateWrapImageGlyphBltNonTE(DrawablePtr pDrawable, GCPtr pGC, int xInit,
 					   int yInit, unsigned int nglyph,
 					   CharInfoPtr *ppci, pointer pglyphBase)
 {
@@ -946,11 +976,11 @@ static void XAAStateWrapImageGlyphBltNonTE(DrawablePtr pDrawable, GCPtr pGC, int
    STATE_CHECK_SP(pStatePriv);
 
    (*pStatePriv->ImageGlyphBltNonTE)(pDrawable, pGC, xInit,
-				     yInit, nglyph,
-				     ppci, pglyphBase);
+                                       yInit, nglyph, ppci, pglyphBase);
 }
 
-static void XAAStateWrapPolyGlyphBltNonTE(DrawablePtr pDrawable, GCPtr pGC, int xInit,
+static void
+XAAStateWrapPolyGlyphBltNonTE(DrawablePtr pDrawable, GCPtr pGC, int xInit,
 					  int yInit, unsigned int nglyph,
 					  CharInfoPtr *ppci, pointer pglyphBase)
 {
@@ -958,11 +988,11 @@ static void XAAStateWrapPolyGlyphBltNonTE(DrawablePtr pDrawable, GCPtr pGC, int
    STATE_CHECK_SP(pStatePriv);
 
    (*pStatePriv->PolyGlyphBltNonTE)(pDrawable, pGC, xInit,
-				    yInit, nglyph,
-				    ppci, pglyphBase);
+                                      yInit, nglyph, ppci, pglyphBase);
 }
 
-static void XAAStateWrapPolyRectangleThinSolid(DrawablePtr pDrawable,GCPtr pGC,
+static void
+XAAStateWrapPolyRectangleThinSolid(DrawablePtr pDrawable, GCPtr pGC,
 					       int nRectsInit, xRectangle *pRectsInit)
 {
    GET_STATEPRIV_GC(pGC);
@@ -972,67 +1002,68 @@ static void XAAStateWrapPolyRectangleThinSolid(DrawablePtr pDrawable,GCPtr pGC,
 					 nRectsInit, pRectsInit);
 }
 
-static void XAAStateWrapPolylinesWideSolid(DrawablePtr pDrawable, GCPtr pGC, int mode,
+static void
+XAAStateWrapPolylinesWideSolid(DrawablePtr pDrawable, GCPtr pGC, int mode,
 					   int npt, DDXPointPtr pPts)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolylinesWideSolid)(pDrawable, pGC, mode,
-				     npt, pPts);
+    (*pStatePriv->PolylinesWideSolid) (pDrawable, pGC, mode, npt, pPts);
 }
 
-static void XAAStateWrapPolylinesThinSolid(DrawablePtr pDrawable, GCPtr pGC, int mode, 
+static void
+XAAStateWrapPolylinesThinSolid(DrawablePtr pDrawable, GCPtr pGC, int mode,
 					   int npt, DDXPointPtr pPts)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolylinesThinSolid)(pDrawable, pGC, mode, 
-				     npt, pPts);
+    (*pStatePriv->PolylinesThinSolid) (pDrawable, pGC, mode, npt, pPts);
 }
 
-static void XAAStateWrapPolySegmentThinSolid(DrawablePtr pDrawable, GCPtr pGC, int nseg,
+static void
+XAAStateWrapPolySegmentThinSolid(DrawablePtr pDrawable, GCPtr pGC, int nseg,
 					     xSegment *pSeg)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolySegmentThinSolid)(pDrawable, pGC, nseg,
-				       pSeg);
+    (*pStatePriv->PolySegmentThinSolid) (pDrawable, pGC, nseg, pSeg);
 }
 
-static void XAAStateWrapPolylinesThinDashed(DrawablePtr pDrawable, GCPtr pGC, int mode, 
+static void
+XAAStateWrapPolylinesThinDashed(DrawablePtr pDrawable, GCPtr pGC, int mode,
 					    int npt, DDXPointPtr pPts)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolylinesThinDashed)(pDrawable, pGC, mode, 
-				      npt, pPts);
+    (*pStatePriv->PolylinesThinDashed) (pDrawable, pGC, mode, npt, pPts);
 }
 
-static void XAAStateWrapPolySegmentThinDashed(DrawablePtr pDrawable, GCPtr pGC, int nseg,
+static void
+XAAStateWrapPolySegmentThinDashed(DrawablePtr pDrawable, GCPtr pGC, int nseg,
 					      xSegment *pSeg)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolySegmentThinDashed)(pDrawable, pGC, nseg,
-					pSeg);
+    (*pStatePriv->PolySegmentThinDashed) (pDrawable, pGC, nseg, pSeg);
 }
 
-static void XAAStateWrapFillPolygonSolid(DrawablePtr pDrawable, GCPtr pGC, int shape,
+static void
+XAAStateWrapFillPolygonSolid(DrawablePtr pDrawable, GCPtr pGC, int shape,
 					 int mode, int count, DDXPointPtr ptsIn)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->FillPolygonSolid)(pDrawable, pGC, shape,
-				   mode, count, ptsIn);
+    (*pStatePriv->FillPolygonSolid) (pDrawable, pGC, shape, mode, count, ptsIn);
 }
 
-static void XAAStateWrapFillPolygonStippled(DrawablePtr pDrawable, GCPtr pGC, int shape,
+static void
+XAAStateWrapFillPolygonStippled(DrawablePtr pDrawable, GCPtr pGC, int shape,
 					    int mode, int count, DDXPointPtr ptsIn)
 {
    GET_STATEPRIV_GC(pGC);
@@ -1042,7 +1073,8 @@ static void XAAStateWrapFillPolygonStippled(DrawablePtr pDrawable, GCPtr pGC, in
 				      mode, count, ptsIn);
 }
 
-static void XAAStateWrapFillPolygonOpaqueStippled(DrawablePtr pDrawable, GCPtr pGC,
+static void
+XAAStateWrapFillPolygonOpaqueStippled(DrawablePtr pDrawable, GCPtr pGC,
 						  int shape, int mode, int count,
 						  DDXPointPtr ptsIn)
 {
@@ -1050,31 +1082,31 @@ static void XAAStateWrapFillPolygonOpaqueStippled(DrawablePtr pDrawable, GCPtr p
    STATE_CHECK_SP(pStatePriv);
 
    (*pStatePriv->FillPolygonOpaqueStippled)(pDrawable, pGC,
-					    shape, mode, count,
-					    ptsIn);
+                                              shape, mode, count, ptsIn);
 }
 
-static void XAAStateWrapFillPolygonTiled(DrawablePtr pDrawable, GCPtr pGC, int shape,
+static void
+XAAStateWrapFillPolygonTiled(DrawablePtr pDrawable, GCPtr pGC, int shape,
 					 int mode, int count, DDXPointPtr ptsIn)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->FillPolygonTiled)(pDrawable, pGC, shape,
-				   mode, count, ptsIn);
+    (*pStatePriv->FillPolygonTiled) (pDrawable, pGC, shape, mode, count, ptsIn);
 }
 
-static void XAAStateWrapPolyFillArcSolid(DrawablePtr pDraw, GCPtr pGC, int narcs,
+static void
+XAAStateWrapPolyFillArcSolid(DrawablePtr pDraw, GCPtr pGC, int narcs,
 					 xArc *parcs)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->PolyFillArcSolid)(pDraw, pGC, narcs,
-				   parcs);
+    (*pStatePriv->PolyFillArcSolid) (pDraw, pGC, narcs, parcs);
 }
 
-static void XAAStateWrapPutImage(DrawablePtr pDraw, GCPtr pGC, int depth, int x, int y, 
+static void
+XAAStateWrapPutImage(DrawablePtr pDraw, GCPtr pGC, int depth, int x, int y,
 				 int w, int h, int leftPad, int format, char *pImage)
 {
    GET_STATEPRIV_GC(pGC);
@@ -1084,206 +1116,206 @@ static void XAAStateWrapPutImage(DrawablePtr pDraw, GCPtr pGC, int depth, int x,
 			   w, h, leftPad, format, pImage);
 }
 
-static void XAAStateWrapValidateFillSpans(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidateFillSpans(GCPtr pGC, unsigned long changes,
 					  DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidateFillSpans)(pGC, changes,
-				    pDraw);
+    (*pStatePriv->ValidateFillSpans) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidateSetSpans(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidateSetSpans(GCPtr pGC, unsigned long changes,
 					 DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidateSetSpans)(pGC, changes,
-				   pDraw);
+    (*pStatePriv->ValidateSetSpans) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePutImage(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidatePutImage(GCPtr pGC, unsigned long changes,
 					 DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePutImage)(pGC, changes,
-				   pDraw);
+    (*pStatePriv->ValidatePutImage) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidateCopyArea(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidateCopyArea(GCPtr pGC, unsigned long changes,
 					 DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidateCopyArea)(pGC, changes,
-				   pDraw);
+    (*pStatePriv->ValidateCopyArea) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidateCopyPlane(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidateCopyPlane(GCPtr pGC, unsigned long changes,
 					  DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidateCopyPlane)(pGC, changes,
-				    pDraw);
+    (*pStatePriv->ValidateCopyPlane) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolyPoint(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidatePolyPoint(GCPtr pGC, unsigned long changes,
 					  DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolyPoint)(pGC, changes,
-				    pDraw);
+    (*pStatePriv->ValidatePolyPoint) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolylines(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidatePolylines(GCPtr pGC, unsigned long changes,
 					  DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolylines)(pGC, changes,
-				    pDraw);
+    (*pStatePriv->ValidatePolylines) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolySegment(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidatePolySegment(GCPtr pGC, unsigned long changes,
 					    DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolySegment)(pGC, changes,
-				      pDraw);
+    (*pStatePriv->ValidatePolySegment) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolyRectangle(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidatePolyRectangle(GCPtr pGC, unsigned long changes,
 					      DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolyRectangle)(pGC, changes,
-					pDraw);
+    (*pStatePriv->ValidatePolyRectangle) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolyArc(GCPtr pGC, unsigned long changes,
-					DrawablePtr pDraw)
+static void
+XAAStateWrapValidatePolyArc(GCPtr pGC, unsigned long changes, DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolyArc)(pGC, changes,
-				  pDraw);
+    (*pStatePriv->ValidatePolyArc) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidateFillPolygon(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidateFillPolygon(GCPtr pGC, unsigned long changes,
 					    DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidateFillPolygon)(pGC, changes,
-				      pDraw);
+    (*pStatePriv->ValidateFillPolygon) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolyFillRect(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidatePolyFillRect(GCPtr pGC, unsigned long changes,
 					     DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolyFillRect)(pGC, changes,
-				       pDraw);
+    (*pStatePriv->ValidatePolyFillRect) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolyFillArc(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidatePolyFillArc(GCPtr pGC, unsigned long changes,
 					    DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolyFillArc)(pGC, changes,
-				      pDraw);
+    (*pStatePriv->ValidatePolyFillArc) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolyText8(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidatePolyText8(GCPtr pGC, unsigned long changes,
 					  DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolyText8)(pGC, changes,
-				    pDraw);
+    (*pStatePriv->ValidatePolyText8) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolyText16(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidatePolyText16(GCPtr pGC, unsigned long changes,
 					   DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolyText16)(pGC, changes, 
-				     pDraw);
+    (*pStatePriv->ValidatePolyText16) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidateImageText8(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidateImageText8(GCPtr pGC, unsigned long changes,
 					   DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidateImageText8)(pGC, changes, 
-				     pDraw);
+    (*pStatePriv->ValidateImageText8) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidateImageText16(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidateImageText16(GCPtr pGC, unsigned long changes,
 					    DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidateImageText16)(pGC, changes, 
-				      pDraw);
+    (*pStatePriv->ValidateImageText16) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePolyGlyphBlt(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidatePolyGlyphBlt(GCPtr pGC, unsigned long changes,
 					     DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePolyGlyphBlt)(pGC, changes, 
-				       pDraw);
+    (*pStatePriv->ValidatePolyGlyphBlt) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidateImageGlyphBlt(GCPtr pGC, unsigned long changes, 
+static void
+XAAStateWrapValidateImageGlyphBlt(GCPtr pGC, unsigned long changes,
 					      DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
-   (*pStatePriv->ValidateImageGlyphBlt)(pGC, changes, 
-					pDraw);
+    (*pStatePriv->ValidateImageGlyphBlt) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapValidatePushPixels(GCPtr pGC, unsigned long changes,
+static void
+XAAStateWrapValidatePushPixels(GCPtr pGC, unsigned long changes,
 					   DrawablePtr pDraw)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->ValidatePushPixels)(pGC, changes,
-				     pDraw);
+    (*pStatePriv->ValidatePushPixels) (pGC, changes, pDraw);
 }
 
-static void XAAStateWrapComputeDash(GCPtr pGC)
+static void
+XAAStateWrapComputeDash(GCPtr pGC)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
@@ -1291,17 +1323,17 @@ static void XAAStateWrapComputeDash(GCPtr pGC)
    (*pStatePriv->ComputeDash)(pGC);
 }
 
-static void XAAStateWrapInitPixmapCache(ScreenPtr pScreen, RegionPtr areas,
-					pointer data)
+static void
+XAAStateWrapInitPixmapCache(ScreenPtr pScreen, RegionPtr areas, pointer data)
 {
    GET_STATEPRIV_SCREEN(pScreen);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->InitPixmapCache)(pScreen, areas,
-				  data);
+    (*pStatePriv->InitPixmapCache) (pScreen, areas, data);
 }
 
-static void XAAStateWrapClosePixmapCache(ScreenPtr pScreen)
+static void
+XAAStateWrapClosePixmapCache(ScreenPtr pScreen)
 {
    GET_STATEPRIV_SCREEN(pScreen);
    STATE_CHECK_SP(pStatePriv);
@@ -1309,7 +1341,8 @@ static void XAAStateWrapClosePixmapCache(ScreenPtr pScreen)
    (*pStatePriv->ClosePixmapCache)(pScreen);
 }
 
-static int XAAStateWrapStippledFillChooser(GCPtr pGC)
+static int
+XAAStateWrapStippledFillChooser(GCPtr pGC)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
@@ -1317,7 +1350,8 @@ static int XAAStateWrapStippledFillChooser(GCPtr pGC)
    return (*pStatePriv->StippledFillChooser)(pGC);
 }
 
-static int XAAStateWrapOpaqueStippledFillChooser(GCPtr pGC)
+static int
+XAAStateWrapOpaqueStippledFillChooser(GCPtr pGC)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
@@ -1325,7 +1359,8 @@ static int XAAStateWrapOpaqueStippledFillChooser(GCPtr pGC)
    return (*pStatePriv->OpaqueStippledFillChooser)(pGC);
 }
 
-static int XAAStateWrapTiledFillChooser(GCPtr pGC)
+static int
+XAAStateWrapTiledFillChooser(GCPtr pGC)
 {
    GET_STATEPRIV_GC(pGC);
    STATE_CHECK_SP(pStatePriv);
@@ -1333,7 +1368,8 @@ static int XAAStateWrapTiledFillChooser(GCPtr pGC)
    return (*pStatePriv->TiledFillChooser)(pGC);
 }
 
-static XAACacheInfoPtr XAAStateWrapCacheTile(ScrnInfoPtr pScrn, PixmapPtr pPix)
+static XAACacheInfoPtr
+XAAStateWrapCacheTile(ScrnInfoPtr pScrn, PixmapPtr pPix)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
@@ -1341,17 +1377,17 @@ static XAACacheInfoPtr XAAStateWrapCacheTile(ScrnInfoPtr pScrn, PixmapPtr pPix)
    return (*pStatePriv->CacheTile)(pScrn, pPix);
 }
 
-static XAACacheInfoPtr XAAStateWrapCacheStipple(ScrnInfoPtr pScrn, PixmapPtr pPix, int fg, 
-						int bg)
+static XAACacheInfoPtr
+XAAStateWrapCacheStipple(ScrnInfoPtr pScrn, PixmapPtr pPix, int fg, int bg)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   return (*pStatePriv->CacheStipple)(pScrn, pPix, fg, 
-				      bg);
+    return (*pStatePriv->CacheStipple) (pScrn, pPix, fg, bg);
 }
 
-static XAACacheInfoPtr XAAStateWrapCacheMonoStipple(ScrnInfoPtr pScrn, PixmapPtr pPix)
+static XAACacheInfoPtr
+XAAStateWrapCacheMonoStipple(ScrnInfoPtr pScrn, PixmapPtr pPix)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
@@ -1359,39 +1395,38 @@ static XAACacheInfoPtr XAAStateWrapCacheMonoStipple(ScrnInfoPtr pScrn, PixmapPtr
    return (*pStatePriv->CacheMonoStipple)(pScrn, pPix);
 }
 
-static XAACacheInfoPtr XAAStateWrapCacheMono8x8Pattern(ScrnInfoPtr pScrn, int pat0,
-						       int pat1)
+static XAACacheInfoPtr
+XAAStateWrapCacheMono8x8Pattern(ScrnInfoPtr pScrn, int pat0, int pat1)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   return (*pStatePriv->CacheMono8x8Pattern)(pScrn, pat0,
-					     pat1);
+    return (*pStatePriv->CacheMono8x8Pattern) (pScrn, pat0, pat1);
 }
 
-static XAACacheInfoPtr XAAStateWrapCacheColor8x8Pattern(ScrnInfoPtr pScrn, PixmapPtr pPix,
+static XAACacheInfoPtr
+XAAStateWrapCacheColor8x8Pattern(ScrnInfoPtr pScrn, PixmapPtr pPix,
 							int fg, int bg)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   return (*pStatePriv->CacheColor8x8Pattern)(pScrn, pPix,
-					      fg, bg);
+    return (*pStatePriv->CacheColor8x8Pattern) (pScrn, pPix, fg, bg);
 }
 
-static void XAAStateWrapWriteBitmapToCache(ScrnInfoPtr pScrn, int x, int y, int w, int h,
-					   unsigned char *src, int srcwidth, int fg, 
-					   int bg)
+static void
+XAAStateWrapWriteBitmapToCache(ScrnInfoPtr pScrn, int x, int y, int w, int h,
+                               unsigned char *src, int srcwidth, int fg, int bg)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
    (*pStatePriv->WriteBitmapToCache)(pScrn, x, y, w, h,
-				     src, srcwidth, fg, 
-				     bg);
+                                       src, srcwidth, fg, bg);
 }
 
-static void XAAStateWrapWritePixmapToCache(ScrnInfoPtr pScrn, int x, int y, int w, int h,
+static void
+XAAStateWrapWritePixmapToCache(ScrnInfoPtr pScrn, int x, int y, int w, int h,
 					   unsigned char *src, int srcwidth, int bpp, 
 					   int depth)
 {
@@ -1399,31 +1434,31 @@ static void XAAStateWrapWritePixmapToCache(ScrnInfoPtr pScrn, int x, int y, int
    STATE_CHECK_PSCRN(pScrn);
 
    (*pStatePriv->WritePixmapToCache)(pScrn, x, y, w, h,
-				     src, srcwidth, bpp, 
-				     depth);
+                                       src, srcwidth, bpp, depth);
 }
 
-static void XAAStateWrapWriteMono8x8PatternToCache(ScrnInfoPtr pScrn, 
+static void
+XAAStateWrapWriteMono8x8PatternToCache(ScrnInfoPtr pScrn,
 						   XAACacheInfoPtr pCache)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->WriteMono8x8PatternToCache)(pScrn, 
-					     pCache);
+    (*pStatePriv->WriteMono8x8PatternToCache) (pScrn, pCache);
 }
 
-static void XAAStateWrapWriteColor8x8PatternToCache(ScrnInfoPtr pScrn, PixmapPtr pPix, 
+static void
+XAAStateWrapWriteColor8x8PatternToCache(ScrnInfoPtr pScrn, PixmapPtr pPix,
 						    XAACacheInfoPtr pCache)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   (*pStatePriv->WriteColor8x8PatternToCache)(pScrn, pPix, 
-					      pCache);
+    (*pStatePriv->WriteColor8x8PatternToCache) (pScrn, pPix, pCache);
 }
 
-static void XAAStateWrapGetImage(DrawablePtr pDrawable, int sx, int sy, int w, int h,
+static void
+XAAStateWrapGetImage(DrawablePtr pDrawable, int sx, int sy, int w, int h,
 				 unsigned int format,unsigned long planeMask, 
 				 char *pdstLine)
 {
@@ -1431,31 +1466,31 @@ static void XAAStateWrapGetImage(DrawablePtr pDrawable, int sx, int sy, int w, i
    STATE_CHECK_SP(pStatePriv);
 
    (*pStatePriv->GetImage)(pDrawable, sx, sy, w, h,
-			   format, planeMask, 
-			   pdstLine);
+                             format, planeMask, pdstLine);
 }
 
-static void XAAStateWrapGetSpans(DrawablePtr pDrawable, int wMax, DDXPointPtr ppt,
+static void
+XAAStateWrapGetSpans(DrawablePtr pDrawable, int wMax, DDXPointPtr ppt,
 				 int *pwidth, int nspans, char *pdstStart)
 {
    GET_STATEPRIV_SCREEN(pDrawable->pScreen);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->GetSpans)(pDrawable, wMax, ppt,
-			   pwidth, nspans, pdstStart);
+    (*pStatePriv->GetSpans) (pDrawable, wMax, ppt, pwidth, nspans, pdstStart);
 }
 
-static void XAAStateWrapCopyWindow(WindowPtr pWindow, DDXPointRec ptOldOrg, 
+static void
+XAAStateWrapCopyWindow(WindowPtr pWindow, DDXPointRec ptOldOrg,
 				   RegionPtr prgnSrc)
 {
    GET_STATEPRIV_SCREEN(pWindow->drawable.pScreen);
    STATE_CHECK_SP(pStatePriv);
 
-   (*pStatePriv->CopyWindow)(pWindow, ptOldOrg, 
-			     prgnSrc);
+    (*pStatePriv->CopyWindow) (pWindow, ptOldOrg, prgnSrc);
 }
 
-static Bool XAAStateWrapSetupForCPUToScreenAlphaTexture2(ScrnInfoPtr pScrn,
+static Bool
+XAAStateWrapSetupForCPUToScreenAlphaTexture2(ScrnInfoPtr pScrn,
                                                          int op, CARD16 red,
                                                          CARD16 green,
                                                          CARD16 blue,
@@ -1464,32 +1499,33 @@ static Bool XAAStateWrapSetupForCPUToScreenAlphaTexture2(ScrnInfoPtr pScrn,
 							 CARD32 dstFormat,
                                                          CARD8 *alphaPtr,
                                                          int alphaPitch,
-                                                         int width, int height,
-                                                         int flags)
+                                             int width, int height, int flags)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
-   return (*pStatePriv->SetupForCPUToScreenAlphaTexture2)(pScrn, op, red, green,
-                                                         blue, alpha, srcFormat,
+    return (*pStatePriv->SetupForCPUToScreenAlphaTexture2) (pScrn, op, red,
+                                                            green, blue, alpha,
+                                                            srcFormat,
 							 dstFormat, alphaPtr,
 							 alphaPitch, width,
 							 height, flags);
 }
 
-static Bool XAAStateWrapSetupForCPUToScreenTexture2(ScrnInfoPtr pScrn, int op,
+static Bool
+XAAStateWrapSetupForCPUToScreenTexture2(ScrnInfoPtr pScrn, int op,
                                                     CARD32 srcFormat,
 						    CARD32 dstFormat,
 						    CARD8 *texPtr, int texPitch,
-                                                    int width, int height,
-                                                    int flags)
+                                        int width, int height, int flags)
 {
    GET_STATEPRIV_PSCRN(pScrn);
    STATE_CHECK_PSCRN(pScrn);
 
    return (*pStatePriv->SetupForCPUToScreenTexture2)(pScrn, op, srcFormat,
-                                                    dstFormat, texPtr, texPitch,
-						    width, height, flags);
+                                                       dstFormat, texPtr,
+                                                       texPitch, width, height,
+                                                       flags);
 }
 
 /* Setup Function */
@@ -1500,8 +1536,10 @@ XAAInitStateWrap(ScreenPtr pScreen, XAAInfoRecPtr infoRec)
    XAAStateWrapPtr pStatePriv;
    int i = 0;
    
-   if (!dixRegisterPrivateKey(&XAAStateKeyRec, PRIVATE_SCREEN, 0)) return FALSE;
-   if(!(pStatePriv = malloc(sizeof(XAAStateWrapRec)))) return FALSE;
+    if (!dixRegisterPrivateKey(&XAAStateKeyRec, PRIVATE_SCREEN, 0))
+        return FALSE;
+    if (!(pStatePriv = malloc(sizeof(XAAStateWrapRec))))
+        return FALSE;
    dixSetPrivate(&pScreen->devPrivates, XAAStateKey, pStatePriv);
    pStatePriv->RestoreAccelState = infoRec->RestoreAccelState;
    pStatePriv->pScrn = pScrn;
