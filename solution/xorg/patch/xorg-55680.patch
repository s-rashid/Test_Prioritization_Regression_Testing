diff --git a/hw/xfree86/xaa/xaa.h b/hw/xfree86/xaa/xaa.h
index 40b49e5..b530037 100644
--- a/hw/xfree86/xaa/xaa.h
+++ b/hw/xfree86/xaa/xaa.h
@@ -49,7 +49,6 @@
 16           HARDWARE_CLIP_SOLID_LINE
 ---------               -------
 
-
    ****  hardware pattern flags ****
 
 ---------               --------
@@ -76,7 +75,6 @@
 16           CONVERT_32BPP_TO_24BPP
 ---------               -------
 
-
    ******** GENERIC FLAGS *********
 
 ---------               -------
@@ -116,7 +114,6 @@
 #define OFFSCREEN_PIXMAPS		0x00000004
 #define LINEAR_FRAMEBUFFER		0x00000008
 
-
 /* GC fg, bg, and planemask restrictions */
 #define GXCOPY_ONLY			0x00000001
 #define NO_GXCOPY			0x00000002
@@ -177,7 +174,6 @@
 
 #define HARDWARE_CLIP_LINE				0x00000000
 
-
 /* image write flags */
 #define CONVERT_32BPP_TO_24BPP			0x00010000
 
@@ -188,7 +184,6 @@
 #define DO_NOT_TILE_MONO_DATA		0x00000008	
 #define DO_NOT_TILE_COLOR_DATA		0x00000010
 
-
 #define DEGREES_0	0
 #define DEGREES_90	1
 #define DEGREES_180	2
@@ -205,11 +200,8 @@
 
 #define XAA_RENDER_REPEAT		0x00000001
 
-typedef void (* ValidateGCProcPtr)(
-   GCPtr         pGC,
-   unsigned long changes,
-   DrawablePtr   pDraw
-);
+typedef void (*ValidateGCProcPtr) (GCPtr pGC,
+                                   unsigned long changes, DrawablePtr pDraw);
 
 typedef struct {
     unsigned char *bits;
@@ -221,7 +213,6 @@ typedef struct {
     int end;
 } NonTEGlyphInfo, *NonTEGlyphPtr;
 
-
 typedef struct {
    int x;
    int y;
@@ -239,7 +230,6 @@ typedef struct {
    DevUnion devPrivate;
 } XAACacheInfoRec, *XAACacheInfoPtr;
 
-
 typedef struct _PixmapLink {
   PixmapPtr pPix;
   struct _PixmapLink *next;
@@ -250,9 +240,7 @@ typedef struct _XAAInfoRec {
    ScrnInfoPtr pScrn;
    int Flags;
 
-   void (*Sync)(
-	ScrnInfoPtr pScrn
-   );
+    void (*Sync) (ScrnInfoPtr pScrn);
    
    /* Restore Accel State is a driver callback that is used
     * when another screen on the same device has been active.
@@ -261,411 +249,295 @@ typedef struct _XAAInfoRec {
     * function is required.
     */
    
-   void (*RestoreAccelState)(
-	ScrnInfoPtr pScrn
-   );
+    void (*RestoreAccelState) (ScrnInfoPtr pScrn);
 
    /***************** Low Level *****************/
 
 /* Blits */
-   void (*SetupForScreenToScreenCopy)(
-	ScrnInfoPtr pScrn,
+    void (*SetupForScreenToScreenCopy) (ScrnInfoPtr pScrn,
 	int xdir, int ydir,
 	int rop,
 	unsigned int planemask,
-	int trans_color
-   );
+                                        int trans_color);
    int ScreenToScreenCopyFlags;
 
-   void (*SubsequentScreenToScreenCopy)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentScreenToScreenCopy) (ScrnInfoPtr pScrn,
 	int xsrc, int ysrc,
-	int xdst, int ydst,
-	int w, int h
-   );
-
+                                          int xdst, int ydst, int w, int h);
    
 /* Solid fills */
-   void (*SetupForSolidFill)(
-	ScrnInfoPtr pScrn,
-	int color,
-	int rop,
-	unsigned int planemask
-   );    
+    void (*SetupForSolidFill) (ScrnInfoPtr pScrn,
+                               int color, int rop, unsigned int planemask);
    int SolidFillFlags;  
 
-   void (*SubsequentSolidFillRect)(
-	ScrnInfoPtr pScrn,
-	int x, int y, int w, int h
-   );    
+    void (*SubsequentSolidFillRect) (ScrnInfoPtr pScrn,
+                                     int x, int y, int w, int h);
 
-   void (*SubsequentSolidFillTrap)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentSolidFillTrap) (ScrnInfoPtr pScrn,
 	int y, int h, 
 	int left, int dxL, int dyL, int eL,
-	int right, int dxR, int dyR, int eR
-   );
-
+                                     int right, int dxR, int dyR, int eR);
 
 /* Solid lines */
 
-   void (*SetupForSolidLine)(
-	ScrnInfoPtr pScrn,
-	int color,
-	int rop,
-	unsigned int planemask
-   );    
+    void (*SetupForSolidLine) (ScrnInfoPtr pScrn,
+                               int color, int rop, unsigned int planemask);
    int SolidLineFlags;  
 
-   void (*SubsequentSolidTwoPointLine)(
-	ScrnInfoPtr pScrn,
-	int xa, int ya, int xb, int yb, int flags
-   );   
+    void (*SubsequentSolidTwoPointLine) (ScrnInfoPtr pScrn,
+                                         int xa, int ya, int xb, int yb,
+                                         int flags);
 
-   void (*SubsequentSolidBresenhamLine)(
-	ScrnInfoPtr pScrn,
-	int x, int y, int absmaj, int absmin, int err, int len, int octant
-   );   
+    void (*SubsequentSolidBresenhamLine) (ScrnInfoPtr pScrn,
+                                          int x, int y, int absmaj, int absmin,
+                                          int err, int len, int octant);
    int SolidBresenhamLineErrorTermBits;
 
-   void (*SubsequentSolidHorVertLine)(
-	ScrnInfoPtr pScrn,
-	int x, int y, int len, int dir
-   );   
+    void (*SubsequentSolidHorVertLine) (ScrnInfoPtr pScrn,
+                                        int x, int y, int len, int dir);
 
 /* Dashed lines */
 
-   void (*SetupForDashedLine)(
-	ScrnInfoPtr pScrn,
+    void (*SetupForDashedLine) (ScrnInfoPtr pScrn,
 	int fg, int bg,
 	int rop,
 	unsigned int planemask,
-	int length,
-	unsigned char *pattern
-   );    
+                                int length, unsigned char *pattern);
    int DashedLineFlags; 
    int DashPatternMaxLength; 
 
-   void (*SubsequentDashedTwoPointLine)(
-	ScrnInfoPtr pScrn,
-	int xa, int ya, int xb, int yb, int flags, int phase
-   );   
+    void (*SubsequentDashedTwoPointLine) (ScrnInfoPtr pScrn,
+                                          int xa, int ya, int xb, int yb,
+                                          int flags, int phase);
 
-   void (*SubsequentDashedBresenhamLine)(
-	ScrnInfoPtr pScrn,
-	int x, int y, int absmaj, int absmin, int err, int len, int flags,
-	int phase
-   );   
+    void (*SubsequentDashedBresenhamLine) (ScrnInfoPtr pScrn,
+                                           int x, int y, int absmaj, int absmin,
+                                           int err, int len, int flags,
+                                           int phase);
    int DashedBresenhamLineErrorTermBits;
 
 /* Clipper */
 
-   void (*SetClippingRectangle) (
-	ScrnInfoPtr pScrn,
-	int left, int top, int right, int bottom
-   );
+    void (*SetClippingRectangle) (ScrnInfoPtr pScrn,
+                                  int left, int top, int right, int bottom);
    int ClippingFlags;
 
    void (*DisableClipping)(ScrnInfoPtr pScrn);
 
 /* 8x8 mono pattern fills */
-   void (*SetupForMono8x8PatternFill)(
-	ScrnInfoPtr pScrn,
+    void (*SetupForMono8x8PatternFill) (ScrnInfoPtr pScrn,
 	int patx, int paty,
 	int fg, int bg,
-	int rop,
-	unsigned int planemask
-   );
+                                        int rop, unsigned int planemask);
    int Mono8x8PatternFillFlags; 
 
-   void (*SubsequentMono8x8PatternFillRect)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentMono8x8PatternFillRect) (ScrnInfoPtr pScrn,
 	int patx, int paty,
-	int x, int y, int w, int h
-   );
+                                              int x, int y, int w, int h);
 
-   void (*SubsequentMono8x8PatternFillTrap)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentMono8x8PatternFillTrap) (ScrnInfoPtr pScrn,
         int patx, int paty,
 	int y, int h, 
-	int left, int dxL, int dyL, int eL,
-	int right, int dxR, int dyR, int eR
-   );
+                                              int left, int dxL, int dyL,
+                                              int eL, int right, int dxR,
+                                              int dyR, int eR);
 
 /* 8x8 color pattern fills */
 
-   void (*SetupForColor8x8PatternFill)(
-	ScrnInfoPtr pScrn,
+    void (*SetupForColor8x8PatternFill) (ScrnInfoPtr pScrn,
 	int patx, int paty,
 	int rop,
 	unsigned int planemask,
-	int transparency_color
-   );
+                                         int transparency_color);
    int Color8x8PatternFillFlags; 
 
-   void (*SubsequentColor8x8PatternFillRect)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentColor8x8PatternFillRect) (ScrnInfoPtr pScrn,
 	int patx, int paty,
-	int x, int y, int w, int h
-   );
+                                               int x, int y, int w, int h);
 
-   void (*SubsequentColor8x8PatternFillTrap)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentColor8x8PatternFillTrap) (ScrnInfoPtr pScrn,
         int patx, int paty,
 	int y, int h, 
-	int left, int dxL, int dyL, int eL,
-	int right, int dxR, int dyR, int eR
-   );
-
+                                               int left, int dxL, int dyL,
+                                               int eL, int right, int dxR,
+                                               int dyR, int eR);
 
 /* Color expansion */
 
-   void (*SetupForCPUToScreenColorExpandFill)(
-	ScrnInfoPtr pScrn,
+    void (*SetupForCPUToScreenColorExpandFill) (ScrnInfoPtr pScrn,
 	int fg, int bg,
 	int rop,
-	unsigned int planemask
-   );     
+                                                unsigned int planemask);
    int CPUToScreenColorExpandFillFlags;  
 
-   void (*SubsequentCPUToScreenColorExpandFill)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentCPUToScreenColorExpandFill) (ScrnInfoPtr pScrn,
 	int x, int y, int w, int h,
-	int skipleft
-   );
+                                                  int skipleft);
 
    unsigned char *ColorExpandBase;
    int ColorExpandRange;
 
-
 /* Scanline color expansion  */
 
-   void (*SetupForScanlineCPUToScreenColorExpandFill)(
-	ScrnInfoPtr pScrn,
+    void (*SetupForScanlineCPUToScreenColorExpandFill) (ScrnInfoPtr pScrn,
 	int fg, int bg,
 	int rop,
-	unsigned int planemask
-   );  
+                                                        unsigned int planemask);
    int ScanlineCPUToScreenColorExpandFillFlags;
 
-   void (*SubsequentScanlineCPUToScreenColorExpandFill)(
-	ScrnInfoPtr pScrn,
-	int x, int y, int w, int h,
-	int skipleft
-   );
+    void (*SubsequentScanlineCPUToScreenColorExpandFill) (ScrnInfoPtr pScrn,
+                                                          int x, int y, int w,
+                                                          int h, int skipleft);
 
-   void (*SubsequentColorExpandScanline)(
-	ScrnInfoPtr pScrn,
-	int bufno
-   );
+    void (*SubsequentColorExpandScanline) (ScrnInfoPtr pScrn, int bufno);
 
    int NumScanlineColorExpandBuffers;
    unsigned char **ScanlineColorExpandBuffers;
 
 /* Screen to screen color expansion */
 
-   void (*SetupForScreenToScreenColorExpandFill) (
-	ScrnInfoPtr pScrn,
+    void (*SetupForScreenToScreenColorExpandFill) (ScrnInfoPtr pScrn,
 	int fg, int bg,
 	int rop,
-	unsigned int planemask
-   );
+                                                   unsigned int planemask);
    int ScreenToScreenColorExpandFillFlags;
 
-   void (*SubsequentScreenToScreenColorExpandFill)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentScreenToScreenColorExpandFill) (ScrnInfoPtr pScrn,
 	int x, int y, int w, int h,
-	int srcx, int srcy, int skipleft
-   );
-   
+                                                     int srcx, int srcy,
+                                                     int skipleft);
 
 /*  Image transfers */
 
-   void (*SetupForImageWrite)(
-	ScrnInfoPtr pScrn,
+    void (*SetupForImageWrite) (ScrnInfoPtr pScrn,
 	int rop,
 	unsigned int planemask,
-	int transparency_color,
-	int bpp, int depth
-   );
+                                int transparency_color, int bpp, int depth);
    int ImageWriteFlags;
 
-   void (*SubsequentImageWriteRect)(
-	ScrnInfoPtr pScrn,
-	int x, int y, int w, int h,
-	int skipleft
-   );
+    void (*SubsequentImageWriteRect) (ScrnInfoPtr pScrn,
+                                      int x, int y, int w, int h, int skipleft);
    unsigned char *ImageWriteBase;
    int ImageWriteRange;
 	
 /*  Scanline Image transfers */
 
-   void (*SetupForScanlineImageWrite)(
-	ScrnInfoPtr pScrn,
+    void (*SetupForScanlineImageWrite) (ScrnInfoPtr pScrn,
 	int rop,
 	unsigned int planemask,
 	int transparency_color,
-	int bpp, int depth
-   );
+                                        int bpp, int depth);
    int ScanlineImageWriteFlags;
 
-   void (*SubsequentScanlineImageWriteRect)(
-	ScrnInfoPtr pScrn,
+    void (*SubsequentScanlineImageWriteRect) (ScrnInfoPtr pScrn,
 	int x, int y, int w, int h,
-	int skipleft
-   );
+                                              int skipleft);
 
-   void (*SubsequentImageWriteScanline) (
-	ScrnInfoPtr pScrn,
-	int bufno
-   );
+    void (*SubsequentImageWriteScanline) (ScrnInfoPtr pScrn, int bufno);
    
    int NumScanlineImageWriteBuffers;
    unsigned char **ScanlineImageWriteBuffers;
 
   /* Image Reads - OBSOLETE AND NOT USED */
 
-   void (*SetupForImageRead) (
-	ScrnInfoPtr pScrn,
-	int bpp, int depth
-   );
+    void (*SetupForImageRead) (ScrnInfoPtr pScrn, int bpp, int depth);
    int ImageReadFlags;
 
    unsigned char *ImageReadBase;
    int ImageReadRange;
 
-   void (*SubsequentImageReadRect)(
-	ScrnInfoPtr pScrn,
-	int x, int y, int w, int h
-   );  
-
+    void (*SubsequentImageReadRect) (ScrnInfoPtr pScrn,
+                                     int x, int y, int w, int h);
 
    /***************** Mid Level *****************/
-   void (*ScreenToScreenBitBlt)(
-	ScrnInfoPtr pScrn,
+    void (*ScreenToScreenBitBlt) (ScrnInfoPtr pScrn,
 	int nbox,
 	DDXPointPtr pptSrc,
         BoxPtr pbox,
 	int xdir, int ydir,
-	int alu,
-	unsigned int planmask
-   );
+                                  int alu, unsigned int planmask);
    int ScreenToScreenBitBltFlags;
 
-   void (*WriteBitmap) (
-	ScrnInfoPtr pScrn,
+    void (*WriteBitmap) (ScrnInfoPtr pScrn,
 	int x, int y, int w, int h,
 	unsigned char *src,
     	int srcwidth,
     	int skipleft,
-	int fg, int bg,
-	int rop,
-	unsigned int planemask
-   );
+                         int fg, int bg, int rop, unsigned int planemask);
    int WriteBitmapFlags;
 
-   void (*FillSolidRects)(
-	ScrnInfoPtr pScrn,
+    void (*FillSolidRects) (ScrnInfoPtr pScrn,
 	int fg, int rop,
-        unsigned int planemask,
-	int nBox,
-	BoxPtr pBox 
-   );
+                            unsigned int planemask, int nBox, BoxPtr pBox);
    int FillSolidRectsFlags;
 
-   void (*FillMono8x8PatternRects)(
-	ScrnInfoPtr pScrn,
+    void (*FillMono8x8PatternRects) (ScrnInfoPtr pScrn,
 	int fg, int bg, int rop,
         unsigned int planemask,
 	int nBox,
 	BoxPtr pBox, 
-	int pat0, int pat1,
-	int xorg, int yorg
-   );
+                                     int pat0, int pat1, int xorg, int yorg);
    int FillMono8x8PatternRectsFlags;
 
-   void (*FillColor8x8PatternRects)(
-	ScrnInfoPtr pScrn,
+    void (*FillColor8x8PatternRects) (ScrnInfoPtr pScrn,
 	int rop,
         unsigned int planemask,
 	int nBox,
 	BoxPtr pBox,
 	int xorg, int yorg,
-	XAACacheInfoPtr pCache
-   );
+                                      XAACacheInfoPtr pCache);
    int FillColor8x8PatternRectsFlags;
 
-   void (*FillCacheBltRects)(
-	ScrnInfoPtr pScrn,
+    void (*FillCacheBltRects) (ScrnInfoPtr pScrn,
 	int rop,
         unsigned int planemask,
 	int nBox,
 	BoxPtr pBox,
-	int xorg, int yorg,
-	XAACacheInfoPtr pCache
-   );
+                               int xorg, int yorg, XAACacheInfoPtr pCache);
    int FillCacheBltRectsFlags;
 
-   void (*FillColorExpandRects)(
-	ScrnInfoPtr pScrn,
+    void (*FillColorExpandRects) (ScrnInfoPtr pScrn,
 	int fg, int bg, int rop,
         unsigned int planemask,
 	int nBox,
 	BoxPtr pBox,
-	int xorg, int yorg,
-	PixmapPtr pPix
-   );
+                                  int xorg, int yorg, PixmapPtr pPix);
    int FillColorExpandRectsFlags;
 
-   void (*FillCacheExpandRects)(
-	ScrnInfoPtr pScrn,
+    void (*FillCacheExpandRects) (ScrnInfoPtr pScrn,
 	int fg, int bg, int rop,
 	unsigned int planemask,
 	int nBox,
 	BoxPtr pBox,
-	int xorg, int yorg,
-	PixmapPtr pPix
-   );
+                                  int xorg, int yorg, PixmapPtr pPix);
    int FillCacheExpandRectsFlags;
 
-   void (*FillImageWriteRects)(
-	ScrnInfoPtr pScrn,
+    void (*FillImageWriteRects) (ScrnInfoPtr pScrn,
 	int rop,
 	unsigned int planemask,
 	int nBox,
 	BoxPtr pBox,
-	int xorg, int yorg,
-	PixmapPtr pPix
-   );
+                                 int xorg, int yorg, PixmapPtr pPix);
    int FillImageWriteRectsFlags;
    
-
-   void (*FillSolidSpans)(
-	ScrnInfoPtr pScrn,
+    void (*FillSolidSpans) (ScrnInfoPtr pScrn,
 	int fg, int rop,
         unsigned int planemask,
 	int n,
-	DDXPointPtr points,
-	int *widths,
-	int fSorted 
-   );
+                            DDXPointPtr points, int *widths, int fSorted);
    int FillSolidSpansFlags;
 
-   void (*FillMono8x8PatternSpans)(
-	ScrnInfoPtr pScrn,
+    void (*FillMono8x8PatternSpans) (ScrnInfoPtr pScrn,
 	int fg, int bg, int rop,
         unsigned int planemask,
 	int n,
 	DDXPointPtr points,
 	int *widths,
 	int fSorted, 
-	int pat0, int pat1,
-	int xorg, int yorg
-   );
+                                     int pat0, int pat1, int xorg, int yorg);
    int FillMono8x8PatternSpansFlags;
 
-   void (*FillColor8x8PatternSpans)(
-	ScrnInfoPtr pScrn,
+    void (*FillColor8x8PatternSpans) (ScrnInfoPtr pScrn,
 	int rop,
         unsigned int planemask,
 	int n,
@@ -673,418 +545,259 @@ typedef struct _XAAInfoRec {
 	int *widths,
 	int fSorted,
 	XAACacheInfoPtr pCache,
-	int xorg, int yorg
-   );
+                                      int xorg, int yorg);
    int FillColor8x8PatternSpansFlags;
 
-   void (*FillCacheBltSpans)(
-	ScrnInfoPtr pScrn,
+    void (*FillCacheBltSpans) (ScrnInfoPtr pScrn,
 	int rop,
         unsigned int planemask,
 	int n,
 	DDXPointPtr points,
 	int *widths,
 	int fSorted,
-	XAACacheInfoPtr pCache,
-	int xorg, int yorg
-   );
+                               XAACacheInfoPtr pCache, int xorg, int yorg);
    int FillCacheBltSpansFlags;
 
-   void (*FillColorExpandSpans)(
-	ScrnInfoPtr pScrn,
+    void (*FillColorExpandSpans) (ScrnInfoPtr pScrn,
 	int fg, int bg, int rop,
         unsigned int planemask,
 	int n,
 	DDXPointPtr points,
 	int *widths,
 	int fSorted,
-	int xorg, int yorg,
-	PixmapPtr pPix
-   );
+                                  int xorg, int yorg, PixmapPtr pPix);
    int FillColorExpandSpansFlags;
 
-   void (*FillCacheExpandSpans)(
-	ScrnInfoPtr pScrn,
+    void (*FillCacheExpandSpans) (ScrnInfoPtr pScrn,
 	int fg, int bg, int rop,
 	unsigned int planemask,
 	int n,
 	DDXPointPtr ppt,
 	int *pwidth,
 	int fSorted,
-	int xorg, int yorg,
-	PixmapPtr pPix
-   );
+                                  int xorg, int yorg, PixmapPtr pPix);
    int FillCacheExpandSpansFlags;
 
-   void (*TEGlyphRenderer)(
-	ScrnInfoPtr pScrn,
-	int x, int y, int w, int h, int skipleft, int startline, 
-	unsigned int **glyphs, int glyphWidth,
-	int fg, int bg, int rop, unsigned planemask
-   );
+    void (*TEGlyphRenderer) (ScrnInfoPtr pScrn,
+                             int x, int y, int w, int h, int skipleft,
+                             int startline, unsigned int **glyphs,
+                             int glyphWidth, int fg, int bg, int rop,
+                             unsigned planemask);
    int TEGlyphRendererFlags;
 
-   void (*NonTEGlyphRenderer)(
-	ScrnInfoPtr pScrn,
+    void (*NonTEGlyphRenderer) (ScrnInfoPtr pScrn,
 	int x, int y, int n,
 	NonTEGlyphPtr glyphs,
 	BoxPtr pbox,
-	int fg, int rop,
-	unsigned int planemask
-   );
+                                int fg, int rop, unsigned int planemask);
    int NonTEGlyphRendererFlags;
 
-   void (*WritePixmap) (
-	ScrnInfoPtr pScrn,
+    void (*WritePixmap) (ScrnInfoPtr pScrn,
 	int x, int y, int w, int h,
 	unsigned char *src,
     	int srcwidth,
 	int rop,
 	unsigned int planemask,
-	int transparency_color,
-	int bpp, int depth
-   );
+                         int transparency_color, int bpp, int depth);
    int WritePixmapFlags;
 
-   void (*ReadPixmap) (
-	ScrnInfoPtr pScrn,
+    void (*ReadPixmap) (ScrnInfoPtr pScrn,
 	int x, int y, int w, int h,
-	unsigned char *dst,	
-	int dstwidth,
-	int bpp, int depth
-   );
+                        unsigned char *dst, int dstwidth, int bpp, int depth);
    int ReadPixmapFlags;
 
    /***************** GC Level *****************/
-   RegionPtr (*CopyArea)(
-	DrawablePtr pSrcDrawable,
+    RegionPtr (*CopyArea) (DrawablePtr pSrcDrawable,
 	DrawablePtr pDstDrawable,
 	GC *pGC,
 	int srcx, int srcy,
-	int width, int height,
-	int dstx, int dsty
-   );
+                           int width, int height, int dstx, int dsty);
    int CopyAreaFlags;
 
-   RegionPtr (*CopyPlane)(
-	DrawablePtr pSrc,
+    RegionPtr (*CopyPlane) (DrawablePtr pSrc,
 	DrawablePtr pDst,
 	GCPtr pGC,
 	int srcx, int srcy,
 	int width, int height,
-	int dstx, int dsty,
-	unsigned long bitPlane
-   );
+                            int dstx, int dsty, unsigned long bitPlane);
    int CopyPlaneFlags;
 
-   void (*PushPixelsSolid) (
-	GCPtr	pGC,
+    void (*PushPixelsSolid) (GCPtr pGC,
 	PixmapPtr pBitMap,
 	DrawablePtr pDrawable,
-	int dx, int dy, 
-	int xOrg, int yOrg
-   );
+                             int dx, int dy, int xOrg, int yOrg);
    int PushPixelsFlags; 
 
    /** PolyFillRect **/
 
-   void (*PolyFillRectSolid)(
-	DrawablePtr pDraw,
-	GCPtr pGC,
-	int nrectFill, 	
-	xRectangle *prectInit
-   );  
+    void (*PolyFillRectSolid) (DrawablePtr pDraw,
+                               GCPtr pGC, int nrectFill, xRectangle *prectInit);
    int PolyFillRectSolidFlags;
 
-   void (*PolyFillRectStippled)(
-	DrawablePtr pDraw,
+    void (*PolyFillRectStippled) (DrawablePtr pDraw,
 	GCPtr pGC,
-	int nrectFill, 	
-	xRectangle *prectInit
-   );  
+                                  int nrectFill, xRectangle *prectInit);
    int PolyFillRectStippledFlags;
 
-   void (*PolyFillRectOpaqueStippled)(
-	DrawablePtr pDraw,
+    void (*PolyFillRectOpaqueStippled) (DrawablePtr pDraw,
 	GCPtr pGC,
-	int nrectFill, 	
-	xRectangle *prectInit
-   );  
+                                        int nrectFill, xRectangle *prectInit);
    int PolyFillRectOpaqueStippledFlags;
 
-   void (*PolyFillRectTiled)(
-	DrawablePtr pDraw,
-	GCPtr pGC,
-	int nrectFill, 	
-	xRectangle *prectInit
-   );  
+    void (*PolyFillRectTiled) (DrawablePtr pDraw,
+                               GCPtr pGC, int nrectFill, xRectangle *prectInit);
    int PolyFillRectTiledFlags;
 
    /** FillSpans **/   
 
-   void (*FillSpansSolid)(
-	DrawablePtr	pDraw,
+    void (*FillSpansSolid) (DrawablePtr pDraw,
 	GCPtr		pGC,
 	int		nInit,
-	DDXPointPtr 	ppt,
-	int		*pwidth,
-	int		fSorted 
-   );
+                            DDXPointPtr ppt, int *pwidth, int fSorted);
    int FillSpansSolidFlags;
 
-   void (*FillSpansStippled)(
-	DrawablePtr	pDraw,
+    void (*FillSpansStippled) (DrawablePtr pDraw,
 	GCPtr		pGC,
 	int		nInit,
-	DDXPointPtr 	ppt,
-	int		*pwidth,
-	int		fSorted 
-   );
+                               DDXPointPtr ppt, int *pwidth, int fSorted);
    int FillSpansStippledFlags;
 
-   void (*FillSpansOpaqueStippled)(
-	DrawablePtr	pDraw,
+    void (*FillSpansOpaqueStippled) (DrawablePtr pDraw,
 	GCPtr		pGC,
 	int		nInit,
-	DDXPointPtr 	ppt,
-	int		*pwidth,
-	int		fSorted 
-   );
+                                     DDXPointPtr ppt, int *pwidth, int fSorted);
    int FillSpansOpaqueStippledFlags;
 
-   void (*FillSpansTiled)(
-	DrawablePtr	pDraw,
+    void (*FillSpansTiled) (DrawablePtr pDraw,
 	GCPtr		pGC,
 	int		nInit,
-	DDXPointPtr 	ppt,
-	int		*pwidth,
-	int		fSorted 
-   );
+                            DDXPointPtr ppt, int *pwidth, int fSorted);
    int FillSpansTiledFlags;
 
-   int (*PolyText8TE) (
-	DrawablePtr pDraw,
-	GCPtr pGC,
-	int x, int y,
-	int count,
-	char *chars
-   );
+    int (*PolyText8TE) (DrawablePtr pDraw,
+                        GCPtr pGC, int x, int y, int count, char *chars);
    int PolyText8TEFlags;
 
-   int (*PolyText16TE) (
-	DrawablePtr pDraw,
+    int (*PolyText16TE) (DrawablePtr pDraw,
 	GCPtr pGC,
-	int x, int y,
-	int count,
-	unsigned short *chars
-   );
+                         int x, int y, int count, unsigned short *chars);
    int PolyText16TEFlags;
 
-   void (*ImageText8TE) (
-	DrawablePtr pDraw,
-	GCPtr pGC,
-	int x, int y,
-	int count,
-	char *chars
-   );
+    void (*ImageText8TE) (DrawablePtr pDraw,
+                          GCPtr pGC, int x, int y, int count, char *chars);
    int ImageText8TEFlags;
 
-   void (*ImageText16TE) (
-	DrawablePtr pDraw,
+    void (*ImageText16TE) (DrawablePtr pDraw,
 	GCPtr pGC,
-	int x, int y,
-	int count,
-	unsigned short *chars
-   );
+                           int x, int y, int count, unsigned short *chars);
    int ImageText16TEFlags;
 
-   void (*ImageGlyphBltTE) (
-	DrawablePtr pDrawable,
+    void (*ImageGlyphBltTE) (DrawablePtr pDrawable,
 	GCPtr pGC,
 	int xInit, int yInit,
 	unsigned int nglyph,
-	CharInfoPtr *ppci,
-	pointer pglyphBase 
-   );
+                             CharInfoPtr * ppci, pointer pglyphBase);
    int ImageGlyphBltTEFlags;
 
-   void (*PolyGlyphBltTE) (
-	DrawablePtr pDrawable,
+    void (*PolyGlyphBltTE) (DrawablePtr pDrawable,
 	GCPtr pGC,
 	int xInit, int yInit,
 	unsigned int nglyph,
-	CharInfoPtr *ppci,
-	pointer pglyphBase 
-   );
+                            CharInfoPtr * ppci, pointer pglyphBase);
    int PolyGlyphBltTEFlags;
 
-   int (*PolyText8NonTE) (
-	DrawablePtr pDraw,
-	GCPtr pGC,
-	int x, int y,
-	int count,
-	char *chars
-   );
+    int (*PolyText8NonTE) (DrawablePtr pDraw,
+                           GCPtr pGC, int x, int y, int count, char *chars);
    int PolyText8NonTEFlags;
 
-   int (*PolyText16NonTE) (
-	DrawablePtr pDraw,
+    int (*PolyText16NonTE) (DrawablePtr pDraw,
 	GCPtr pGC,
-	int x, int y,
-	int count,
-	unsigned short *chars
-   );
+                            int x, int y, int count, unsigned short *chars);
    int PolyText16NonTEFlags;
 
-   void (*ImageText8NonTE) (
-	DrawablePtr pDraw,
-	GCPtr pGC,
-	int x, int y,
-	int count,
-	char *chars
-   );
+    void (*ImageText8NonTE) (DrawablePtr pDraw,
+                             GCPtr pGC, int x, int y, int count, char *chars);
    int ImageText8NonTEFlags;
 
-   void (*ImageText16NonTE) (
-	DrawablePtr pDraw,
+    void (*ImageText16NonTE) (DrawablePtr pDraw,
 	GCPtr pGC,
-	int x, int y,
-	int count,
-	unsigned short *chars
-   );
+                              int x, int y, int count, unsigned short *chars);
    int ImageText16NonTEFlags;
 
-   void (*ImageGlyphBltNonTE) (
-	DrawablePtr pDrawable,
+    void (*ImageGlyphBltNonTE) (DrawablePtr pDrawable,
 	GCPtr pGC,
 	int xInit, int yInit,
 	unsigned int nglyph,
-	CharInfoPtr *ppci,
-	pointer pglyphBase 
-   );
+                                CharInfoPtr * ppci, pointer pglyphBase);
    int ImageGlyphBltNonTEFlags;
 
-   void (*PolyGlyphBltNonTE) (
-	DrawablePtr pDrawable,
+    void (*PolyGlyphBltNonTE) (DrawablePtr pDrawable,
 	GCPtr pGC,
 	int xInit, int yInit,
 	unsigned int nglyph,
-	CharInfoPtr *ppci,
-	pointer pglyphBase 
-   );
+                               CharInfoPtr * ppci, pointer pglyphBase);
    int PolyGlyphBltNonTEFlags;
 
-   void (*PolyRectangleThinSolid)(
-	DrawablePtr  pDrawable,
+    void (*PolyRectangleThinSolid) (DrawablePtr pDrawable,
 	GCPtr        pGC,    
-	int	     nRectsInit,
-	xRectangle  *pRectsInit 
-   );
+                                    int nRectsInit, xRectangle *pRectsInit);
    int PolyRectangleThinSolidFlags;
 
-   void (*PolylinesWideSolid)(
-	DrawablePtr	pDrawable,
-	GCPtr		pGC,
-	int		mode,
-	int 		npt,
-	DDXPointPtr pPts
-   );
+    void (*PolylinesWideSolid) (DrawablePtr pDrawable,
+                                GCPtr pGC, int mode, int npt, DDXPointPtr pPts);
    int PolylinesWideSolidFlags;
 
-   void (*PolylinesThinSolid)(
-	DrawablePtr	pDrawable,
-	GCPtr		pGC,
-	int		mode,
-	int 		npt,
-	DDXPointPtr pPts
-   );
+    void (*PolylinesThinSolid) (DrawablePtr pDrawable,
+                                GCPtr pGC, int mode, int npt, DDXPointPtr pPts);
    int PolylinesThinSolidFlags;
 
-   void (*PolySegmentThinSolid)(
-	DrawablePtr	pDrawable,
-	GCPtr		pGC,
-	int		nseg,
-	xSegment	*pSeg
-   );
+    void (*PolySegmentThinSolid) (DrawablePtr pDrawable,
+                                  GCPtr pGC, int nseg, xSegment * pSeg);
    int PolySegmentThinSolidFlags;
 
-   void (*PolylinesThinDashed)(
-	DrawablePtr	pDrawable,
+    void (*PolylinesThinDashed) (DrawablePtr pDrawable,
 	GCPtr		pGC,
-	int		mode,
-	int 		npt,
-	DDXPointPtr pPts
-   );
+                                 int mode, int npt, DDXPointPtr pPts);
    int PolylinesThinDashedFlags;
 
-   void (*PolySegmentThinDashed)(
-	DrawablePtr	pDrawable,
-	GCPtr		pGC,
-	int		nseg,
-	xSegment	*pSeg
-   );
+    void (*PolySegmentThinDashed) (DrawablePtr pDrawable,
+                                   GCPtr pGC, int nseg, xSegment * pSeg);
    int PolySegmentThinDashedFlags;
 
-   void (*FillPolygonSolid)(
-	DrawablePtr	pDrawable,
+    void (*FillPolygonSolid) (DrawablePtr pDrawable,
 	GCPtr		pGC,
 	int		shape,
-	int		mode,
-	int		count,
-	DDXPointPtr	ptsIn 
-   );
+                              int mode, int count, DDXPointPtr ptsIn);
    int FillPolygonSolidFlags;
 
-   void (*FillPolygonStippled)(
-	DrawablePtr	pDrawable,
+    void (*FillPolygonStippled) (DrawablePtr pDrawable,
 	GCPtr		pGC,
 	int		shape,
-	int		mode,
-	int		count,
-	DDXPointPtr	ptsIn 
-   );
+                                 int mode, int count, DDXPointPtr ptsIn);
    int FillPolygonStippledFlags;
 
-   void (*FillPolygonOpaqueStippled)(
-	DrawablePtr	pDrawable,
+    void (*FillPolygonOpaqueStippled) (DrawablePtr pDrawable,
 	GCPtr		pGC,
 	int		shape,
-	int		mode,
-	int		count,
-	DDXPointPtr	ptsIn 
-   );
+                                       int mode, int count, DDXPointPtr ptsIn);
    int FillPolygonOpaqueStippledFlags;
 
-   void (*FillPolygonTiled)(
-	DrawablePtr	pDrawable,
+    void (*FillPolygonTiled) (DrawablePtr pDrawable,
 	GCPtr		pGC,
 	int		shape,
-	int		mode,
-	int		count,
-	DDXPointPtr	ptsIn 
-   );
+                              int mode, int count, DDXPointPtr ptsIn);
    int FillPolygonTiledFlags;
 
-   void (*PolyFillArcSolid)(
-	DrawablePtr	pDraw,
-	GCPtr		pGC,
-	int		narcs,
-	xArc		*parcs
-   );
+    void (*PolyFillArcSolid) (DrawablePtr pDraw,
+                              GCPtr pGC, int narcs, xArc * parcs);
    int PolyFillArcSolidFlags;
 
-   void (*PutImage)(
-	DrawablePtr pDraw,
+    void (*PutImage) (DrawablePtr pDraw,
 	GCPtr       pGC,
 	int         depth, 
 	int	    x, 
 	int         y, 
-	int	    w, 
-	int	    h,
-	int         leftPad,
-	int         format,
-	char        *pImage
-   );
+                      int w, int h, int leftPad, int format, char *pImage);
    int PutImageFlags;
    
    /* Validation masks */
@@ -1139,14 +852,8 @@ typedef struct _XAAInfoRec {
    Bool CanDoMono8x8;
    Bool CanDoColor8x8;
 
-   void (*InitPixmapCache)(
-	ScreenPtr pScreen, 
-	RegionPtr areas,
-	pointer data
-   );
-   void (*ClosePixmapCache)(
-	ScreenPtr pScreen
-   );
+    void (*InitPixmapCache) (ScreenPtr pScreen, RegionPtr areas, pointer data);
+    void (*ClosePixmapCache) (ScreenPtr pScreen);
 
    int (*StippledFillChooser)(GCPtr pGC);
    int (*OpaqueStippledFillChooser)(GCPtr pGC);
@@ -1158,24 +865,14 @@ typedef struct _XAAInfoRec {
    int  MaxCacheableStippleWidth;
    int  MaxCacheableStippleHeight;
 
-   XAACacheInfoPtr (*CacheTile)(
-	ScrnInfoPtr Scrn, PixmapPtr pPix
-   );
-   XAACacheInfoPtr (*CacheStipple)(
-	ScrnInfoPtr Scrn, PixmapPtr pPix, 
-	int fg, int bg
-   );
-   XAACacheInfoPtr (*CacheMonoStipple)(
-	ScrnInfoPtr Scrn, PixmapPtr pPix
-   );
-   XAACacheInfoPtr (*CacheMono8x8Pattern)(
-	ScrnInfoPtr Scrn, int pat0, int pat1
-   );
-   XAACacheInfoPtr (*CacheColor8x8Pattern)(
-	ScrnInfoPtr Scrn, PixmapPtr pPix, 
-	int fg, int bg
-   );
-
+     XAACacheInfoPtr(*CacheTile) (ScrnInfoPtr Scrn, PixmapPtr pPix);
+     XAACacheInfoPtr(*CacheStipple) (ScrnInfoPtr Scrn, PixmapPtr pPix,
+                                     int fg, int bg);
+     XAACacheInfoPtr(*CacheMonoStipple) (ScrnInfoPtr Scrn, PixmapPtr pPix);
+     XAACacheInfoPtr(*CacheMono8x8Pattern) (ScrnInfoPtr Scrn, int pat0,
+                                            int pat1);
+     XAACacheInfoPtr(*CacheColor8x8Pattern) (ScrnInfoPtr Scrn, PixmapPtr pPix,
+                                             int fg, int bg);
 
    int MonoPatternPitch;
    int CacheWidthMono8x8Pattern;
@@ -1187,29 +884,19 @@ typedef struct _XAAInfoRec {
 
    int CacheColorExpandDensity;
 
-   void (*WriteBitmapToCache) (
-	ScrnInfoPtr pScrn,
+    void (*WriteBitmapToCache) (ScrnInfoPtr pScrn,
 	int x, int y, int w, int h,
 	unsigned char *src,
-    	int srcwidth,
-	int fg, int bg
-   );
-   void (*WritePixmapToCache) (
-	ScrnInfoPtr pScrn,
+                                int srcwidth, int fg, int bg);
+    void (*WritePixmapToCache) (ScrnInfoPtr pScrn,
 	int x, int y, int w, int h,
 	unsigned char *src,
-    	int srcwidth,
-	int bpp, int depth
-   );
-   void (*WriteMono8x8PatternToCache)(
-	ScrnInfoPtr pScrn, 
-	XAACacheInfoPtr pCache
-   );
-   void (*WriteColor8x8PatternToCache)(
-	ScrnInfoPtr pScrn, 
+                                int srcwidth, int bpp, int depth);
+    void (*WriteMono8x8PatternToCache) (ScrnInfoPtr pScrn,
+                                        XAACacheInfoPtr pCache);
+    void (*WriteColor8x8PatternToCache) (ScrnInfoPtr pScrn,
 	PixmapPtr pPix, 
-	XAACacheInfoPtr pCache
-   );
+                                         XAACacheInfoPtr pCache);
    
    char* PixmapCachePrivate;
 
@@ -1247,8 +934,7 @@ typedef struct _XAAInfoRec {
 
    CARD32 FullPlanemasks[32];
 
-   Bool (*Composite) (
-   	CARD8      op,
+    Bool (*Composite) (CARD8 op,
         PicturePtr pSrc,
         PicturePtr pMask,
         PicturePtr pDst,
@@ -1256,30 +942,21 @@ typedef struct _XAAInfoRec {
         INT16      ySrc,
         INT16      xMask,
         INT16      yMask,
-        INT16      xDst,
-        INT16      yDst,
-        CARD16     width,
-        CARD16     height
-   );
-
-   Bool (*Glyphs) (
-        CARD8         op,
+                       INT16 xDst, INT16 yDst, CARD16 width, CARD16 height);
+
+    Bool (*Glyphs) (CARD8 op,
         PicturePtr    pSrc,
         PicturePtr    pDst,
         PictFormatPtr maskFormat,
         INT16         xSrc,
         INT16         ySrc,
-        int           nlist,
-        GlyphListPtr  list,
-        GlyphPtr      *glyphs
-   );
+                    int nlist, GlyphListPtr list, GlyphPtr * glyphs);
 
    /* The old SetupForCPUToScreenAlphaTexture function is no longer used because
     * it doesn't pass in enough information to write a conforming
     * implementation.  See SetupForCPUToScreenAlphaTexture2.
     */
-   Bool (*SetupForCPUToScreenAlphaTexture) (
-	ScrnInfoPtr	pScrn,
+    Bool (*SetupForCPUToScreenAlphaTexture) (ScrnInfoPtr pScrn,
 	int		op,
 	CARD16		red,
 	CARD16		green,
@@ -1288,19 +965,12 @@ typedef struct _XAAInfoRec {
 	int		alphaType,
 	CARD8		*alphaPtr,
 	int		alphaPitch,
-	int		width,
-	int		height,
-	int		flags
-   );
-   void (*SubsequentCPUToScreenAlphaTexture) (
-	ScrnInfoPtr	pScrn,
+                                             int width, int height, int flags);
+    void (*SubsequentCPUToScreenAlphaTexture) (ScrnInfoPtr pScrn,
 	int		dstx,
 	int		dsty,
 	int		srcx,
-	int		srcy,
-	int		width,
-	int		height
-   );
+                                               int srcy, int width, int height);
    int CPUToScreenAlphaTextureFlags;
    CARD32 * CPUToScreenAlphaTextureFormats;
 
@@ -1308,36 +978,26 @@ typedef struct _XAAInfoRec {
     * it doesn't pass in enough information to write a conforming
     * implementation.  See SetupForCPUToScreenTexture2.
     */
-   Bool (*SetupForCPUToScreenTexture) (
-	ScrnInfoPtr	pScrn,
+    Bool (*SetupForCPUToScreenTexture) (ScrnInfoPtr pScrn,
 	int		op,
 	int		texType,
 	CARD8		*texPtr,
 	int		texPitch,
-	int		width,
-	int		height,
-	int		flags
-   );
-   void (*SubsequentCPUToScreenTexture) (
-	ScrnInfoPtr	pScrn,
+                                        int width, int height, int flags);
+    void (*SubsequentCPUToScreenTexture) (ScrnInfoPtr pScrn,
 	int		dstx,
 	int		dsty,
 	int		srcx,
-	int		srcy,
-	int		width,
-	int		height
-   );
+                                          int srcy, int width, int height);
    int CPUToScreenTextureFlags;
    CARD32 * CPUToScreenTextureFormats;
 
-
    /* these were added for 4.3.0 */
    BoxRec SolidLineLimits;
    BoxRec DashedLineLimits;
 
    /* These were added for X.Org 6.8.0 */
-   Bool (*SetupForCPUToScreenAlphaTexture2) (
-	ScrnInfoPtr	pScrn,
+    Bool (*SetupForCPUToScreenAlphaTexture2) (ScrnInfoPtr pScrn,
 	int		op,
 	CARD16		red,
 	CARD16		green,
@@ -1347,48 +1007,32 @@ typedef struct _XAAInfoRec {
 	CARD32		dstFormat,
 	CARD8		*alphaPtr,
 	int		alphaPitch,
-	int		width,
-	int		height,
-	int		flags
-   );
+                                              int width, int height, int flags);
    CARD32 *CPUToScreenAlphaTextureDstFormats;
 
-   Bool (*SetupForCPUToScreenTexture2) (
-	ScrnInfoPtr	pScrn,
+    Bool (*SetupForCPUToScreenTexture2) (ScrnInfoPtr pScrn,
 	int		op,
 	CARD32		srcFormat,
 	CARD32		dstFormat,
 	CARD8		*texPtr,
 	int		texPitch,
-	int		width,
-	int		height,
-	int		flags
-   );
+                                         int width, int height, int flags);
    CARD32 *CPUToScreenTextureDstFormats;
 } XAAInfoRec, *XAAInfoRecPtr;
 
 #define SET_SYNC_FLAG(infoRec)	(infoRec)->NeedToSync = TRUE
 
-
 extern _X_EXPORT Bool
-XAAInit(
-    ScreenPtr pScreen,
-    XAAInfoRecPtr infoRec
-);
+ XAAInit(ScreenPtr pScreen, XAAInfoRecPtr infoRec);
 
 extern _X_EXPORT XAAInfoRecPtr XAACreateInfoRec(void);
 
 extern _X_EXPORT void
-XAADestroyInfoRec(
-    XAAInfoRecPtr infoRec
-);
+ XAADestroyInfoRec(XAAInfoRecPtr infoRec);
 
 typedef void (*DepthChangeFuncPtr) (ScrnInfoPtr pScrn, int depth);
 
 extern _X_EXPORT Bool
-XAAInitDualFramebufferOverlay(
-   ScreenPtr pScreen, 
-   DepthChangeFuncPtr callback
-);
+ XAAInitDualFramebufferOverlay(ScreenPtr pScreen, DepthChangeFuncPtr callback);
 
 #endif /* _XAA_H */
