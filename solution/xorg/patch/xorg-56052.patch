diff --git a/os/client.c b/os/client.c
index fbccf22..ef5e393 100644
--- a/os/client.c
+++ b/os/client.c
@@ -85,7 +85,8 @@
  *
  * @see GetClientPid
  */
-pid_t DetermineClientPid(struct _Client *client)
+pid_t
+DetermineClientPid(struct _Client * client)
 {
     LocalClientCredRec *lcc = NULL;
     pid_t pid = -1;
@@ -96,8 +97,7 @@ pid_t DetermineClientPid(struct _Client *client)
     if (client == serverClient)
         return getpid();
 
-    if (GetLocalClientCreds(client, &lcc) != -1)
-    {
+    if (GetLocalClientCreds(client, &lcc) != -1) {
         if (lcc->fieldsSet & LCC_PID_SET)
             pid = lcc->pid;
         FreeLocalClientCreds(lcc);
@@ -127,7 +127,8 @@ pid_t DetermineClientPid(struct _Client *client)
  *
  * @see GetClientCmdName/Args
  */
-void DetermineClientCmd(pid_t pid, const char **cmdname, const char **cmdargs)
+void
+DetermineClientCmd(pid_t pid, const char **cmdname, const char **cmdargs)
 {
     char path[PATH_MAX + 1];
     int totsize = 0;
@@ -148,13 +149,11 @@ void DetermineClientCmd(pid_t pid, const char **cmdname, const char **cmdargs)
     if (snprintf(path, sizeof(path), "/proc/%d/psinfo", pid) < 0)
         return;
     fd = open(path, O_RDONLY);
-    if (fd < 0)
-    {
+    if (fd < 0) {
         ErrorF ("Failed to open %s: %s\n", path, strerror(errno));
         return;
     }
-    else
-    {
+    else {
         psinfo_t psinfo = { 0 };
         char *sp;
 
@@ -194,7 +193,8 @@ void DetermineClientCmd(pid_t pid, const char **cmdname, const char **cmdargs)
 	kd = kvm_open(NULL, NULL, NULL, KVM_NO_FILES, errbuf);
 	if (kd == NULL)
 		return;
-	kp = kvm_getprocs(kd, KERN_PROC_PID, pid, sizeof(struct kinfo_proc), &n);
+        kp = kvm_getprocs(kd, KERN_PROC_PID, pid, sizeof(struct kinfo_proc),
+                          &n);
 	if (n != 1)
 		return;
 	argv = kvm_getargv(kd, kp, 0);
@@ -232,26 +232,24 @@ void DetermineClientCmd(pid_t pid, const char **cmdname, const char **cmdargs)
     path[totsize - 1] = '\0';
 
     /* Contruct the process name without arguments. */
-    if (cmdname)
-    {
+    if (cmdname) {
         *cmdname = strdup(path);
     }
 
     /* Construct the arguments for client process. */
-    if (cmdargs)
-    {
+    if (cmdargs) {
         int cmdsize = strlen(path) + 1;
         int argsize = totsize - cmdsize;
         char *args = NULL;
 
         if (argsize > 0)
             args = malloc(argsize);
-        if (args)
-        {
+        if (args) {
             int i = 0;
-            for (i = 0; i < (argsize - 1); ++i)
-            {
+
+            for (i = 0; i < (argsize - 1); ++i) {
                 const char c = path[cmdsize + i];
+
                 args[i] = (c == '\0') ? ' ' : c;
             }
             args[argsize - 1] = '\0';
@@ -266,7 +264,8 @@ void DetermineClientCmd(pid_t pid, const char **cmdname, const char **cmdargs)
  *
  * @param[in] client Recently connected client.
  */
-void ReserveClientIds(struct _Client *client)
+void
+ReserveClientIds(struct _Client *client)
 {
 #ifdef CLIENTIDS
     if (client == NullClient)
@@ -279,7 +278,8 @@ void ReserveClientIds(struct _Client *client)
 
     client->clientIds->pid = DetermineClientPid(client);
     if (client->clientIds->pid != -1)
-        DetermineClientCmd(client->clientIds->pid, &client->clientIds->cmdname, &client->clientIds->cmdargs);
+        DetermineClientCmd(client->clientIds->pid, &client->clientIds->cmdname,
+                           &client->clientIds->cmdargs);
 
     DebugF("client(%lx): Reserved pid(%d).\n",
            (unsigned long) client->clientAsMask, client->clientIds->pid);
@@ -296,7 +296,8 @@ void ReserveClientIds(struct _Client *client)
  *
  * @param[in] client Recently disconnected client.
  */
-void ReleaseClientIds(struct _Client *client)
+void
+ReleaseClientIds(struct _Client *client)
 {
 #ifdef CLIENTIDS
     if (client == NullClient)
@@ -331,7 +332,8 @@ void ReleaseClientIds(struct _Client *client)
  *
  * @see DetermineClientPid
  */
-pid_t GetClientPid(struct _Client *client)
+pid_t
+GetClientPid(struct _Client *client)
 {
     if (client == NullClient)
         return -1;
@@ -356,7 +358,8 @@ pid_t GetClientPid(struct _Client *client)
  *
  * @see DetermineClientCmd
  */
-const char *GetClientCmdName(struct _Client *client)
+const char *
+GetClientCmdName(struct _Client *client)
 {
     if (client == NullClient)
         return NULL;
@@ -381,7 +384,8 @@ const char *GetClientCmdName(struct _Client *client)
  *
  * @see DetermineClientCmd
  */
-const char *GetClientCmdArgs(struct _Client *client)
+const char *
+GetClientCmdArgs(struct _Client *client)
 {
     if (client == NullClient)
         return NULL;
