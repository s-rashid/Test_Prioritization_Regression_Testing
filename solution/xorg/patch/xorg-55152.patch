diff --git a/fb/fbwindow.c b/fb/fbwindow.c
index 7906f8d..d27ccd4 100644
--- a/fb/fbwindow.c
+++ b/fb/fbwindow.c
@@ -34,7 +34,8 @@ fbCreateWindow(WindowPtr pWin)
     dixSetPrivate(&pWin->devPrivates, fbGetWinPrivateKey(),
 		  fbGetScreenPixmap(pWin->drawable.pScreen));
     if (pWin->drawable.bitsPerPixel == 32)
-	pWin->drawable.bitsPerPixel = fbGetScreenPrivate(pWin->drawable.pScreen)->win32bpp;
+        pWin->drawable.bitsPerPixel =
+            fbGetScreenPrivate(pWin->drawable.pScreen)->win32bpp;
     return TRUE;
 }
 
@@ -70,10 +71,7 @@ fbCopyWindowProc (DrawablePtr	pSrcDrawable,
 		  int		nbox,
 		  int		dx,
 		  int		dy,
-		  Bool		reverse,
-		  Bool		upsidedown,
-		  Pixel		bitplane,
-		  void		*closure)
+                 Bool reverse, Bool upsidedown, Pixel bitplane, void *closure)
 {
     FbBits	*src;
     FbStride	srcStride;
@@ -87,25 +85,16 @@ fbCopyWindowProc (DrawablePtr	pSrcDrawable,
     fbGetDrawable (pSrcDrawable, src, srcStride, srcBpp, srcXoff, srcYoff);
     fbGetDrawable (pDstDrawable, dst, dstStride, dstBpp, dstXoff, dstYoff);
     
-    while (nbox--)
-    {
+    while (nbox--) {
 	fbBlt (src + (pbox->y1 + dy + srcYoff) * srcStride,
 	       srcStride,
 	       (pbox->x1 + dx + srcXoff) * srcBpp,
-    
 	       dst + (pbox->y1 + dstYoff) * dstStride,
 	       dstStride,
 	       (pbox->x1 + dstXoff) * dstBpp,
-    
 	       (pbox->x2 - pbox->x1) * dstBpp,
 	       (pbox->y2 - pbox->y1),
-    
-	       GXcopy,
-	       FB_ALLONES,
-	       dstBpp,
-    
-	       reverse,
-	       upsidedown);
+              GXcopy, FB_ALLONES, dstBpp, reverse, upsidedown);
 	pbox++;
     }
 
@@ -114,9 +103,7 @@ fbCopyWindowProc (DrawablePtr	pSrcDrawable,
 }
 
 void
-fbCopyWindow(WindowPtr	    pWin, 
-	     DDXPointRec    ptOldOrg, 
-	     RegionPtr	    prgnSrc)
+fbCopyWindow(WindowPtr pWin, DDXPointRec ptOldOrg, RegionPtr prgnSrc)
 {
     RegionRec	rgnDst;
     int		dx, dy;
@@ -134,13 +121,11 @@ fbCopyWindow(WindowPtr	    pWin,
 
 #ifdef COMPOSITE
     if (pPixmap->screen_x || pPixmap->screen_y)
-	RegionTranslate(&rgnDst,
-			  -pPixmap->screen_x, -pPixmap->screen_y);
+        RegionTranslate(&rgnDst, -pPixmap->screen_x, -pPixmap->screen_y);
 #endif
 
     miCopyRegion (pDrawable, pDrawable,
-		  0,
-		  &rgnDst, dx, dy, fbCopyWindowProc, 0, 0);
+                 0, &rgnDst, dx, dy, fbCopyWindowProc, 0, 0);
     
     RegionUninit(&rgnDst);
     fbValidateDrawable (&pWin->drawable);
@@ -151,29 +136,25 @@ fbFixupWindowPixmap(DrawablePtr pDrawable, PixmapPtr *ppPixmap)
 {
     PixmapPtr pPixmap = *ppPixmap;
 
-    if (pPixmap->drawable.bitsPerPixel != pDrawable->bitsPerPixel)
-    {
+    if (pPixmap->drawable.bitsPerPixel != pDrawable->bitsPerPixel) {
 	pPixmap = fb24_32ReformatTile (pPixmap, pDrawable->bitsPerPixel);
 	if (!pPixmap)
 	    return;
 	(*pDrawable->pScreen->DestroyPixmap) (*ppPixmap);
 	*ppPixmap = pPixmap;
     }
-    if (FbEvenTile (pPixmap->drawable.width *
-		    pPixmap->drawable.bitsPerPixel))
+    if (FbEvenTile(pPixmap->drawable.width * pPixmap->drawable.bitsPerPixel))
 	fbPadPixmap (pPixmap);
 }
 
 Bool
 fbChangeWindowAttributes(WindowPtr pWin, unsigned long mask)
 {
-    if (mask & CWBackPixmap)
-    {
+    if (mask & CWBackPixmap) {
 	if (pWin->backgroundState == BackgroundPixmap)
 	    fbFixupWindowPixmap(&pWin->drawable, &pWin->background.pixmap);
     }
-    if (mask & CWBorderPixmap)
-    {
+    if (mask & CWBorderPixmap) {
 	if (pWin->borderIsPixel == FALSE)
 	    fbFixupWindowPixmap(&pWin->drawable, &pWin->border.pixmap);
     }
@@ -182,9 +163,7 @@ fbChangeWindowAttributes(WindowPtr pWin, unsigned long mask)
 
 void
 fbFillRegionSolid (DrawablePtr	pDrawable,
-		   RegionPtr	pRegion,
-		   FbBits	and,
-		   FbBits	xor)
+                  RegionPtr pRegion, FbBits and, FbBits xor)
 {
     FbBits	*dst;
     FbStride	dstStride;
@@ -195,29 +174,26 @@ fbFillRegionSolid (DrawablePtr	pDrawable,
 
 #ifndef FB_ACCESS_WRAPPER
     int try_mmx = 0;
+
     if (!and)
         try_mmx = 1;
 #endif
 
     fbGetDrawable (pDrawable, dst, dstStride, dstBpp, dstXoff, dstYoff);
     
-    while (n--)
-    {
+    while (n--) {
 #ifndef FB_ACCESS_WRAPPER
 	if (!try_mmx || !pixman_fill ((uint32_t *)dst, dstStride, dstBpp,
 				      pbox->x1 + dstXoff, pbox->y1 + dstYoff,
 				      (pbox->x2 - pbox->x1),
-				      (pbox->y2 - pbox->y1),
-				      xor))
-	{
+                                     (pbox->y2 - pbox->y1), xor)) {
 #endif
 	    fbSolid (dst + (pbox->y1 + dstYoff) * dstStride,
 		     dstStride,
 		     (pbox->x1 + dstXoff) * dstBpp,
 		     dstBpp,
 		     (pbox->x2 - pbox->x1) * dstBpp,
-		     pbox->y2 - pbox->y1,
-		     and, xor);
+                    pbox->y2 - pbox->y1, and, xor);
 #ifndef FB_ACCESS_WRAPPER
 	}
 #endif
