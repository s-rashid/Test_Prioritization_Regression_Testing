diff --git a/fb/fbline.c b/fb/fbline.c
index e290bf8..80dc89d 100644
--- a/fb/fbline.c
+++ b/fb/fbline.c
@@ -27,11 +27,7 @@
 #include "fb.h"
 
 void
-fbZeroLine (DrawablePtr	pDrawable,
-	    GCPtr	pGC,
-	    int		mode,
-	    int		npt,
-	    DDXPointPtr	ppt)
+fbZeroLine(DrawablePtr pDrawable, GCPtr pGC, int mode, int npt, DDXPointPtr ppt)
 {
     int		    x1, y1, x2, y2;
     int		    x, y;
@@ -42,30 +38,24 @@ fbZeroLine (DrawablePtr	pDrawable,
     x1 = ppt->x;
     y1 = ppt->y;
     dashOffset = pGC->dashOffset;
-    while (--npt)
-    {
+    while (--npt) {
 	++ppt;
 	x2 = ppt->x;
 	y2 = ppt->y;
-	if (mode == CoordModePrevious)
-	{
+        if (mode == CoordModePrevious) {
 	    x2 += x1;
 	    y2 += y1;
 	}
 	fbSegment (pDrawable, pGC, x1 + x, y1 + y, 
 		   x2 + x, y2 + y, 
-		   npt == 1 && pGC->capStyle != CapNotLast,
-		   &dashOffset);
+                  npt == 1 && pGC->capStyle != CapNotLast, &dashOffset);
 	x1 = x2;
 	y1 = y2;
     }
 }
 
 void
-fbZeroSegment (DrawablePtr  pDrawable,
-	       GCPtr	    pGC,
-	       int	    nseg,
-	       xSegment	    *pSegs)
+fbZeroSegment(DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment * pSegs)
 {
     int	    dashOffset;
     int	    x, y;
@@ -73,29 +63,24 @@ fbZeroSegment (DrawablePtr  pDrawable,
     
     x = pDrawable->x;
     y = pDrawable->y;
-    while (nseg--)
-    {
+    while (nseg--) {
 	dashOffset = pGC->dashOffset;
 	fbSegment (pDrawable, pGC, 
 		   pSegs->x1 + x, pSegs->y1 + y,
-		   pSegs->x2 + x, pSegs->y2 + y,
-		   drawLast,
-		   &dashOffset);
+                  pSegs->x2 + x, pSegs->y2 + y, drawLast, &dashOffset);
 	pSegs++;
     }
 }
 
 void
-fbFixCoordModePrevious (int	    npt,
-			DDXPointPtr ppt)
+fbFixCoordModePrevious(int npt, DDXPointPtr ppt)
 {
     int	    x, y;
 
     x = ppt->x;
     y = ppt->y;
     npt--;
-    while (npt--)
-    {
+    while (npt--) {
 	ppt++;
 	x = (ppt->x += x);
 	y = (ppt->y += y);
@@ -103,31 +88,32 @@ fbFixCoordModePrevious (int	    npt,
 }
 
 void
-fbPolyLine (DrawablePtr	pDrawable,
-	    GCPtr	pGC,
-	    int		mode,
-	    int		npt,
-	    DDXPointPtr	ppt)
+fbPolyLine(DrawablePtr pDrawable, GCPtr pGC, int mode, int npt, DDXPointPtr ppt)
 {
     void	(*line) (DrawablePtr, GCPtr, int mode, int npt, DDXPointPtr ppt);
     
-    if (pGC->lineWidth == 0)
-    {
+    if (pGC->lineWidth == 0) {
 	line = fbZeroLine;
 	if (pGC->fillStyle == FillSolid &&
 	    pGC->lineStyle == LineSolid &&
-	    RegionNumRects (fbGetCompositeClip(pGC)) == 1)
-	{
+            RegionNumRects(fbGetCompositeClip(pGC)) == 1) {
 	    switch (pDrawable->bitsPerPixel) {
-	    case 8:  line = fbPolyline8; break;
-	    case 16: line = fbPolyline16; break;
-	    case 24: line = fbPolyline24; break;
-	    case 32: line = fbPolyline32; break;
-	    }
-	}
-    }
-    else
-    {
+            case 8:
+                line = fbPolyline8;
+                break;
+            case 16:
+                line = fbPolyline16;
+                break;
+            case 24:
+                line = fbPolyline24;
+                break;
+            case 32:
+                line = fbPolyline32;
+                break;
+            }
+        }
+    }
+    else {
 	if (pGC->lineStyle != LineSolid)
 	    line = miWideDash;
 	else
@@ -137,30 +123,32 @@ fbPolyLine (DrawablePtr	pDrawable,
 }
 
 void
-fbPolySegment (DrawablePtr  pDrawable,
-	       GCPtr	    pGC,
-	       int	    nseg,
-	       xSegment	    *pseg)
+fbPolySegment(DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment * pseg)
 {
     void    (*seg) (DrawablePtr pDrawable, GCPtr pGC, int nseg, xSegment *pseg);
 
-    if (pGC->lineWidth == 0)
-    {
+    if (pGC->lineWidth == 0) {
 	seg = fbZeroSegment;
 	if (pGC->fillStyle == FillSolid &&
 	    pGC->lineStyle == LineSolid &&
-	    RegionNumRects (fbGetCompositeClip(pGC)) == 1)
-	{
+            RegionNumRects(fbGetCompositeClip(pGC)) == 1) {
 	    switch (pDrawable->bitsPerPixel) {
-	    case 8:  seg = fbPolySegment8; break;
-	    case 16: seg = fbPolySegment16; break;
-	    case 24: seg = fbPolySegment24; break;
-	    case 32: seg = fbPolySegment32; break;
-	    }
-	}
-    }
-    else
-    {
+            case 8:
+                seg = fbPolySegment8;
+                break;
+            case 16:
+                seg = fbPolySegment16;
+                break;
+            case 24:
+                seg = fbPolySegment24;
+                break;
+            case 32:
+                seg = fbPolySegment32;
+                break;
+            }
+        }
+    }
+    else {
 	seg = miPolySegment;
     }
     (*seg) (pDrawable, pGC, nseg, pseg);
