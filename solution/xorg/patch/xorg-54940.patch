diff --git a/Xext/xvdisp.c b/Xext/xvdisp.c
index 0795a14..8abd51c 100644
--- a/Xext/xvdisp.c
+++ b/Xext/xvdisp.c
@@ -55,10 +55,8 @@ unsigned long XvXRTPort;
 #endif
 
 static int
-SWriteQueryExtensionReply(
-   ClientPtr client,
-   xvQueryExtensionReply *rep
-){
+SWriteQueryExtensionReply(ClientPtr client, xvQueryExtensionReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
   swaps(&rep->version);
@@ -70,10 +68,8 @@ SWriteQueryExtensionReply(
 }
 
 static int
-SWriteQueryAdaptorsReply(
-   ClientPtr client,
-   xvQueryAdaptorsReply *rep
-){
+SWriteQueryAdaptorsReply(ClientPtr client, xvQueryAdaptorsReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
   swaps(&rep->num_adaptors);
@@ -84,10 +80,8 @@ SWriteQueryAdaptorsReply(
 }
 
 static int
-SWriteQueryEncodingsReply(
-   ClientPtr client,
-   xvQueryEncodingsReply *rep
-){
+SWriteQueryEncodingsReply(ClientPtr client, xvQueryEncodingsReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
   swaps(&rep->num_encodings);
@@ -98,10 +92,8 @@ SWriteQueryEncodingsReply(
 }
 
 static int
-SWriteAdaptorInfo(
-   ClientPtr client,
-   xvAdaptorInfo *pAdaptor
-){
+SWriteAdaptorInfo(ClientPtr client, xvAdaptorInfo * pAdaptor)
+{
   swapl(&pAdaptor->base_id);
   swaps(&pAdaptor->name_size);
   swaps(&pAdaptor->num_ports);
@@ -113,10 +105,8 @@ SWriteAdaptorInfo(
 }
 
 static int
-SWriteEncodingInfo(
-   ClientPtr client,
-   xvEncodingInfo *pEncoding
-){
+SWriteEncodingInfo(ClientPtr client, xvEncodingInfo * pEncoding)
+{
   
   swapl(&pEncoding->encoding);
   swaps(&pEncoding->name_size);
@@ -130,10 +120,8 @@ SWriteEncodingInfo(
 }
 
 static int
-SWriteFormat(
-   ClientPtr client,
-   xvFormat *pFormat
-){
+SWriteFormat(ClientPtr client, xvFormat * pFormat)
+{
   swapl(&pFormat->visual);
   (void)WriteToClient(client, sz_xvFormat, (char *)pFormat);
 
@@ -141,10 +129,8 @@ SWriteFormat(
 }
 
 static int
-SWriteAttributeInfo(
-   ClientPtr client,
-   xvAttributeInfo *pAtt
-){
+SWriteAttributeInfo(ClientPtr client, xvAttributeInfo * pAtt)
+{
   swapl(&pAtt->flags);
   swapl(&pAtt->size);
   swapl(&pAtt->min);
@@ -155,10 +141,8 @@ SWriteAttributeInfo(
 }
 
 static int
-SWriteImageFormatInfo(
-   ClientPtr client,
-   xvImageFormatInfo *pImage
-){
+SWriteImageFormatInfo(ClientPtr client, xvImageFormatInfo * pImage)
+{
   swapl(&pImage->id);
   swapl(&pImage->red_mask);
   swapl(&pImage->green_mask);
@@ -179,10 +163,8 @@ SWriteImageFormatInfo(
 }
 
 static int
-SWriteGrabPortReply(
-   ClientPtr client,
-   xvGrabPortReply *rep
-){
+SWriteGrabPortReply(ClientPtr client, xvGrabPortReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
 
@@ -192,10 +174,8 @@ SWriteGrabPortReply(
 }
 
 static int
-SWriteGetPortAttributeReply(
-   ClientPtr client,
-   xvGetPortAttributeReply *rep
-){
+SWriteGetPortAttributeReply(ClientPtr client, xvGetPortAttributeReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
   swapl(&rep->value);
@@ -206,10 +186,8 @@ SWriteGetPortAttributeReply(
 }
 
 static int
-SWriteQueryBestSizeReply(
-   ClientPtr client,
-   xvQueryBestSizeReply *rep
-){
+SWriteQueryBestSizeReply(ClientPtr client, xvQueryBestSizeReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
   swaps(&rep->actual_width);
@@ -221,10 +199,9 @@ SWriteQueryBestSizeReply(
 }
 
 static int
-SWriteQueryPortAttributesReply(
-   ClientPtr client,
-   xvQueryPortAttributesReply *rep
-){
+SWriteQueryPortAttributesReply(ClientPtr client,
+                               xvQueryPortAttributesReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
   swapl(&rep->num_attributes);
@@ -236,10 +213,9 @@ SWriteQueryPortAttributesReply(
 }
 
 static int
-SWriteQueryImageAttributesReply(
-   ClientPtr client,
-   xvQueryImageAttributesReply *rep
-){
+SWriteQueryImageAttributesReply(ClientPtr client,
+                                xvQueryImageAttributesReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
   swapl(&rep->num_planes);
@@ -253,10 +229,8 @@ SWriteQueryImageAttributesReply(
 }
 
 static int
-SWriteListImageFormatsReply(
-   ClientPtr client,
-   xvListImageFormatsReply *rep
-){
+SWriteListImageFormatsReply(ClientPtr client, xvListImageFormatsReply * rep)
+{
   swaps(&rep->sequenceNumber);
   swapl(&rep->length);
   swapl(&rep->num_formats);
@@ -329,6 +303,7 @@ static int
 ProcXvQueryExtension(ClientPtr client)
 {
   xvQueryExtensionReply rep;
+
   /* REQUEST(xvQueryExtensionReq); */
   REQUEST_SIZE_MATCH(xvQueryExtensionReq);
 
@@ -367,8 +342,7 @@ ProcXvQueryAdaptors(ClientPtr client)
   pScreen = pWin->drawable.pScreen;
   pxvs = (XvScreenPtr)dixLookupPrivate(&pScreen->devPrivates,
 				       XvGetScreenKey());
-  if (!pxvs)
-    {
+    if (!pxvs) {
       rep.type = X_Reply;
       rep.sequenceNumber = client->sequence;
       rep.num_adaptors = 0;
@@ -393,8 +367,7 @@ ProcXvQueryAdaptors(ClientPtr client)
 
   na = pxvs->nAdaptors;
   pa = pxvs->pAdaptors;
-  while (na--)
-    {
+    while (na--) {
       totalSize += pad_to_int32(strlen(pa->name));
       totalSize += pa->nFormats * sz_xvFormat;
       pa++;
@@ -406,8 +379,7 @@ ProcXvQueryAdaptors(ClientPtr client)
 
   na = pxvs->nAdaptors;
   pa = pxvs->pAdaptors;
-  while (na--)
-    {
+    while (na--) {
 
       ainfo.base_id = pa->base_id;
       ainfo.num_ports = pa->nPorts;
@@ -421,8 +393,7 @@ ProcXvQueryAdaptors(ClientPtr client)
 
       nf = pa->nFormats;
       pf = pa->pFormats;
-      while (nf--)
-	{
+        while (nf--) {
 	  format.depth = pf->depth;
 	  format.visual = pf->visual;
 	  _WriteFormat(client, &format);
@@ -453,8 +424,7 @@ ProcXvQueryEncodings(ClientPtr client)
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
@@ -468,8 +438,7 @@ ProcXvQueryEncodings(ClientPtr client)
   ne = pPort->pAdaptor->nEncodings;
   pe = pPort->pAdaptor->pEncodings;
   totalSize = ne * sz_xvEncodingInfo;
-  while (ne--)
-    {
+    while (ne--) {
       totalSize += pad_to_int32(strlen(pe->name));
       pe++;
     }
@@ -480,8 +449,7 @@ ProcXvQueryEncodings(ClientPtr client)
 
   ne = pPort->pAdaptor->nEncodings;
   pe = pPort->pAdaptor->pEncodings;
-  while (ne--) 
-    {
+    while (ne--) {
       einfo.encoding = pe->id;
       einfo.name_size = nameSize = strlen(pe->name);
       einfo.width = pe->width;
@@ -510,22 +478,19 @@ ProcXvPutVideo(ClientPtr client)
   VALIDATE_DRAWABLE_AND_GC(stuff->drawable, pDraw, DixWriteAccess);
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
   if (!(pPort->pAdaptor->type & XvInputMask) ||
-	!(pPort->pAdaptor->type & XvVideoMask))
-    {
+        !(pPort->pAdaptor->type & XvVideoMask)) {
       client->errorValue = stuff->port;
       return BadMatch;
     }
 
   status = XvdiMatchPort(pPort, pDraw);
-  if (status != Success)
-    {
+    if (status != Success) {
       return status;
     }
 
@@ -548,22 +513,19 @@ ProcXvPutStill(ClientPtr client)
   VALIDATE_DRAWABLE_AND_GC(stuff->drawable, pDraw, DixWriteAccess);
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
   if (!(pPort->pAdaptor->type & XvInputMask) ||
-	!(pPort->pAdaptor->type & XvStillMask))
-    {
+        !(pPort->pAdaptor->type & XvStillMask)) {
       client->errorValue = stuff->port;
       return BadMatch;
     }
 
   status = XvdiMatchPort(pPort, pDraw);
-  if (status != Success)
-    {
+    if (status != Success) {
       return status;
     }
 
@@ -586,22 +548,19 @@ ProcXvGetVideo(ClientPtr client)
   VALIDATE_DRAWABLE_AND_GC(stuff->drawable, pDraw, DixReadAccess);
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
   if (!(pPort->pAdaptor->type & XvOutputMask) ||
-	!(pPort->pAdaptor->type & XvVideoMask))
-    {
+        !(pPort->pAdaptor->type & XvVideoMask)) {
       client->errorValue = stuff->port;
       return BadMatch;
     }
 
   status = XvdiMatchPort(pPort, pDraw);
-  if (status != Success)
-    {
+    if (status != Success) {
       return status;
     }
 
@@ -624,22 +583,19 @@ ProcXvGetStill(ClientPtr client)
   VALIDATE_DRAWABLE_AND_GC(stuff->drawable, pDraw, DixReadAccess);
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
   if (!(pPort->pAdaptor->type & XvOutputMask) ||
-	!(pPort->pAdaptor->type & XvStillMask))
-    {
+        !(pPort->pAdaptor->type & XvStillMask)) {
       client->errorValue = stuff->port;
       return BadMatch;
     }
 
   status = XvdiMatchPort(pPort, pDraw);
-  if (status != Success)
-    {
+    if (status != Success) {
       return status;
     }
 
@@ -653,10 +609,12 @@ ProcXvSelectVideoNotify(ClientPtr client)
 {
   DrawablePtr pDraw;
   int rc;
+
   REQUEST(xvSelectVideoNotifyReq);
   REQUEST_SIZE_MATCH(xvSelectVideoNotifyReq);
 
-  rc = dixLookupDrawable(&pDraw, stuff->drawable, client, 0, DixReceiveAccess);
+    rc = dixLookupDrawable(&pDraw, stuff->drawable, client, 0,
+                           DixReceiveAccess);
   if (rc != Success)
     return rc;
 
@@ -668,13 +626,13 @@ ProcXvSelectPortNotify(ClientPtr client)
 {
   int status;
   XvPortPtr pPort;
+
   REQUEST(xvSelectPortNotifyReq);
   REQUEST_SIZE_MATCH(xvSelectPortNotifyReq);
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
@@ -688,21 +646,20 @@ ProcXvGrabPort(ClientPtr client)
   int result, status;
   XvPortPtr pPort;
   xvGrabPortReply rep;
+
   REQUEST(xvGrabPortReq);
   REQUEST_SIZE_MATCH(xvGrabPortReq);
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
   status = XvdiGrabPort(client, pPort, stuff->time, &result);
 
-  if (status != Success)
-    {
+    if (status != Success) {
       return status;
     }
 
@@ -721,13 +678,13 @@ ProcXvUngrabPort(ClientPtr client)
 {
   int status;
   XvPortPtr pPort;
+
   REQUEST(xvGrabPortReq);
   REQUEST_SIZE_MATCH(xvGrabPortReq);
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
@@ -741,13 +698,13 @@ ProcXvStopVideo(ClientPtr client)
   int status, rc;
   DrawablePtr pDraw;
   XvPortPtr pPort;
+
   REQUEST(xvStopVideoReq);
   REQUEST_SIZE_MATCH(xvStopVideoReq);
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
@@ -764,24 +721,24 @@ ProcXvSetPortAttribute(ClientPtr client)
 {
   int status;
   XvPortPtr pPort;
+
   REQUEST(xvSetPortAttributeReq);
   REQUEST_SIZE_MATCH(xvSetPortAttributeReq);
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixSetAttrAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
-  if (!ValidAtom(stuff->attribute))
-    {
+    if (!ValidAtom(stuff->attribute)) {
       client->errorValue = stuff->attribute;
       return BadAtom;
     }
 
-  status = XvdiSetPortAttribute(client, pPort, stuff->attribute, stuff->value);
+    status =
+        XvdiSetPortAttribute(client, pPort, stuff->attribute, stuff->value);
 
   if (status == BadMatch) 
       client->errorValue = stuff->attribute;
@@ -798,26 +755,24 @@ ProcXvGetPortAttribute(ClientPtr client)
   int status;
   XvPortPtr pPort;
   xvGetPortAttributeReply rep;
+
   REQUEST(xvGetPortAttributeReq);
   REQUEST_SIZE_MATCH(xvGetPortAttributeReq);
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixGetAttrAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
-  if (!ValidAtom(stuff->attribute))
-    {
+    if (!ValidAtom(stuff->attribute)) {
       client->errorValue = stuff->attribute;
       return BadAtom;
     }
 
   status = XvdiGetPortAttribute(client, pPort, stuff->attribute, &value);
-  if (status != Success)
-    {
+    if (status != Success) {
       client->errorValue = stuff->attribute;
       return status;
     }
@@ -839,13 +794,13 @@ ProcXvQueryBestSize(ClientPtr client)
   unsigned int actual_width, actual_height;
   XvPortPtr pPort;
   xvQueryBestSizeReply rep;
+
   REQUEST(xvQueryBestSizeReq);
   REQUEST_SIZE_MATCH(xvQueryBestSizeReq);
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
@@ -867,7 +822,6 @@ ProcXvQueryBestSize(ClientPtr client)
   return Success;
 }
 
-
 static int
 ProcXvQueryPortAttributes(ClientPtr client)
 {
@@ -876,13 +830,13 @@ ProcXvQueryPortAttributes(ClientPtr client)
   XvAttributePtr pAtt;
   xvQueryPortAttributesReply rep;
   xvAttributeInfo Info;
+
   REQUEST(xvQueryPortAttributesReq);
   REQUEST_SIZE_MATCH(xvQueryPortAttributesReq);
 
   VALIDATE_XV_PORT(stuff->port, pPort, DixGetAttrAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
@@ -893,8 +847,7 @@ ProcXvQueryPortAttributes(ClientPtr client)
   rep.text_size = 0;
 
   for(i = 0, pAtt = pPort->pAdaptor->pAttributes; 
-      i < pPort->pAdaptor->nAttributes; i++, pAtt++) 
-  {    
+         i < pPort->pAdaptor->nAttributes; i++, pAtt++) {
       rep.text_size += pad_to_int32(strlen(pAtt->name) + 1);
   }
 
@@ -905,8 +858,7 @@ ProcXvQueryPortAttributes(ClientPtr client)
   _WriteQueryPortAttributesReply(client, &rep);
 
   for(i = 0, pAtt = pPort->pAdaptor->pAttributes; 
-      i < pPort->pAdaptor->nAttributes; i++, pAtt++) 
-  {
+         i < pPort->pAdaptor->nAttributes; i++, pAtt++) {
       size = strlen(pAtt->name) + 1;  /* pass the NULL */
       Info.flags = pAtt->flags;
       Info.min = pAtt->min_value;
@@ -937,22 +889,19 @@ ProcXvPutImage(ClientPtr client)
   VALIDATE_DRAWABLE_AND_GC(stuff->drawable, pDraw, DixWriteAccess);
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
   if (!(pPort->pAdaptor->type & XvImageMask) ||
-	!(pPort->pAdaptor->type & XvInputMask))
-    {
+        !(pPort->pAdaptor->type & XvInputMask)) {
       client->errorValue = stuff->port;
       return BadMatch;
     }
 
   status = XvdiMatchPort(pPort, pDraw);
-  if (status != Success)
-    {
+    if (status != Success) {
       return status;
     }
 
@@ -969,7 +918,8 @@ ProcXvPutImage(ClientPtr client)
   width = stuff->width;
   height = stuff->height;
   size = (*pPort->pAdaptor->ddQueryImageAttributes)(client, 
-			pPort, pImage, &width, &height, NULL, NULL);
+                                                       pPort, pImage, &width,
+                                                       &height, NULL, NULL);
   size += sizeof(xvPutImageReq);
   size = bytes_to_int32(size);
   
@@ -1017,22 +967,19 @@ ProcXvShmPutImage(ClientPtr client)
   VALIDATE_DRAWABLE_AND_GC(stuff->drawable, pDraw, DixWriteAccess);
   VALIDATE_XV_PORT(stuff->port, pPort, DixReadAccess);
 
-  if ((status = _AllocatePort(stuff->port, pPort)) != Success)
-    {
+    if ((status = _AllocatePort(stuff->port, pPort)) != Success) {
       client->errorValue = stuff->port;
       return status;
     }
 
   if (!(pPort->pAdaptor->type & XvImageMask) ||
-	!(pPort->pAdaptor->type & XvInputMask))
-    {
+        !(pPort->pAdaptor->type & XvInputMask)) {
       client->errorValue = stuff->port;
       return BadMatch;
     }
 
   status = XvdiMatchPort(pPort, pDraw);
-  if (status != Success)
-    {
+    if (status != Success) {
       return status;
     }
 
@@ -1054,7 +1001,9 @@ ProcXvShmPutImage(ClientPtr client)
   width = stuff->width;
   height = stuff->height;
   size_needed = (*pPort->pAdaptor->ddQueryImageAttributes)(client, 
-			pPort, pImage, &width, &height, NULL, NULL);
+                                                              pPort, pImage,
+                                                              &width, &height,
+                                                              NULL, NULL);
   if((size_needed + stuff->offset) > shmdesc->size)
       return BadAccess;
 
@@ -1062,8 +1011,8 @@ ProcXvShmPutImage(ClientPtr client)
      return BadValue;
      
   status = XvdiPutImage(client, pDraw, pPort, pGC, stuff->src_x, stuff->src_y,
-			stuff->src_w, stuff->src_h, stuff->drw_x, stuff->drw_y,
-			stuff->drw_w, stuff->drw_h, pImage,
+                          stuff->src_w, stuff->src_h, stuff->drw_x,
+                          stuff->drw_y, stuff->drw_w, stuff->drw_h, pImage,
 			(unsigned char *)shmdesc->addr + stuff->offset, 
 			stuff->send_event, stuff->width, stuff->height);
 
@@ -1105,6 +1054,7 @@ ProcXvQueryImageAttributes(ClientPtr client)
   int *offsets;
   int *pitches;
   int planeLength;
+
   REQUEST(xvQueryImageAttributesReq);
 
   REQUEST_SIZE_MATCH(xvQueryImageAttributesReq);
@@ -1136,7 +1086,8 @@ ProcXvQueryImageAttributes(ClientPtr client)
   height = stuff->height;
 
   size = (*pPort->pAdaptor->ddQueryImageAttributes)(client, pPort, pImage,
-					&width, &height, offsets, pitches);
+                                                       &width, &height, offsets,
+                                                       pitches);
 
   rep.type = X_Reply;
   rep.sequenceNumber = client->sequence;
@@ -1164,6 +1115,7 @@ ProcXvListImageFormats(ClientPtr client)
   int i;
   xvListImageFormatsReply rep;
   xvImageFormatInfo info;
+
   REQUEST(xvListImageFormatsReq);
 
   REQUEST_SIZE_MATCH(xvListImageFormatsReq);
@@ -1173,7 +1125,8 @@ ProcXvListImageFormats(ClientPtr client)
   rep.type = X_Reply;
   rep.sequenceNumber = client->sequence;
   rep.num_formats = pPort->pAdaptor->nImages;
-  rep.length = bytes_to_int32(pPort->pAdaptor->nImages * sz_xvImageFormatInfo);
+    rep.length =
+        bytes_to_int32(pPort->pAdaptor->nImages * sz_xvImageFormatInfo);
 
   _WriteListImageFormatsReply(client, &rep);
 
@@ -1226,10 +1179,7 @@ static int (*XvProcVector[xvNumRequests])(ClientPtr) = {
     ProcXvGetPortAttribute,
     ProcXvQueryPortAttributes,
     ProcXvListImageFormats,
-    ProcXvQueryImageAttributes,
-    ProcXvPutImage,
-    ProcXvShmPutImage,
-};
+        ProcXvQueryImageAttributes, ProcXvPutImage, ProcXvShmPutImage,};
 
 int
 ProcXvDispatch(ClientPtr client)
@@ -1530,10 +1480,7 @@ static int (*SXvProcVector[xvNumRequests])(ClientPtr) = {
     SProcXvGetPortAttribute,
     SProcXvQueryPortAttributes,
     SProcXvListImageFormats,
-    SProcXvQueryImageAttributes,
-    SProcXvPutImage,
-    SProcXvShmPutImage,
-};
+        SProcXvQueryImageAttributes, SProcXvPutImage, SProcXvShmPutImage,};
 
 int
 SProcXvDispatch(ClientPtr client)
@@ -1556,6 +1503,7 @@ XineramaXvStopVideo(ClientPtr client)
 {
    int result, i;
    PanoramiXRes *draw, *port;
+
    REQUEST(xvStopVideoReq);
    REQUEST_SIZE_MATCH(xvStopVideoReq);
 
@@ -1811,6 +1759,7 @@ static Bool
 hasOverlay(XvAdaptorPtr pAdapt)
 {
     int i;
+
     for(i = 0; i < pAdapt->nAttributes; i++)
 	if(!strcmp(pAdapt->pAttributes[i].name, "XV_COLORKEY"))
 	    return TRUE;
@@ -1821,7 +1770,8 @@ static XvAdaptorPtr
 matchAdaptor(ScreenPtr pScreen, XvAdaptorPtr refAdapt, Bool isOverlay)
 {
     int i;
-    XvScreenPtr xvsp = dixLookupPrivate(&pScreen->devPrivates, XvGetScreenKey());
+    XvScreenPtr xvsp =
+        dixLookupPrivate(&pScreen->devPrivates, XvGetScreenKey());
     /* Do not try to go on if xv is not supported on this screen */
     if(xvsp == NULL)
 	return NULL;
@@ -1829,6 +1779,7 @@ matchAdaptor(ScreenPtr pScreen, XvAdaptorPtr refAdapt, Bool isOverlay)
     /* if the adaptor has the same name it's a perfect match */
     for(i = 0; i < xvsp->nAdaptors; i++) {
 	XvAdaptorPtr pAdapt = xvsp->pAdaptors + i;
+
 	if(!strcmp(refAdapt->name, pAdapt->name))
 	    return pAdapt;
     }
@@ -1840,6 +1791,7 @@ matchAdaptor(ScreenPtr pScreen, XvAdaptorPtr refAdapt, Bool isOverlay)
     /* prefer overlay/overlay non-overlay/non-overlay pairing */
     for(i = 0; i < xvsp->nAdaptors; i++) {
 	XvAdaptorPtr pAdapt = xvsp->pAdaptors + i;
+
 	if(isImageAdaptor(pAdapt) && isOverlay == hasOverlay(pAdapt))
 	    return pAdapt;
     }
@@ -1847,36 +1799,44 @@ matchAdaptor(ScreenPtr pScreen, XvAdaptorPtr refAdapt, Bool isOverlay)
     /* but we'll take any XvImage pairing if we can get it */
     for(i = 0; i < xvsp->nAdaptors; i++) {
 	XvAdaptorPtr pAdapt = xvsp->pAdaptors + i;
+
 	if(isImageAdaptor(pAdapt))
 	    return pAdapt;
     }
     return NULL;
 }
 
-void XineramifyXv(void)
+void
+XineramifyXv(void)
 {
-   XvScreenPtr xvsp0 = dixLookupPrivate(&screenInfo.screens[0]->devPrivates, XvGetScreenKey());
+    XvScreenPtr xvsp0 =
+        dixLookupPrivate(&screenInfo.screens[0]->devPrivates, XvGetScreenKey());
    XvAdaptorPtr MatchingAdaptors[MAXSCREENS];
    int i, j, k;
 
    XvXRTPort = CreateNewResourceType(XineramaDeleteResource, "XvXRTPort");
 
-   if (!xvsp0 || !XvXRTPort) return;
+    if (!xvsp0 || !XvXRTPort)
+        return;
    SetResourceTypeErrorValue(XvXRTPort, _XvBadPort);
 
    for(i = 0; i < xvsp0->nAdaptors; i++) {
       Bool isOverlay;
       XvAdaptorPtr refAdapt = xvsp0->pAdaptors + i;
-      if(!(refAdapt->type & XvInputMask)) continue;
+
+        if (!(refAdapt->type & XvInputMask))
+            continue;
 
       MatchingAdaptors[0] = refAdapt;
       isOverlay = hasOverlay(refAdapt);
       FOR_NSCREENS_FORWARD_SKIP(j)
-	 MatchingAdaptors[j] = matchAdaptor(screenInfo.screens[j], refAdapt, isOverlay);
+            MatchingAdaptors[j] =
+            matchAdaptor(screenInfo.screens[j], refAdapt, isOverlay);
 
       /* now create a resource for each port */
       for(j = 0; j < refAdapt->nPorts; j++) {
 	 PanoramiXRes *port = malloc(sizeof(PanoramiXRes));
+
 	 if(!port)
 	    break;
 
