diff --git a/GL/glx/glxcmds.c b/GL/glx/glxcmds.c
index ddbf063..dd1d949 100644
--- a/GL/glx/glxcmds.c
+++ b/GL/glx/glxcmds.c
@@ -89,8 +89,16 @@ static int __glxHyperpipeConfigSGIX(__GLXclientState *cl, GLbyte *pc);
 
 /************************************************************************/
 
+void
+__glXContextDestroy(__GLXcontext *context)
+{
+    __glXFlushContextCache();
+}
+
+
 static void __glXdirectContextDestroy(__GLXcontext *context)
 {
+    __glXContextDestroy(context);
     __glXFree(context);
 }
 
@@ -632,6 +640,7 @@ int DoMakeCurrent( __GLXclientState *cl,
 	if (!(*prevglxc->loseCurrent)(prevglxc)) {
 	    return __glXBadContext;
 	}
+	__glXFlushContextCache();
 	__glXDeassociateContext(prevglxc);
     }
 	
@@ -2208,6 +2217,20 @@ int __glXVendorPrivateWithReply(__GLXclientState *cl, GLbyte *pc)
 	return __glXCreateGLXPixmapWithConfigSGIX(cl, pc);
       case X_GLXvop_GetDrawableAttributesSGIX:
 	return __glXGetDrawableAttributesSGIX(cl, pc);
+      case X_GLvop_IsRenderbufferEXT:
+	return __glXDisp_IsRenderbufferEXT(cl, pc);
+      case X_GLvop_GenRenderbuffersEXT:
+	return __glXDisp_GenRenderbuffersEXT(cl, pc);
+      case X_GLvop_GetRenderbufferParameterivEXT:
+	return __glXDisp_GetRenderbufferParameterivEXT(cl, pc);
+      case X_GLvop_IsFramebufferEXT:
+	return __glXDisp_IsFramebufferEXT(cl, pc);
+      case X_GLvop_GenFramebuffersEXT:
+	return __glXDisp_GenFramebuffersEXT(cl, pc);
+      case X_GLvop_CheckFramebufferStatusEXT:
+	return __glXDisp_CheckFramebufferStatusEXT(cl, pc);
+      case X_GLvop_GetFramebufferAttachmentParameterivEXT:
+	return __glXDisp_GetFramebufferAttachmentParameterivEXT(cl, pc);
       default:
 	break;
     }
