diff --git a/dix/atom.c b/dix/atom.c
index 83ff71a..6f85968 100644
--- a/dix/atom.c
+++ b/dix/atom.c
@@ -22,7 +22,6 @@ Except as contained in this notice, the name of The Open Group shall not be
 used in advertising or otherwise to promote the sale, use or other dealings
 in this Software without prior written authorization from The Open Group.
 
-
 Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts.
 
                         All Rights Reserved
@@ -45,7 +44,6 @@ SOFTWARE.
 
 ******************************************************************/
 
-
 #ifdef HAVE_DIX_CONFIG_H
 #include <dix-config.h>
 #endif
@@ -83,19 +81,16 @@ MakeAtom(const char *string, unsigned len, Bool makeit)
     unsigned int fp = 0;
 
     np = &atomRoot;
-    for (i = 0; i < (len+1)/2; i++)
-    {
+    for (i = 0; i < (len + 1) / 2; i++) {
 	fp = fp * 27 + string[i];
 	fp = fp * 27 + string[len - 1 - i];
     }
-    while (*np != NULL)
-    {
+    while (*np != NULL) {
 	if (fp < (*np)->fingerPrint)
 	    np = &((*np)->left);
 	else if (fp > (*np)->fingerPrint)
 	    np = &((*np)->right);
-	else
-	{			       /* now start testing the strings */
+        else {                  /* now start testing the strings */
 	    comp = strncmp(string, (*np)->string, (int)len);
 	    if ((comp < 0) || ((comp == 0) && (len < strlen((*np)->string))))
 		np = &((*np)->left);
@@ -105,19 +100,16 @@ MakeAtom(const char *string, unsigned len, Bool makeit)
 		return(*np)->a;
 	    }
     }
-    if (makeit)
-    {
+    if (makeit) {
 	NodePtr nd;
 
 	nd = malloc(sizeof(NodeRec));
 	if (!nd)
 	    return BAD_RESOURCE;
-	if (lastAtom < XA_LAST_PREDEFINED)
-	{
+        if (lastAtom < XA_LAST_PREDEFINED) {
 	    nd->string = string;
 	}
-	else
-	{
+        else {
 	    nd->string = strndup(string, len);
 	    if (!nd->string) {
 		free(nd);
@@ -160,8 +152,11 @@ const char *
 NameForAtom(Atom atom)
 {
     NodePtr node;
-    if (atom > lastAtom) return 0;
-    if ((node = nodeTable[atom]) == NULL) return 0;
+
+    if (atom > lastAtom)
+        return 0;
+    if ((node = nodeTable[atom]) == NULL)
+        return 0;
     return node->string;
 }
 
