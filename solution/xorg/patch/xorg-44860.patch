diff --git a/hw/xfree86/os-support/linux/int10/linux.c b/hw/xfree86/os-support/linux/int10/linux.c
index 8274bbb..0cf3507 100644
--- a/hw/xfree86/os-support/linux/int10/linux.c
+++ b/hw/xfree86/os-support/linux/int10/linux.c
@@ -115,9 +115,7 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
     if ((!vidMem) || (!sysMem)) {
 	if ((fd = open(DEV_MEM, O_RDWR, 0)) >= 0) {
 	    if (!sysMem) {
-#ifdef DEBUG
-		ErrorF("Mapping sys bios area\n");
-#endif
+		DebugF("Mapping sys bios area\n");
 		if ((sysMem = mmap((void *)(SYS_BIOS), BIOS_SIZE,
 				   PROT_READ | PROT_EXEC,
 				   MAP_SHARED | MAP_FIXED, fd, SYS_BIOS))
@@ -128,9 +126,7 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
 		}
 	    }
 	    if (!vidMem) {
-#ifdef DEBUG
-		ErrorF("Mapping VRAM area\n");
-#endif
+		DebugF("Mapping VRAM area\n");
 		if ((vidMem = mmap((void *)(V_RAM), VRAM_SIZE,
 				   PROT_READ | PROT_WRITE | PROT_EXEC,
 				   MAP_SHARED | MAP_FIXED, fd, V_RAM))
@@ -162,9 +158,7 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
 	(pointer)xnfcalloc(1, ALLOC_ENTRIES(pagesize));
 
     if (!xf86IsEntityPrimary(entityIndex)) {
-#ifdef DEBUG
-	ErrorF("Mapping high memory area\n");
-#endif
+	DebugF("Mapping high memory area\n");
 	if ((high_mem = shmget(counter++, HIGH_MEM_SIZE,
 			       IPC_CREAT | SHM_R | SHM_W)) == -1) {
 	    if (errno == ENOSYS)
@@ -176,9 +170,7 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
 	    goto error1;
 	}
     } else {
-#ifdef DEBUG
-	ErrorF("Mapping Video BIOS\n");
-#endif
+	DebugF("Mapping Video BIOS\n");
 	videoBiosMapped = TRUE;
 	if ((fd = open(DEV_MEM, O_RDWR, 0)) >= 0) {
 	    if ((vMem = mmap((void *)(V_BIOS), SYS_BIOS - V_BIOS,
@@ -195,9 +187,7 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
     }
     ((linuxInt10Priv*)pInt->private)->highMem = high_mem;
     
-#ifdef DEBUG
-    ErrorF("Mapping 640kB area\n");
-#endif
+    DebugF("Mapping 640kB area\n");
     if ((low_mem = shmget(counter++, V_RAM,
 			  IPC_CREAT | SHM_R | SHM_W)) == -1) {
 	xf86DrvMsg(screen, X_ERROR,
@@ -229,16 +219,12 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
     
     Int10Current = pInt;
 
-#ifdef DEBUG
-    ErrorF("Mapping int area\n");
-#endif
+    DebugF("Mapping int area\n");
     if (xf86ReadBIOS(0, 0, (unsigned char *)0, LOW_PAGE_SIZE) < 0) {
 	xf86DrvMsg(screen, X_ERROR, "Cannot read int vect\n");
 	goto error3;
     }
-#ifdef DEBUG
-    ErrorF("done\n");
-#endif
+    DebugF("done\n");
     /*
      * Read in everything between V_BIOS and SYS_BIOS as some system BIOSes
      * have executable code there.  Note that xf86ReadBIOS() can only bring in
@@ -246,17 +232,13 @@ xf86ExtendedInitInt10(int entityIndex, int Flags)
      */
     if (!videoBiosMapped) {
 	memset((pointer)V_BIOS, 0, SYS_BIOS - V_BIOS);
-#ifdef DEBUG
-	ErrorF("Reading BIOS\n");
-#endif
+	DebugF("Reading BIOS\n");
 	for (cs = V_BIOS;  cs < SYS_BIOS;  cs += V_BIOS_SIZE)
 	    if (xf86ReadBIOS(cs, 0, (pointer)cs, V_BIOS_SIZE) < V_BIOS_SIZE)
 		xf86DrvMsg(screen, X_WARNING,
 			   "Unable to retrieve all of segment 0x%06lX.\n",
 			   (long)cs);
-#ifdef DEBUG
-	ErrorF("done\n");
-#endif
+	DebugF("done\n");
     }
 
     if (xf86IsEntityPrimary(entityIndex) && !(initPrimary(options))) {
