diff --git a/hw/xfree86/dri/xf86dri.c b/hw/xfree86/dri/xf86dri.c
index c35ba2f..72ce869 100644
--- a/hw/xfree86/dri/xf86dri.c
+++ b/hw/xfree86/dri/xf86dri.c
@@ -63,27 +63,20 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 static int DRIErrorBase;
 
-
-
 static void XF86DRIResetProc(ExtensionEntry* extEntry);
 
 static unsigned char DRIReqCode = 0;
 
 extern void XFree86DRIExtensionInit(void);
 
-/*ARGSUSED*/
-static void
-XF86DRIResetProc (
-    ExtensionEntry* extEntry
-)
+ /*ARGSUSED*/ static void
+XF86DRIResetProc(ExtensionEntry * extEntry)
 {
     DRIReset();
 }
 
 static int
-ProcXF86DRIQueryVersion(
-    register ClientPtr client
-)
+ProcXF86DRIQueryVersion(register ClientPtr client)
 {
     xXF86DRIQueryVersionReply rep;
 
@@ -106,9 +99,7 @@ ProcXF86DRIQueryVersion(
 }
 
 static int
-ProcXF86DRIQueryDirectRenderingCapable(
-    register ClientPtr client
-)
+ProcXF86DRIQueryDirectRenderingCapable(register ClientPtr client)
 {
     xXF86DRIQueryDirectRenderingCapableReply	rep;
     Bool isCapable;
@@ -139,14 +130,13 @@ ProcXF86DRIQueryDirectRenderingCapable(
     }
 
     WriteToClient(client, 
-	sizeof(xXF86DRIQueryDirectRenderingCapableReply), (char *)&rep);
+                  sizeof(xXF86DRIQueryDirectRenderingCapableReply),
+                  (char *) &rep);
     return Success;
 }
 
 static int
-ProcXF86DRIOpenConnection(
-    register ClientPtr client
-)
+ProcXF86DRIOpenConnection(register ClientPtr client)
 {
     xXF86DRIOpenConnectionReply rep;
     drm_handle_t			hSAREA;
@@ -160,8 +150,7 @@ ProcXF86DRIOpenConnection(
     }
 
     if (!DRIOpenConnection( screenInfo.screens[stuff->screen], 
-			    &hSAREA,
-			    &busIdString)) {
+                           &hSAREA, &busIdString)) {
 	return BadValue;
     }
 
@@ -170,7 +159,9 @@ ProcXF86DRIOpenConnection(
     rep.busIdStringLength = 0;
     if (busIdString)
 	rep.busIdStringLength = strlen(busIdString);
-    rep.length = bytes_to_int32(SIZEOF(xXF86DRIOpenConnectionReply) - SIZEOF(xGenericReply) +
+    rep.length =
+        bytes_to_int32(SIZEOF(xXF86DRIOpenConnectionReply) -
+                       SIZEOF(xGenericReply) +
                   pad_to_int32(rep.busIdStringLength));
 
     rep.hSAREALow  = (CARD32)(hSAREA & 0xffffffff);
@@ -187,9 +178,7 @@ ProcXF86DRIOpenConnection(
 }
 
 static int
-ProcXF86DRIAuthConnection(
-    register ClientPtr client
-)
+ProcXF86DRIAuthConnection(register ClientPtr client)
 {
     xXF86DRIAuthConnectionReply rep;
     
@@ -214,9 +203,7 @@ ProcXF86DRIAuthConnection(
 }
 
 static int
-ProcXF86DRICloseConnection(
-    register ClientPtr client
-)
+ProcXF86DRICloseConnection(register ClientPtr client)
 {
     REQUEST(xXF86DRICloseConnectionReq);
     REQUEST_SIZE_MATCH(xXF86DRICloseConnectionReq);
@@ -231,9 +218,7 @@ ProcXF86DRICloseConnection(
 }
 
 static int
-ProcXF86DRIGetClientDriverName(
-    register ClientPtr client
-)
+ProcXF86DRIGetClientDriverName(register ClientPtr client)
 {
     xXF86DRIGetClientDriverNameReply	rep;
     char* clientDriverName;
@@ -263,16 +248,12 @@ ProcXF86DRIGetClientDriverName(
     WriteToClient(client, 
 	sizeof(xXF86DRIGetClientDriverNameReply), (char *)&rep);
     if (rep.clientDriverNameLength)
-	WriteToClient(client, 
-                      rep.clientDriverNameLength, 
-                      clientDriverName);
+        WriteToClient(client, rep.clientDriverNameLength, clientDriverName);
     return Success;
 }
 
 static int
-ProcXF86DRICreateContext(
-    register ClientPtr client
-)
+ProcXF86DRICreateContext(register ClientPtr client)
 {
     xXF86DRICreateContextReply	rep;
     ScreenPtr pScreen;
@@ -292,8 +273,7 @@ ProcXF86DRICreateContext(
 
     if (!DRICreateContext( pScreen,
 			   NULL,
-			   stuff->context,
-			   (drm_context_t *)&rep.hHWContext)) {
+                          stuff->context, (drm_context_t *) & rep.hHWContext)) {
 	return BadValue;
     }
 
@@ -302,9 +282,7 @@ ProcXF86DRICreateContext(
 }
 
 static int
-ProcXF86DRIDestroyContext(
-    register ClientPtr client
-)
+ProcXF86DRIDestroyContext(register ClientPtr client)
 {
     REQUEST(xXF86DRIDestroyContextReq);
     REQUEST_SIZE_MATCH(xXF86DRIDestroyContextReq);
@@ -313,8 +291,7 @@ ProcXF86DRIDestroyContext(
 	return BadValue;
     }
 
-    if (!DRIDestroyContext( screenInfo.screens[stuff->screen],
-			    stuff->context)) {
+    if (!DRIDestroyContext(screenInfo.screens[stuff->screen], stuff->context)) {
 	return BadValue;
     }
 
@@ -322,9 +299,7 @@ ProcXF86DRIDestroyContext(
 }
 
 static int
-ProcXF86DRICreateDrawable(
-    ClientPtr client
-)
+ProcXF86DRICreateDrawable(ClientPtr client)
 {
     xXF86DRICreateDrawableReply	rep;
     DrawablePtr pDrawable;
@@ -356,13 +331,12 @@ ProcXF86DRICreateDrawable(
 }
 
 static int
-ProcXF86DRIDestroyDrawable(
-    register ClientPtr client
-)
+ProcXF86DRIDestroyDrawable(register ClientPtr client)
 {
     REQUEST(xXF86DRIDestroyDrawableReq);
     DrawablePtr pDrawable;
     int rc;
+
     REQUEST_SIZE_MATCH(xXF86DRIDestroyDrawableReq);
 
     if (stuff->screen >= screenInfo.numScreens) {
@@ -384,9 +358,7 @@ ProcXF86DRIDestroyDrawable(
 }
 
 static int
-ProcXF86DRIGetDrawableInfo(
-    register ClientPtr client
-)
+ProcXF86DRIGetDrawableInfo(register ClientPtr client)
 {
     xXF86DRIGetDrawableInfoReply	rep;
     DrawablePtr pDrawable;
@@ -423,8 +395,7 @@ ProcXF86DRIGetDrawableInfo(
 			     &pClipRects,
 			     &backX, 
 			     &backY,
-			     (int*)&rep.numBackClipRects,
-			     &pBackClipRects)) {
+                            (int *) &rep.numBackClipRects, &pBackClipRects)) {
 	return BadValue;
     }
 
@@ -432,8 +403,7 @@ ProcXF86DRIGetDrawableInfo(
     rep.drawableY = Y;
     rep.drawableWidth = W;
     rep.drawableHeight = H;
-    rep.length = (SIZEOF(xXF86DRIGetDrawableInfoReply) - 
-		  SIZEOF(xGenericReply));
+    rep.length = (SIZEOF(xXF86DRIGetDrawableInfoReply) - SIZEOF(xGenericReply));
 
     rep.backX = backX;
     rep.backY = backY;
@@ -464,7 +434,8 @@ ProcXF86DRIGetDrawableInfo(
 	    }
 
 	    rep.numClipRects = j;
-       } else {
+        }
+        else {
 	    rep.numClipRects = 0;
        }
 
@@ -492,9 +463,7 @@ ProcXF86DRIGetDrawableInfo(
 }
 
 static int
-ProcXF86DRIGetDeviceInfo(
-    register ClientPtr client
-)
+ProcXF86DRIGetDeviceInfo(register ClientPtr client)
 {
     xXF86DRIGetDeviceInfoReply	rep;
     drm_handle_t hFrameBuffer;
@@ -516,8 +485,7 @@ ProcXF86DRIGetDeviceInfo(
 			   (int*)&rep.framebufferOrigin,
 			   (int*)&rep.framebufferSize,
 			   (int*)&rep.framebufferStride,
-			   (int*)&rep.devPrivateSize,
-			   &pDevPrivate)) {
+                          (int *) &rep.devPrivateSize, &pDevPrivate)) {
 	return BadValue;
     }
 
@@ -543,14 +511,11 @@ ProcXF86DRIGetDeviceInfo(
 }
 
 static int
-ProcXF86DRIDispatch (
-    register ClientPtr	client
-)
+ProcXF86DRIDispatch(register ClientPtr client)
 {
     REQUEST(xReq);
 
-    switch (stuff->data)
-    {
+    switch (stuff->data) {
     case X_XF86DRIQueryVersion:
 	return ProcXF86DRIQueryVersion(client);
     case X_XF86DRIQueryDirectRenderingCapable:
@@ -560,8 +525,7 @@ ProcXF86DRIDispatch (
     if (!LocalClient(client))
 	return DRIErrorBase + XF86DRIClientNotLocal;
 
-    switch (stuff->data)
-    {
+    switch (stuff->data) {
     case X_XF86DRIOpenConnection:
 	return ProcXF86DRIOpenConnection(client);
     case X_XF86DRICloseConnection:
@@ -589,9 +553,7 @@ ProcXF86DRIDispatch (
 }
 
 static int
-SProcXF86DRIQueryVersion(
-    register ClientPtr	client
-)
+SProcXF86DRIQueryVersion(register ClientPtr client)
 {
     REQUEST(xXF86DRIQueryVersionReq);
     swaps(&stuff->length);
@@ -599,9 +561,7 @@ SProcXF86DRIQueryVersion(
 }
 
 static int
-SProcXF86DRIQueryDirectRenderingCapable(
-    register ClientPtr client
-)
+SProcXF86DRIQueryDirectRenderingCapable(register ClientPtr client)
 {
     REQUEST(xXF86DRIQueryDirectRenderingCapableReq);
     swaps(&stuff->length);
@@ -610,9 +570,7 @@ SProcXF86DRIQueryDirectRenderingCapable(
 }
 
 static int
-SProcXF86DRIDispatch (
-    register ClientPtr	client
-)
+SProcXF86DRIDispatch(register ClientPtr client)
 {
     REQUEST(xReq);
 
@@ -620,8 +578,7 @@ SProcXF86DRIDispatch (
      * Only local clients are allowed DRI access, but remote clients still need
      * these requests to find out cleanly.
      */
-    switch (stuff->data)
-    {
+    switch (stuff->data) {
     case X_XF86DRIQueryVersion:
 	return SProcXF86DRIQueryVersion(client);
     case X_XF86DRIQueryDirectRenderingCapable:
@@ -640,8 +597,7 @@ XFree86DRIExtensionInit(void)
     EventType = CreateNewResourceType(XF86DRIFreeEvents, "DRIEvent");
 #endif
 
-    if (
-	DRIExtensionInit() &&
+    if (DRIExtensionInit() &&
 #ifdef XF86DRI_EVENTS
         EventType && ScreenPrivateIndex != -1 &&
 #endif
@@ -650,8 +606,7 @@ XFree86DRIExtensionInit(void)
 				 XF86DRINumberErrors,
 				 ProcXF86DRIDispatch,
 				 SProcXF86DRIDispatch,
-				 XF86DRIResetProc,
-				 StandardMinorOpcode))) {
+                                 XF86DRIResetProc, StandardMinorOpcode))) {
 	DRIReqCode = (unsigned char)extEntry->base;
 	DRIErrorBase = extEntry->errorBase;
     }
