diff --git a/hw/xfree86/os-support/hurd/hurd_video.c b/hw/xfree86/os-support/hurd/hurd_video.c
index 39f353b..72474ba 100644
--- a/hw/xfree86/os-support/hurd/hurd_video.c
+++ b/hw/xfree86/os-support/hurd/hurd_video.c
@@ -50,47 +50,43 @@ mapVidMem(int ScreenNum, unsigned long Base, unsigned long Size, int Flags)
     vm_address_t addr=(vm_address_t)0;
 
     err = get_privileged_ports (NULL, &device);
-    if( err )
-    {
+    if (err) {
 	errno = err;
-	FatalError("xf86MapVidMem() can't get_privileged_ports. (%s)\n",strerror(errno));
+        FatalError("xf86MapVidMem() can't get_privileged_ports. (%s)\n",
+                   strerror(errno));
     }
     err = device_open(device,D_READ|D_WRITE,"mem",&mem_dev);
     mach_port_deallocate (mach_task_self(), device);
-    if( err )
-    {
+    if (err) {
 	errno = err;
-	FatalError("xf86MapVidMem() can't device_open. (%s)\n",strerror(errno));
+        FatalError("xf86MapVidMem() can't device_open. (%s)\n",
+                   strerror(errno));
     }
 
-    err = device_map(mem_dev,VM_PROT_READ|VM_PROT_WRITE, Base , Size ,&mem_obj,0);
-    if( err )
-    {
+    err =
+        device_map(mem_dev, VM_PROT_READ | VM_PROT_WRITE, Base, Size, &mem_obj,
+                   0);
+    if (err) {
 	errno = err;
 	FatalError("xf86MapVidMem() can't device_map. (%s)\n",strerror(errno));
     }
-    err = vm_map(mach_task_self(),
-		 &addr,
-		 Size,
-		 0,     /* mask */
+    err = vm_map(mach_task_self(), &addr, Size, 0,      /* mask */
 		 TRUE,  /* anywhere */
-		 mem_obj,
-		 (vm_offset_t)Base,
-		 FALSE, /* copy on write */
-		 VM_PROT_READ|VM_PROT_WRITE,
+                 mem_obj, (vm_offset_t) Base, FALSE,    /* copy on write */
 		 VM_PROT_READ|VM_PROT_WRITE,
-		 VM_INHERIT_SHARE);
+                 VM_PROT_READ | VM_PROT_WRITE, VM_INHERIT_SHARE);
     mach_port_deallocate(mach_task_self(),mem_obj);
-    if( err )
-    {
+    if (err) {
 	errno = err;
-	FatalError("xf86MapVidMem() can't vm_map.(mem_obj) (%s)\n",strerror(errno));
+        FatalError("xf86MapVidMem() can't vm_map.(mem_obj) (%s)\n",
+                   strerror(errno));
     }
     mach_port_deallocate(mach_task_self(),mem_dev);
-    if( err )
-    {
+    if (err) {
 	errno = err;
-	FatalError("xf86MapVidMem() can't mach_port_deallocate.(mem_dev) (%s)\n",strerror(errno));
+        FatalError
+            ("xf86MapVidMem() can't mach_port_deallocate.(mem_dev) (%s)\n",
+             strerror(errno));
     }
     return (pointer)addr;
 }
@@ -99,10 +95,11 @@ static void
 unmapVidMem(int ScreenNum,pointer Base,unsigned long Size)
 {
     kern_return_t err = vm_deallocate(mach_task_self(), (int)Base, Size);
-    if( err )
-    {
+
+    if (err) {
 	errno = err;
-	ErrorF("xf86UnMapVidMem: can't dealloc framebuffer space (%s)\n",strerror(errno));
+        ErrorF("xf86UnMapVidMem: can't dealloc framebuffer space (%s)\n",
+               strerror(errno));
     }
     return;
 }
