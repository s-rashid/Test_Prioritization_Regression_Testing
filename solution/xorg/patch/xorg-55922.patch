diff --git a/include/exevents.h b/include/exevents.h
index fb2ef27..feea170 100644
--- a/include/exevents.h
+++ b/include/exevents.h
@@ -53,11 +53,9 @@ enum ScrollFlags {
     SCROLL_FLAG_PREFERRED       = (1 << 2)
 };
 
-extern _X_EXPORT int InitProximityClassDeviceStruct(
-	DeviceIntPtr           /* dev */);
+extern _X_EXPORT int InitProximityClassDeviceStruct(DeviceIntPtr /* dev */ );
 
-extern _X_EXPORT Bool InitValuatorAxisStruct(
-	DeviceIntPtr           /* dev */,
+extern _X_EXPORT Bool InitValuatorAxisStruct(DeviceIntPtr /* dev */ ,
 	int                    /* axnum */,
 	Atom                   /* label */,
 	int                    /* minval */,
@@ -67,26 +65,22 @@ extern _X_EXPORT Bool InitValuatorAxisStruct(
 	int                    /* max_res */,
 	int                    /* mode */);
 
-extern _X_EXPORT Bool SetScrollValuator(
-	DeviceIntPtr           /* dev */,
+extern _X_EXPORT Bool SetScrollValuator(DeviceIntPtr /* dev */ ,
 	int                    /* axnum */,
 	enum ScrollType        /* type */,
 	double                 /* increment */,
 	int                    /* flags */);
 
 /* Input device properties */
-extern _X_EXPORT void XIDeleteAllDeviceProperties(
-        DeviceIntPtr            /* device */
+extern _X_EXPORT void XIDeleteAllDeviceProperties(DeviceIntPtr  /* device */
 );
 
-extern _X_EXPORT int XIDeleteDeviceProperty(
-        DeviceIntPtr            /* device */,
+extern _X_EXPORT int XIDeleteDeviceProperty(DeviceIntPtr /* device */ ,
         Atom                    /* property */,
         Bool                    /* fromClient */
 );
 
-extern _X_EXPORT int XIChangeDeviceProperty(
-        DeviceIntPtr            /* dev */,
+extern _X_EXPORT int XIChangeDeviceProperty(DeviceIntPtr /* dev */ ,
         Atom                    /* property */,
         Atom                    /* type */,
         int                     /* format*/,
@@ -96,58 +90,50 @@ extern _X_EXPORT int XIChangeDeviceProperty(
         Bool                    /* sendevent*/
         );
 
-extern _X_EXPORT int XIGetDeviceProperty(
-        DeviceIntPtr            /* dev */,
+extern _X_EXPORT int XIGetDeviceProperty(DeviceIntPtr /* dev */ ,
         Atom                    /* property */,
         XIPropertyValuePtr*     /* value */
 );
 
-extern _X_EXPORT int XISetDevicePropertyDeletable(
-        DeviceIntPtr            /* dev */,
+extern _X_EXPORT int XISetDevicePropertyDeletable(DeviceIntPtr /* dev */ ,
         Atom                    /* property */,
         Bool                    /* deletable */
 );
 
-extern _X_EXPORT long XIRegisterPropertyHandler(
-        DeviceIntPtr         dev,
-        int (*SetProperty) (DeviceIntPtr dev,
-                            Atom property,
-                            XIPropertyValuePtr prop,
-                            BOOL checkonly),
-        int (*GetProperty) (DeviceIntPtr dev,
-                            Atom property),
-        int (*DeleteProperty) (DeviceIntPtr dev,
+extern _X_EXPORT long XIRegisterPropertyHandler(DeviceIntPtr dev,
+                                                int (*SetProperty) (DeviceIntPtr
+                                                                    dev,
+                                                                    Atom
+                                                                    property,
+                                                                    XIPropertyValuePtr
+                                                                    prop,
+                                                                    BOOL
+                                                                    checkonly),
+                                                int (*GetProperty) (DeviceIntPtr
+                                                                    dev,
+                                                                    Atom
+                                                                    property),
+                                                int (*DeleteProperty)
+                                                (DeviceIntPtr dev,
                                Atom property)
 );
 
-extern _X_EXPORT void XIUnregisterPropertyHandler(
-        DeviceIntPtr          dev,
-        long                  id
-);
+extern _X_EXPORT void XIUnregisterPropertyHandler(DeviceIntPtr dev, long id);
 
-extern _X_EXPORT Atom XIGetKnownProperty(
-        const char*           name
-);
+extern _X_EXPORT Atom XIGetKnownProperty(const char *name);
 
 extern _X_EXPORT DeviceIntPtr XIGetDevice(xEvent *ev);
 
-extern _X_EXPORT int XIPropToInt(
-        XIPropertyValuePtr val,
-        int *nelem_return,
-        int **buf_return
-);
+extern _X_EXPORT int XIPropToInt(XIPropertyValuePtr val,
+                                 int *nelem_return, int **buf_return);
 
-extern _X_EXPORT int XIPropToFloat(
-        XIPropertyValuePtr val,
-        int *nelem_return,
-        float **buf_return
-);
+extern _X_EXPORT int XIPropToFloat(XIPropertyValuePtr val,
+                                   int *nelem_return, float **buf_return);
 
 /****************************************************************************
  *                      End of driver interface                             *
  ****************************************************************************/
 
-
 /**
  * Attached to the devPrivates of each client. Specifies the version number as
  * supported by the client.
@@ -157,7 +143,6 @@ typedef struct _XIClientRec {
         int minor_version;
 } XIClientRec, *XIClientPtr;
 
-
 typedef struct _GrabParameters {
     int                 grabtype;               /* CORE, etc. */
     unsigned int        ownerEvents;
@@ -169,33 +154,27 @@ typedef struct _GrabParameters {
     unsigned int        modifiers;
 } GrabParameters;
 
-
 extern int
-UpdateDeviceState (
-	DeviceIntPtr           /* device */,
+ UpdateDeviceState(DeviceIntPtr /* device */ ,
 	DeviceEvent*           /*  xE    */);
 
 extern void
-ProcessOtherEvent (
-	InternalEvent*         /* ev */,
+ ProcessOtherEvent(InternalEvent * /* ev */ ,
 	DeviceIntPtr           /* other */);
 
 extern void
-DeviceFocusEvent(
-	DeviceIntPtr           /* dev */,
+ DeviceFocusEvent(DeviceIntPtr /* dev */ ,
 	int                    /* type */,
 	int                    /* mode */,
 	int                    /* detail */,
 	WindowPtr              /* pWin */);
 
 extern int
-CheckGrabValues(
-        ClientPtr              /* client */,
+ CheckGrabValues(ClientPtr /* client */ ,
         GrabParameters*        /* param */);
 
 extern int
-GrabButton(
-	ClientPtr              /* client */,
+ GrabButton(ClientPtr /* client */ ,
 	DeviceIntPtr           /* dev */,
 	DeviceIntPtr           /* modifier_device */,
 	int                    /* button */,
@@ -204,8 +183,7 @@ GrabButton(
 	GrabMask*              /* eventMask */);
 
 extern int
-GrabKey(
-	ClientPtr              /* client */,
+ GrabKey(ClientPtr /* client */ ,
 	DeviceIntPtr           /* dev */,
 	DeviceIntPtr           /* modifier_device */,
 	int                    /* key */,
@@ -214,52 +192,44 @@ GrabKey(
 	GrabMask*              /* eventMask */);
 
 extern int
-GrabWindow(
-	ClientPtr              /* client */,
+ GrabWindow(ClientPtr /* client */ ,
 	DeviceIntPtr           /* dev */,
 	int                    /* type */,
 	GrabParameters*        /* param */,
 	GrabMask*              /* eventMask */);
 
 extern int
-GrabTouch(
-       ClientPtr              /* client */,
+ GrabTouch(ClientPtr /* client */ ,
        DeviceIntPtr           /* dev */,
        DeviceIntPtr           /* mod_dev */,
        GrabParameters*        /* param */,
        GrabMask*              /* eventMask */);
 
 extern int
-SelectForWindow(
-	DeviceIntPtr           /* dev */,
+ SelectForWindow(DeviceIntPtr /* dev */ ,
 	WindowPtr              /* pWin */,
 	ClientPtr              /* client */,
 	Mask                   /* mask */,
 	Mask                   /* exclusivemasks */);
 
 extern int
-AddExtensionClient (
-	WindowPtr              /* pWin */,
+ AddExtensionClient(WindowPtr /* pWin */ ,
 	ClientPtr              /* client */,
 	Mask                   /* mask */,
 	int                    /* mskidx */);
 
 extern void
-RecalculateDeviceDeliverableEvents(
-	WindowPtr              /* pWin */);
+ RecalculateDeviceDeliverableEvents(WindowPtr /* pWin */ );
 
 extern int
-InputClientGone(
-	WindowPtr              /* pWin */,
+ InputClientGone(WindowPtr /* pWin */ ,
 	XID                    /* id */);
 
 extern void
-WindowGone(
-	WindowPtr              /* win */);
+ WindowGone(WindowPtr /* win */ );
 
 extern int
-SendEvent (
-	ClientPtr              /* client */,
+ SendEvent(ClientPtr /* client */ ,
 	DeviceIntPtr           /* d */,
 	Window                 /* dest */,
 	Bool                   /* propagate */,
@@ -268,15 +238,13 @@ SendEvent (
 	int                    /* count */);
 
 extern int
-SetButtonMapping (
-	ClientPtr              /* client */,
+ SetButtonMapping(ClientPtr /* client */ ,
 	DeviceIntPtr           /* dev */,
 	int                    /* nElts */,
 	BYTE *                 /* map */);
 
 extern int
-ChangeKeyMapping(
-	ClientPtr              /* client */,
+ ChangeKeyMapping(ClientPtr /* client */ ,
 	DeviceIntPtr           /* dev */,
 	unsigned               /* len */,
 	int                    /* type */,
@@ -286,18 +254,15 @@ ChangeKeyMapping(
 	KeySym *               /* map */);
 
 extern void
-DeleteWindowFromAnyExtEvents(
-	WindowPtr              /* pWin */,
+ DeleteWindowFromAnyExtEvents(WindowPtr /* pWin */ ,
 	Bool                   /* freeResources */);
 
 extern int
-MaybeSendDeviceMotionNotifyHint (
-	deviceKeyButtonPointer * /* pEvents */,
+ MaybeSendDeviceMotionNotifyHint(deviceKeyButtonPointer * /* pEvents */ ,
 	Mask                   /* mask */);
 
 extern void
-CheckDeviceGrabAndHintWindow (
-	WindowPtr              /* pWin */,
+ CheckDeviceGrabAndHintWindow(WindowPtr /* pWin */ ,
 	int                    /* type */,
 	deviceKeyButtonPointer * /* xE */,
 	GrabPtr                /* grab */,
@@ -305,33 +270,28 @@ CheckDeviceGrabAndHintWindow (
 	Mask                   /* deliveryMask */);
 
 extern void
-MaybeStopDeviceHint(
-	DeviceIntPtr           /* dev */,
+ MaybeStopDeviceHint(DeviceIntPtr /* dev */ ,
 	ClientPtr              /* client */);
 
 extern int
-DeviceEventSuppressForWindow(
-	WindowPtr              /* pWin */,
+ DeviceEventSuppressForWindow(WindowPtr /* pWin */ ,
 	ClientPtr              /* client */,
 	Mask                   /* mask */,
 	int                    /* maskndx */);
 
 extern void
-SendEventToAllWindows(
-        DeviceIntPtr           /* dev */,
+ SendEventToAllWindows(DeviceIntPtr /* dev */ ,
         Mask                   /* mask */,
         xEvent *               /* ev */,
         int                    /* count */);
 
 extern void
-TouchRejected(
-        DeviceIntPtr           /* sourcedev */,
+ TouchRejected(DeviceIntPtr /* sourcedev */ ,
         TouchPointInfoPtr      /* ti */,
         XID                    /* resource */,
         TouchOwnershipEvent *  /* ev */);
 
-extern _X_HIDDEN void XI2EventSwap(
-        xGenericEvent  *              /* from */,
+extern _X_HIDDEN void XI2EventSwap(xGenericEvent * /* from */ ,
         xGenericEvent  *              /* to */);
 
 /* For an event such as MappingNotify which affects client interpretation
@@ -344,6 +304,7 @@ extern void
 XISendDeviceChangedEvent(DeviceIntPtr device, DeviceChangedEvent *dce);
 
 extern int
+
 XISetEventMask(DeviceIntPtr dev, WindowPtr win, ClientPtr client,
                            unsigned int len, unsigned char* mask);
 
