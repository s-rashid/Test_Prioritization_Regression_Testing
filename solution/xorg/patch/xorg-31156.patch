diff --git a/hw/xfree86/common/xf86pciBus.c b/hw/xfree86/common/xf86pciBus.c
index 7c5a2d8..af2b300 100644
--- a/hw/xfree86/common/xf86pciBus.c
+++ b/hw/xfree86/common/xf86pciBus.c
@@ -1030,72 +1030,6 @@ xf86CheckPciSlot( const struct pci_device * d )
 }
 
 
-/*
- * xf86FindPciVendorDevice() xf86FindPciClass(): These functions
- * are meant to be used by the pci bios emulation. Some bioses
- * need to see if there are _other_ chips of the same type around
- * so by setting pvp_exclude one pci device can be explicitely
- * _excluded if required.
- */
-_X_EXPORT struct pci_device *
-xf86FindPciDeviceVendor(CARD16 vendorID, CARD16 deviceID,
-			char n, const struct pci_device * exclude)
-{
-    struct pci_device *dev;
-    struct pci_id_match m;
-    struct pci_device_iterator *iter;
-
-    m.vendor_id = vendorID;
-    m.device_id = deviceID;
-    m.subvendor_id = PCI_MATCH_ANY;
-    m.subdevice_id = PCI_MATCH_ANY;
-    m.device_class = 0;
-    m.device_class_mask = 0;
-
-    n++;
-
-    iter = pci_id_match_iterator_create(& m);
-    while ((dev = pci_device_next(iter)) != NULL) {
-	if ((dev != exclude) && !(--n)) {
-	    break;
-	}
-    }
-
-    pci_iterator_destroy(iter);
-
-    return dev;
-}
-
-_X_EXPORT struct pci_device *
-xf86FindPciClass(CARD8 intf, CARD8 subClass, CARD16 _class,
-		 char n, const struct pci_device * exclude)
-{
-    struct pci_device *dev;
-    struct pci_id_match m;
-    struct pci_device_iterator *iter;
-
-    m.vendor_id = PCI_MATCH_ANY;
-    m.device_id = PCI_MATCH_ANY;
-    m.subvendor_id = PCI_MATCH_ANY;
-    m.subdevice_id = PCI_MATCH_ANY;
-    m.device_class = (((uint32_t)_class) << 16) 
-      | (((uint32_t)subClass) << 8) | intf;
-    m.device_class_mask = 0x00ffffff;
-
-    n++;
-
-    iter = pci_id_match_iterator_create(& m);
-    while ((dev = pci_device_next(iter)) != NULL) {
-	if ((dev != exclude) && !(--n)) {
-	    break;
-	}
-    }
-
-    pci_iterator_destroy(iter);
-
-    return dev;
-}
-
 static void
 pciTagConvertRange2Host(PCITAG tag, resRange *pRange)
 {
