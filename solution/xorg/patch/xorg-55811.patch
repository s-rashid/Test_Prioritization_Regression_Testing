diff --git a/hw/xquartz/xpr/x-list.c b/hw/xquartz/xpr/x-list.c
index 77c9309..757ff4c 100644
--- a/hw/xquartz/xpr/x-list.c
+++ b/hw/xquartz/xpr/x-list.c
@@ -57,8 +57,7 @@ list_free_1 (x_list *node)
 }
 
 X_EXTERN void
-X_PFX (list_free_1) (x_list *node)
-{
+ X_PFX(list_free_1) (x_list * node) {
     assert (node != NULL);
 
     pthread_mutex_lock (&freelist_lock);
@@ -69,14 +68,12 @@ X_PFX (list_free_1) (x_list *node)
 }
 
 X_EXTERN void
-X_PFX (list_free) (x_list *lst)
-{
+ X_PFX(list_free) (x_list * lst) {
     x_list *next;
 
     pthread_mutex_lock (&freelist_lock);
 
-    for (; lst != NULL; lst = next)
-    {
+    for (; lst != NULL; lst = next) {
         next = lst->next;
         list_free_1 (lst);
     }
@@ -84,15 +81,12 @@ X_PFX (list_free) (x_list *lst)
     pthread_mutex_unlock (&freelist_lock);
 }
 
-X_EXTERN x_list *
-X_PFX (list_prepend) (x_list *lst, void *data)
-{
+X_EXTERN x_list *X_PFX(list_prepend) (x_list * lst, void *data) {
     x_list *node;
 
     pthread_mutex_lock (&freelist_lock);
 
-    if (freelist == NULL)
-    {
+    if (freelist == NULL) {
         x_list_block *b;
         int i;
 
@@ -117,9 +111,7 @@ X_PFX (list_prepend) (x_list *lst, void *data)
     return node;
 }
 
-X_EXTERN x_list *
-X_PFX (list_append) (x_list *lst, void *data)
-{
+X_EXTERN x_list *X_PFX(list_append) (x_list * lst, void *data) {
     x_list *head = lst;
 
     if (lst == NULL)
@@ -133,13 +125,10 @@ X_PFX (list_append) (x_list *lst, void *data)
     return head;
 }
 
-X_EXTERN x_list *
-X_PFX (list_reverse) (x_list *lst)
-{
+X_EXTERN x_list *X_PFX(list_reverse) (x_list * lst) {
     x_list *head = NULL, *next;
     
-    while (lst != NULL)
-    {
+    while (lst != NULL) {
         next = lst->next;
         lst->next = head;
         head = lst;
@@ -149,11 +138,8 @@ X_PFX (list_reverse) (x_list *lst)
     return head;
 }
 
-X_EXTERN x_list *
-X_PFX (list_find) (x_list *lst, void *data)
-{
-    for (; lst != NULL; lst = lst->next)
-    {
+X_EXTERN x_list *X_PFX(list_find) (x_list * lst, void *data) {
+    for (; lst != NULL; lst = lst->next) {
         if (lst->data == data)
             return lst;
     }
@@ -161,23 +147,19 @@ X_PFX (list_find) (x_list *lst, void *data)
     return NULL;
 }
 
-X_EXTERN x_list *
-X_PFX (list_nth) (x_list *lst, int n)
-{
+X_EXTERN x_list *X_PFX(list_nth) (x_list * lst, int n) {
     while (n-- > 0 && lst != NULL)
         lst = lst->next;
 
     return lst;
 }
 
-X_EXTERN x_list *
-X_PFX (list_pop) (x_list *lst, void **data_ret)
-{
+X_EXTERN x_list *X_PFX(list_pop) (x_list * lst, void **data_ret) {
     void *data = NULL;
 
-    if (lst != NULL)
-    {
+    if (lst != NULL) {
         x_list *tem = lst;
+
         data = lst->data;
         lst = lst->next;
         X_PFX (list_free_1) (tem);
@@ -189,14 +171,12 @@ X_PFX (list_pop) (x_list *lst, void **data_ret)
     return lst;
 }
 
-X_EXTERN x_list *
-X_PFX (list_filter) (x_list *lst,
-                     int (*pred) (void *item, void *data), void *data)
-{
+X_EXTERN x_list *X_PFX(list_filter) (x_list * lst,
+                                     int (*pred) (void *item, void *data),
+                                     void *data) {
     x_list *ret = NULL, *node;
 
-    for (node = lst; node != NULL; node = node->next)
-    {
+    for (node = lst; node != NULL; node = node->next) {
         if ((*pred) (node->data, data))
             ret = X_PFX (list_prepend) (ret, node->data);
     }
@@ -204,44 +184,35 @@ X_PFX (list_filter) (x_list *lst,
     return X_PFX (list_reverse) (ret);
 }
 
-X_EXTERN x_list *
-X_PFX (list_map) (x_list *lst,
-                  void *(*fun) (void *item, void *data), void *data)
-{
+X_EXTERN x_list *X_PFX(list_map) (x_list * lst,
+                                  void *(*fun) (void *item, void *data),
+                                  void *data) {
     x_list *ret = NULL, *node;
 
-    for (node = lst; node != NULL; node = node->next)
-    {
+    for (node = lst; node != NULL; node = node->next) {
         X_PFX (list_prepend) (ret, fun (node->data, data));
     }
 
     return X_PFX (list_reverse) (ret);
 }
 
-X_EXTERN x_list *
-X_PFX (list_copy) (x_list *lst)
-{
+X_EXTERN x_list *X_PFX(list_copy) (x_list * lst) {
     x_list *copy = NULL;
 
-    for (; lst != NULL; lst = lst->next)
-    {
+    for (; lst != NULL; lst = lst->next) {
         copy = X_PFX (list_prepend) (copy, lst->data);
     }
 
     return X_PFX (list_reverse) (copy);
 }
 
-X_EXTERN x_list *
-X_PFX (list_remove) (x_list *lst, void *data)
-{
+X_EXTERN x_list *X_PFX(list_remove) (x_list * lst, void *data) {
     x_list **ptr, *node;
 
-    for (ptr = &lst; *ptr != NULL;)
-    {
+    for (ptr = &lst; *ptr != NULL;) {
         node = *ptr;
 
-        if (node->data == data)
-        {
+        if (node->data == data) {
             *ptr = node->next;
             X_PFX (list_free_1) (node);
         }
@@ -253,8 +224,7 @@ X_PFX (list_remove) (x_list *lst, void *data)
 }
 
 X_EXTERN unsigned int
-X_PFX (list_length) (x_list *lst)
-{
+ X_PFX(list_length) (x_list * lst) {
     unsigned int n;
 
     n = 0;
@@ -265,19 +235,17 @@ X_PFX (list_length) (x_list *lst)
 }
 
 X_EXTERN void
+
 X_PFX (list_foreach) (x_list *lst,
                       void (*fun) (void *data, void *user_data),
-                      void *user_data)
-{
-    for (; lst != NULL; lst = lst->next)
-    {
+                     void *user_data) {
+    for (; lst != NULL; lst = lst->next) {
         (*fun) (lst->data, user_data);
     }
 }
 
 static x_list *
-list_sort_1 (x_list *lst, int length,
-             int (*less) (const void *, const void *))
+list_sort_1(x_list * lst, int length, int (*less) (const void *, const void *))
 {
     x_list *mid, *ptr;
     x_list *out_head, *out;
@@ -311,8 +279,7 @@ list_sort_1 (x_list *lst, int length,
     else
         out = out_head = lst, lst = lst->next;
 
-    while (lst != NULL && mid != NULL)
-    {
+    while (lst != NULL && mid != NULL) {
         if ((*less) (mid->data, lst->data))
             out = out->next = mid, mid = mid->next;
         else
@@ -327,9 +294,8 @@ list_sort_1 (x_list *lst, int length,
     return out_head;
 }
 
-X_EXTERN x_list *
-X_PFX (list_sort) (x_list *lst, int (*less) (const void *, const void *))
-{
+X_EXTERN x_list *X_PFX(list_sort) (x_list * lst,
+                                   int (*less) (const void *, const void *)) {
     int length;
 
     length = X_PFX (list_length) (lst);
