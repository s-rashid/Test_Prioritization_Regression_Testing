diff --git a/fb/fbtrap.c b/fb/fbtrap.c
index 0b5a638..bf82f8f 100644
--- a/fb/fbtrap.c
+++ b/fb/fbtrap.c
@@ -33,10 +33,7 @@
 
 void
 fbAddTraps (PicturePtr	pPicture,
-	    INT16	x_off,
-	    INT16	y_off,
-	    int		ntrap,
-	    xTrap	*traps)
+           INT16 x_off, INT16 y_off, int ntrap, xTrap * traps)
 {
     pixman_image_t *image;
     int dst_xoff, dst_yoff;
@@ -52,9 +49,7 @@ fbAddTraps (PicturePtr	pPicture,
 
 void
 fbRasterizeTrapezoid (PicturePtr    pPicture,
-		      xTrapezoid  *trap,
-		      int	    x_off,
-		      int	    y_off)
+                     xTrapezoid * trap, int x_off, int y_off)
 {
     pixman_image_t *image;
     int	dst_xoff, dst_yoff;
@@ -63,18 +58,14 @@ fbRasterizeTrapezoid (PicturePtr    pPicture,
 	return;
 
     pixman_rasterize_trapezoid (image, (pixman_trapezoid_t *)trap,
-				x_off + dst_xoff,
-				y_off + dst_yoff);
+                               x_off + dst_xoff, y_off + dst_yoff);
 
     free_pixman_pict (pPicture, image);
 }
 
 void
 fbAddTriangles (PicturePtr  pPicture,
-		INT16	    x_off,
-		INT16	    y_off,
-		int	    ntri,
-		xTriangle *tris)
+               INT16 x_off, INT16 y_off, int ntri, xTriangle * tris)
 {
     pixman_image_t *image;
     int dst_xoff, dst_yoff;
@@ -104,10 +95,7 @@ fbShapes (CompositeShapesFunc	composite,
 	  PicturePtr		pDst,
 	  PictFormatPtr		maskFormat,
 	  int16_t		xSrc,
-	  int16_t		ySrc,
-	  int			nshapes,
-	  int			shape_size,
-	  const uint8_t *	shapes)
+         int16_t ySrc, int nshapes, int shape_size, const uint8_t * shapes)
 {
     pixman_image_t *src, *dst;
     int src_xoff, src_yoff;
@@ -118,14 +106,12 @@ fbShapes (CompositeShapesFunc	composite,
     src = image_from_pict (pSrc, FALSE, &src_xoff, &src_yoff);
     dst = image_from_pict (pDst, TRUE, &dst_xoff, &dst_yoff);
 
-    if (src && dst)
-    {
+    if (src && dst) {
 	pixman_format_code_t format;
 
 	DamageRegionAppend (pDst->pDrawable, pDst->pCompositeClip);
 
-	if (!maskFormat)
-	{
+        if (!maskFormat) {
 	    int i;
 
 	    if (pDst->polyEdge == PolyEdgeSharp)
@@ -133,20 +119,15 @@ fbShapes (CompositeShapesFunc	composite,
 	    else
 		format = PIXMAN_a8;
 
-	    for (i = 0; i < nshapes; ++i)
-	    {
+            for (i = 0; i < nshapes; ++i) {
 		composite (op, src, dst, format,
 			   xSrc + src_xoff,
 			   ySrc + src_yoff,
-			   dst_xoff,
-			   dst_yoff,
-			   1, shapes + i * shape_size);
+                          dst_xoff, dst_yoff, 1, shapes + i * shape_size);
 	    }
 	}
-	else
-	{
-	    switch (PICT_FORMAT_A (maskFormat->format))
-	    {
+        else {
+            switch (PICT_FORMAT_A(maskFormat->format)) {
 	    case 1:
 		format = PIXMAN_a1;
 		break;
@@ -163,10 +144,7 @@ fbShapes (CompositeShapesFunc	composite,
 	    
 	    composite (op, src, dst, format,
 		       xSrc + src_xoff,
-		       ySrc + src_yoff,
-		       dst_xoff,
-		       dst_yoff,
-		       nshapes, shapes);
+                      ySrc + src_yoff, dst_xoff, dst_yoff, nshapes, shapes);
 	}
 
 	DamageRegionProcessPending (pDst->pDrawable);
@@ -181,18 +159,14 @@ fbTrapezoids (CARD8	    op,
 	      PicturePtr    pSrc,
 	      PicturePtr    pDst,
 	      PictFormatPtr maskFormat,
-	      INT16	    xSrc,
-	      INT16	    ySrc,
-	      int	    ntrap,
-	      xTrapezoid    *traps)
+             INT16 xSrc, INT16 ySrc, int ntrap, xTrapezoid * traps)
 {
     xSrc -= (traps[0].left.p1.x >> 16);
     ySrc -= (traps[0].left.p1.y >> 16);
     
     fbShapes ((CompositeShapesFunc)pixman_composite_trapezoids,
 	      op, pSrc, pDst, maskFormat,
-	      xSrc, ySrc,
-	      ntrap, sizeof (xTrapezoid), (const uint8_t *)traps);
+             xSrc, ySrc, ntrap, sizeof(xTrapezoid), (const uint8_t *) traps);
 }
 
 void
@@ -200,16 +174,12 @@ fbTriangles (CARD8	    op,
 	     PicturePtr    pSrc,
 	     PicturePtr    pDst,
 	     PictFormatPtr maskFormat,
-	     INT16	    xSrc,
-	     INT16	    ySrc,
-	     int	    ntris,
-	     xTriangle    *tris)
+            INT16 xSrc, INT16 ySrc, int ntris, xTriangle * tris)
 { 
     xSrc -= (tris[0].p1.x >> 16);
     ySrc -= (tris[0].p1.y >> 16);
     
     fbShapes ((CompositeShapesFunc)pixman_composite_triangles,
 	      op, pSrc, pDst, maskFormat,
-	      xSrc, ySrc,
-	      ntris, sizeof (xTriangle), (const uint8_t *)tris);
+             xSrc, ySrc, ntris, sizeof(xTriangle), (const uint8_t *) tris);
 }
