diff --git a/hw/xfree86/vgahw/vgaHW.h b/hw/xfree86/vgahw/vgaHW.h
index a38ea75..0761ddb 100644
--- a/hw/xfree86/vgahw/vgaHW.h
+++ b/hw/xfree86/vgahw/vgaHW.h
@@ -28,7 +28,7 @@
 #define DPMS_SERVER
 #include <X11/extensions/dpms.h>
 
-extern int vgaHWGetIndex(void);
+extern _X_EXPORT int vgaHWGetIndex(void);
 
 /*
  * access macro
@@ -192,45 +192,45 @@ typedef struct _vgaHWRec {
 typedef void vgaHWProtectProc(ScrnInfoPtr, Bool);
 typedef void vgaHWBlankScreenProc(ScrnInfoPtr, Bool);
 
-void vgaHWSetStdFuncs(vgaHWPtr hwp);
-void vgaHWSetMmioFuncs(vgaHWPtr hwp, CARD8 *base, int offset);
-void vgaHWProtect(ScrnInfoPtr pScrn, Bool on);
-vgaHWProtectProc *vgaHWProtectWeak(void);
-Bool vgaHWSaveScreen(ScreenPtr pScreen, int mode);
-void vgaHWBlankScreen(ScrnInfoPtr pScrn, Bool on);
-vgaHWBlankScreenProc *vgaHWBlankScreenWeak(void);
-void vgaHWSeqReset(vgaHWPtr hwp, Bool start);
-void vgaHWRestoreFonts(ScrnInfoPtr scrninfp, vgaRegPtr restore);
-void vgaHWRestoreMode(ScrnInfoPtr scrninfp, vgaRegPtr restore);
-void vgaHWRestoreColormap(ScrnInfoPtr scrninfp, vgaRegPtr restore);
-void vgaHWRestore(ScrnInfoPtr scrninfp, vgaRegPtr restore, int flags);
-void vgaHWSaveFonts(ScrnInfoPtr scrninfp, vgaRegPtr save);
-void vgaHWSaveMode(ScrnInfoPtr scrninfp, vgaRegPtr save);
-void vgaHWSaveColormap(ScrnInfoPtr scrninfp, vgaRegPtr save);
-void vgaHWSave(ScrnInfoPtr scrninfp, vgaRegPtr save, int flags);
-Bool vgaHWInit(ScrnInfoPtr scrnp, DisplayModePtr mode);
-Bool vgaHWSetRegCounts(ScrnInfoPtr scrp, int numCRTC, int numSequencer,
+extern _X_EXPORT void vgaHWSetStdFuncs(vgaHWPtr hwp);
+extern _X_EXPORT void vgaHWSetMmioFuncs(vgaHWPtr hwp, CARD8 *base, int offset);
+extern _X_EXPORT void vgaHWProtect(ScrnInfoPtr pScrn, Bool on);
+extern _X_EXPORT vgaHWProtectProc *vgaHWProtectWeak(void);
+extern _X_EXPORT Bool vgaHWSaveScreen(ScreenPtr pScreen, int mode);
+extern _X_EXPORT void vgaHWBlankScreen(ScrnInfoPtr pScrn, Bool on);
+extern _X_EXPORT vgaHWBlankScreenProc *vgaHWBlankScreenWeak(void);
+extern _X_EXPORT void vgaHWSeqReset(vgaHWPtr hwp, Bool start);
+extern _X_EXPORT void vgaHWRestoreFonts(ScrnInfoPtr scrninfp, vgaRegPtr restore);
+extern _X_EXPORT void vgaHWRestoreMode(ScrnInfoPtr scrninfp, vgaRegPtr restore);
+extern _X_EXPORT void vgaHWRestoreColormap(ScrnInfoPtr scrninfp, vgaRegPtr restore);
+extern _X_EXPORT void vgaHWRestore(ScrnInfoPtr scrninfp, vgaRegPtr restore, int flags);
+extern _X_EXPORT void vgaHWSaveFonts(ScrnInfoPtr scrninfp, vgaRegPtr save);
+extern _X_EXPORT void vgaHWSaveMode(ScrnInfoPtr scrninfp, vgaRegPtr save);
+extern _X_EXPORT void vgaHWSaveColormap(ScrnInfoPtr scrninfp, vgaRegPtr save);
+extern _X_EXPORT void vgaHWSave(ScrnInfoPtr scrninfp, vgaRegPtr save, int flags);
+extern _X_EXPORT Bool vgaHWInit(ScrnInfoPtr scrnp, DisplayModePtr mode);
+extern _X_EXPORT Bool vgaHWSetRegCounts(ScrnInfoPtr scrp, int numCRTC, int numSequencer,
                   	int numGraphics, int numAttribute);
-Bool vgaHWCopyReg(vgaRegPtr dst, vgaRegPtr src);
-Bool vgaHWGetHWRec(ScrnInfoPtr scrp);
-void vgaHWFreeHWRec(ScrnInfoPtr scrp);
-Bool vgaHWMapMem(ScrnInfoPtr scrp);
-void vgaHWUnmapMem(ScrnInfoPtr scrp);
-void vgaHWGetIOBase(vgaHWPtr hwp);
-void vgaHWLock(vgaHWPtr hwp);
-void vgaHWUnlock(vgaHWPtr hwp);
-void vgaHWEnable(vgaHWPtr hwp);
-void vgaHWDisable(vgaHWPtr hwp);
-void vgaHWDPMSSet(ScrnInfoPtr pScrn, int PowerManagementMode, int flags);
-Bool vgaHWHandleColormaps(ScreenPtr pScreen);
-void vgaHWddc1SetSpeed(ScrnInfoPtr pScrn, xf86ddcSpeed speed);
-CARD32 vgaHWHBlankKGA(DisplayModePtr mode, vgaRegPtr regp, int nBits, 
+extern _X_EXPORT Bool vgaHWCopyReg(vgaRegPtr dst, vgaRegPtr src);
+extern _X_EXPORT Bool vgaHWGetHWRec(ScrnInfoPtr scrp);
+extern _X_EXPORT void vgaHWFreeHWRec(ScrnInfoPtr scrp);
+extern _X_EXPORT Bool vgaHWMapMem(ScrnInfoPtr scrp);
+extern _X_EXPORT void vgaHWUnmapMem(ScrnInfoPtr scrp);
+extern _X_EXPORT void vgaHWGetIOBase(vgaHWPtr hwp);
+extern _X_EXPORT void vgaHWLock(vgaHWPtr hwp);
+extern _X_EXPORT void vgaHWUnlock(vgaHWPtr hwp);
+extern _X_EXPORT void vgaHWEnable(vgaHWPtr hwp);
+extern _X_EXPORT void vgaHWDisable(vgaHWPtr hwp);
+extern _X_EXPORT void vgaHWDPMSSet(ScrnInfoPtr pScrn, int PowerManagementMode, int flags);
+extern _X_EXPORT Bool vgaHWHandleColormaps(ScreenPtr pScreen);
+extern _X_EXPORT void vgaHWddc1SetSpeed(ScrnInfoPtr pScrn, xf86ddcSpeed speed);
+extern _X_EXPORT CARD32 vgaHWHBlankKGA(DisplayModePtr mode, vgaRegPtr regp, int nBits,
 	       unsigned int Flags);
-CARD32 vgaHWVBlankKGA(DisplayModePtr mode, vgaRegPtr regp, int nBits, 
+extern _X_EXPORT CARD32 vgaHWVBlankKGA(DisplayModePtr mode, vgaRegPtr regp, int nBits,
 	       unsigned int Flags);
-Bool vgaHWAllocDefaultRegs(vgaRegPtr regp);
+extern _X_EXPORT Bool vgaHWAllocDefaultRegs(vgaRegPtr regp);
 
-DDC1SetSpeedProc vgaHWddc1SetSpeedWeak(void);
-SaveScreenProcPtr vgaHWSaveScreenWeak(void);
+extern _X_EXPORT DDC1SetSpeedProc vgaHWddc1SetSpeedWeak(void);
+extern _X_EXPORT SaveScreenProcPtr vgaHWSaveScreenWeak(void);
 
 #endif /* _VGAHW_H */
