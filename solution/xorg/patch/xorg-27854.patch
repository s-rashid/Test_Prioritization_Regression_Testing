diff --git a/hw/darwin/quartz/xpr/xprScreen.c b/hw/darwin/quartz/xpr/xprScreen.c
index a5bccbf..67a0737 100644
--- a/hw/darwin/quartz/xpr/xprScreen.c
+++ b/hw/darwin/quartz/xpr/xprScreen.c
@@ -30,17 +30,17 @@
 #ifdef HAVE_XORG_CONFIG_H
 #include <xorg-config.h>
 #endif
-#include "quartzCommon.h"
-#include "quartz.h"
+#include "quartz/quartzCommon.h"
+#include "quartz/quartz.h"
 #include "xpr.h"
-#include "pseudoramiX.h"
+#include "quartz/pseudoramiX.h"
 #include "darwin.h"
 #include "rootless.h"
-#include "safeAlpha.h"
+#include "safeAlpha/safeAlpha.h"
 #include "dri.h"
 #include "globals.h"
 #include "Xplugin.h"
-#include "applewmExt.h"
+#include "quartz/applewmExt.h"
 
 #ifdef DAMAGE
 # include "damage.h"
@@ -49,7 +49,6 @@
 // Name of GLX bundle for native OpenGL
 static const char *xprOpenGLBundle = "glxCGL.bundle";
 
-
 /*
  * eventHandler
  *  Callback handler for Xplugin events.
@@ -100,7 +99,6 @@ eventHandler(unsigned int type, const void *arg,
     }
 }
 
-
 /*
  * displayScreenBounds
  *  Return the display ID for a particular display index.
@@ -119,7 +117,6 @@ displayAtIndex(int index)
         return kCGNullDirectDisplay;
 }
 
-
 /*
  * displayScreenBounds
  *  Return the bounds of a particular display.
@@ -142,7 +139,6 @@ displayScreenBounds(CGDirectDisplayID id)
     return frame;
 }
 
-
 /*
  * xprAddPseudoramiXScreens
  *  Add a single virtual screen encompassing all the physical screens
@@ -198,7 +194,6 @@ xprAddPseudoramiXScreens(int *x, int *y, int *width, int *height)
     xfree(displayList);
 }
 
-
 /*
  * xprDisplayInit
  *  Find number of CoreGraphics displays and initialize Xplugin.
@@ -221,9 +216,7 @@ xprDisplayInit(void)
         darwinScreensFound =  1;
 
     if (xp_init(XP_IN_BACKGROUND) != Success)
-    {
         FatalError("Could not initialize the Xplugin library.");
-    }
 
     xp_select_events(XP_EVENT_DISPLAY_CHANGED
                      | XP_EVENT_WINDOW_STATE_CHANGED
@@ -236,7 +229,6 @@ xprDisplayInit(void)
     xprAppleWMInit();
 }
 
-
 /*
  * xprAddScreen
  *  Init the framebuffer and record pixmap parameters for the screen.
@@ -306,7 +298,6 @@ xprAddScreen(int index, ScreenPtr pScreen)
     return TRUE;
 }
 
-
 /*
  * xprSetupScreen
  *  Setup the screen for rootless access.
@@ -343,7 +334,6 @@ xprSetupScreen(int index, ScreenPtr pScreen)
     return DRIFinishScreenInit(pScreen);
 }
 
-
 /*
  * xprUpdateScreen
  *  Update screen after configuation change.
@@ -360,7 +350,6 @@ xprUpdateScreen(ScreenPtr pScreen)
     RootlessUpdateScreenPixmap(pScreen);
 }
 
-
 /*
  * xprInitInput
  *  Finalize xpr specific setup.
@@ -377,7 +366,6 @@ xprInitInput(int argc, char **argv)
         AppleWMSetScreenOrigin(WindowTable[i]);
 }
 
-
 /*
  * Quartz display mode function list.
  */
@@ -403,7 +391,6 @@ static QuartzModeProcsRec xprModeProcs = {
     DRIDestroySurface
 };
 
-
 /*
  * QuartzModeBundleInit
  *  Initialize the display mode bundle after loading.
