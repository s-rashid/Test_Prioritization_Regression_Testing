diff --git a/hw/xfree86/xaa/xaaBitBlt.c b/hw/xfree86/xaa/xaaBitBlt.c
index 049dbfb..c1595c4 100644
--- a/hw/xfree86/xaa/xaaBitBlt.c
+++ b/hw/xfree86/xaa/xaaBitBlt.c
@@ -21,17 +21,15 @@
 #include "windowstr.h"
 #include "xaalocal.h"
 
-
 RegionPtr
-XAABitBlt(
-    DrawablePtr pSrcDrawable,
+XAABitBlt(DrawablePtr pSrcDrawable,
     DrawablePtr pDstDrawable,
     GC *pGC,
     int srcx, int srcy,
     int width, int height,
     int dstx, int dsty,
-    void (*doBitBlt)(DrawablePtr, DrawablePtr, GCPtr, RegionPtr, DDXPointPtr),
-    unsigned long bitPlane )
+          void (*doBitBlt) (DrawablePtr, DrawablePtr, GCPtr, RegionPtr,
+                            DDXPointPtr), unsigned long bitPlane)
 {
 
     RegionPtr prgnSrcClip = NULL; /* may be a new region, or just a copy */
@@ -55,8 +53,8 @@ XAABitBlt(
     origDest.y = dsty;
 
     if (pSrcDrawable->pScreen->SourceValidate) {
-	(*pSrcDrawable->pScreen->SourceValidate) (
-			pSrcDrawable, srcx, srcy, width, height,
+        (*pSrcDrawable->pScreen->SourceValidate) (pSrcDrawable, srcx, srcy,
+                                                  width, height,
 			pGC->subWindowMode);
     }
 
@@ -69,7 +67,8 @@ XAABitBlt(
 	    prgnSrcClip = pGC->pCompositeClip;
 	else
 	    fastClip = 1;
-    } else {	/* Window */
+    }
+    else {                      /* Window */
 	if (pGC->subWindowMode == IncludeInferiors) {
 	    if (!((WindowPtr) pSrcDrawable)->parent) {
 		/*
@@ -77,14 +76,17 @@ XAABitBlt(
 		 * IncludeInferiors mode; just like from a pixmap
 		 */
 		fastClip = 1;
-	    } else if ((pSrcDrawable == pDstDrawable) &&
+            }
+            else if ((pSrcDrawable == pDstDrawable) &&
 		(pGC->clientClipType == CT_NONE)) {
 		prgnSrcClip = pGC->pCompositeClip;
-	    } else {
+            }
+            else {
 		prgnSrcClip = NotClippedByChildren((WindowPtr)pSrcDrawable);
 		freeSrcClip = TRUE;
 	    }
-	} else {
+        }
+        else {
 	    prgnSrcClip = &((WindowPtr)pSrcDrawable)->clipList;
 	}
     }
@@ -117,7 +119,8 @@ XAABitBlt(
 	    fastBox.y2 = pSrcDrawable->y + (int) pSrcDrawable->height;
 	    fastExpose = 0;
 	}
-    } else {
+    }
+    else {
 	RegionInit(&rgnDst, &fastBox, 1);
 	RegionIntersect(&rgnDst, &rgnDst, prgnSrcClip);
     }
@@ -156,38 +159,43 @@ XAABitBlt(
         if (RegionNumRects(cclip) == 1) {
 	    BoxPtr pBox = RegionRects(cclip);
 
-	    if (fastBox.x1 < pBox->x1) fastBox.x1 = pBox->x1;
-	    if (fastBox.x2 > pBox->x2) fastBox.x2 = pBox->x2;
-	    if (fastBox.y1 < pBox->y1) fastBox.y1 = pBox->y1;
-	    if (fastBox.y2 > pBox->y2) fastBox.y2 = pBox->y2;
+            if (fastBox.x1 < pBox->x1)
+                fastBox.x1 = pBox->x1;
+            if (fastBox.x2 > pBox->x2)
+                fastBox.x2 = pBox->x2;
+            if (fastBox.y1 < pBox->y1)
+                fastBox.y1 = pBox->y1;
+            if (fastBox.y2 > pBox->y2)
+                fastBox.y2 = pBox->y2;
 
 	    /* Check to see if the region is empty */
 	    if (fastBox.x1 >= fastBox.x2 || fastBox.y1 >= fastBox.y2) {
 		RegionNull(&rgnDst);
-	    } else {
+            }
+            else {
 		RegionInit(&rgnDst, &fastBox, 1);
 	    }
-	} else {
+        }
+        else {
 	    /* We must turn off fastClip now, since we must create
 	       a full blown region.  It is intersected with the
 	       composite clip below. */
 	    fastClip = 0;
 	    RegionInit(&rgnDst, &fastBox,1);
 	}
-    } else {
+    }
+    else {
         RegionTranslate(&rgnDst, -dx, -dy);
     }
 
     if (!fastClip) {
-	RegionIntersect(&rgnDst, &rgnDst,
-				 pGC->pCompositeClip);
+        RegionIntersect(&rgnDst, &rgnDst, pGC->pCompositeClip);
     }
 
     /* Do bit blitting */
     numRects = RegionNumRects(&rgnDst);
     if (numRects && width && height) {
-	if(!(pptSrc = (DDXPointPtr)malloc(numRects *
-						  sizeof(DDXPointRec)))) {
+        if (!(pptSrc = (DDXPointPtr) malloc(numRects * sizeof(DDXPointRec)))) {
 	    RegionUninit(&rgnDst);
 	    if (freeSrcClip)
 		RegionDestroy(prgnSrcClip);
