diff --git a/mi/mizerclip.c b/mi/mizerclip.c
index fb1e25f..d05bf67 100644
--- a/mi/mizerclip.c
+++ b/mi/mizerclip.c
@@ -22,7 +22,6 @@ Except as contained in this notice, the name of The Open Group shall not be
 used in advertising or otherwise to promote the sale, use or other dealings
 in this Software without prior written authorization from The Open Group.
 
-
 Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts.
 
                         All Rights Reserved
@@ -409,8 +408,7 @@ miZeroClipLine(int xmin, int ymin, int xmax, int ymax,
                int *new_x1, int *new_y1, int *new_x2, int *new_y2,
                unsigned int adx, unsigned int ady,
                int *pt1_clipped, int *pt2_clipped,
-               int octant, unsigned int bias,
-               int oc1, int oc2)
+               int octant, unsigned int bias, int oc1, int oc2)
 {
     int swapped = 0;
     int clipDone = 0;
@@ -433,30 +431,25 @@ miZeroClipLine(int xmin, int ymin, int xmax, int ymax,
     xmajor = IsXMajorOctant(octant);
     bias = ((bias >> octant) & 1);
 
-    while (1)
-    {
-        if ((oc1 & oc2) != 0)			/* trivial reject */
-	{
+    while (1) {
+        if ((oc1 & oc2) != 0) { /* trivial reject */
 	    clipDone = -1;
 	    clip1 = oc1;
 	    clip2 = oc2;
 	    break;
 	}
-        else if ((oc1 | oc2) == 0)		/* trivial accept */
-        {
+        else if ((oc1 | oc2) == 0) {    /* trivial accept */
 	    clipDone = 1;
-	    if (swapped)
-	    {
+            if (swapped) {
 	        SWAPINT_PAIR(x1, y1, x2, y2);
 	        SWAPINT(clip1, clip2);
 	    }
 	    break;
         }
-        else			/* have to clip */
-        {
+        else {                  /* have to clip */
+
 	    /* only clip one point at a time */
-	    if (oc1 == 0)
-	    {
+            if (oc1 == 0) {
 	        SWAPINT_PAIR(x1, y1, x2, y2);
 	        SWAPINT_PAIR(x1_orig, y1_orig, x2_orig, y2_orig);
 	        SWAPINT(oc1, oc2);
@@ -465,20 +458,18 @@ miZeroClipLine(int xmin, int ymin, int xmax, int ymax,
 	    }
     
 	    clip1 |= oc1;
-	    if (oc1 & OUT_LEFT)
-	    {
+            if (oc1 & OUT_LEFT) {
 		negslope = IsYDecreasingOctant(octant);
 		utmp = xmin - x1_orig;
-		if (utmp <= 32767)		/* clip based on near endpt */
-		{
+                if (utmp <= 32767) {    /* clip based on near endpt */
 		    if (xmajor)
 			eqn = (swapped) ? EQN2 : EQN1;
 		    else
 			eqn = (swapped) ? EQN4 : EQN3;
 		    anchorval = y1_orig;
 		}
-		else				/* clip based on far endpt */
-		{
+                else {          /* clip based on far endpt */
+
 		    utmp = x2_orig - xmin;
 		    if (xmajor)
 			eqn = (swapped) ? EQN1B : EQN2B;
@@ -489,20 +480,18 @@ miZeroClipLine(int xmin, int ymin, int xmax, int ymax,
 		}
 		x1 = xmin;
 	    }
-	    else if (oc1 & OUT_ABOVE)
-	    {
+            else if (oc1 & OUT_ABOVE) {
 		negslope = IsXDecreasingOctant(octant);
 		utmp = ymin - y1_orig;
-		if (utmp <= 32767)		/* clip based on near endpt */
-		{
+                if (utmp <= 32767) {    /* clip based on near endpt */
 		    if (xmajor)
 			eqn = (swapped) ? EQN6 : EQN5;
 		    else
 			eqn = (swapped) ? EQN8 : EQN7;
 		    anchorval = x1_orig;
 		}
-		else				/* clip based on far endpt */
-		{
+                else {          /* clip based on far endpt */
+
 		    utmp = y2_orig - ymin;
 		    if (xmajor)
 			eqn = (swapped) ? EQN5B : EQN6B;
@@ -513,20 +502,18 @@ miZeroClipLine(int xmin, int ymin, int xmax, int ymax,
 		}
 		y1 = ymin;
 	    }
-	    else if (oc1 & OUT_RIGHT)
-	    {
+            else if (oc1 & OUT_RIGHT) {
 		negslope = IsYDecreasingOctant(octant);
 		utmp = x1_orig - xmax;
-		if (utmp <= 32767)		/* clip based on near endpt */
-		{
+                if (utmp <= 32767) {    /* clip based on near endpt */
 		    if (xmajor)
 			eqn = (swapped) ? EQN2 : EQN1;
 		    else
 			eqn = (swapped) ? EQN4 : EQN3;
 		    anchorval = y1_orig;
 		}
-		else				/* clip based on far endpt */
-		{
+                else {          /* clip based on far endpt */
+
 		    /*
 		     * Technically since the equations can handle
 		     * utmp == 32768, this overflow code isn't
@@ -544,20 +531,18 @@ miZeroClipLine(int xmin, int ymin, int xmax, int ymax,
 		}
 		x1 = xmax;
 	    }
-	    else if (oc1 & OUT_BELOW)
-	    {
+            else if (oc1 & OUT_BELOW) {
 		negslope = IsXDecreasingOctant(octant);
 		utmp = y1_orig - ymax;
-		if (utmp <= 32767)		/* clip based on near endpt */
-		{
+                if (utmp <= 32767) {    /* clip based on near endpt */
 		    if (xmajor)
 			eqn = (swapped) ? EQN6 : EQN5;
 		    else
 			eqn = (swapped) ? EQN8 : EQN7;
 		    anchorval = x1_orig;
 		}
-		else				/* clip based on far endpt */
-		{
+                else {          /* clip based on far endpt */
+
 		    /*
 		     * Technically since the equations can handle
 		     * utmp == 32768, this overflow code isn't
@@ -589,8 +574,7 @@ miZeroClipLine(int xmin, int ymin, int xmax, int ymax,
 		    utmp -= adx;
 		else
 		    utmp += adx;
-	    else /* (eqn & T_DYNOTX) */
-		if (eqn & T_SUBDXORY)
+            else /* (eqn & T_DYNOTX) */ if (eqn & T_SUBDXORY)
 		    utmp -= ady;
 		else
 		    utmp += ady;
