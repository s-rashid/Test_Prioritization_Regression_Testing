diff --git a/Xi/xiquerypointer.c b/Xi/xiquerypointer.c
index d01a813..a2e7442 100644
--- a/Xi/xiquerypointer.c
+++ b/Xi/xiquerypointer.c
@@ -84,24 +84,19 @@ ProcXIQueryPointer(ClientPtr client)
     REQUEST_SIZE_MATCH(xXIQueryPointerReq);
 
     rc = dixLookupDevice(&pDev, stuff->deviceid, client, DixReadAccess);
-    if (rc != Success)
-    {
+    if (rc != Success) {
         client->errorValue = stuff->deviceid;
         return rc;
     }
 
-    if (pDev->valuator == NULL || IsKeyboardDevice(pDev) ||
-        (!IsMaster(pDev) && !IsFloating(pDev))) /* no attached devices */
-    {
+    if (pDev->valuator == NULL || IsKeyboardDevice(pDev) || (!IsMaster(pDev) && !IsFloating(pDev))) {   /* no attached devices */
         client->errorValue = stuff->deviceid;
         return BadDevice;
     }
 
     rc = dixLookupWindow(&pWin, stuff->win, client, DixGetAttrAccess);
-    if (rc != Success)
-    {
-        SendErrorToClient(client, IReqCode, X_XIQueryPointer,
-                stuff->win, rc);
+    if (rc != Success) {
+        SendErrorToClient(client, IReqCode, X_XIQueryPointer, stuff->win, rc);
         return Success;
     }
 
@@ -125,8 +120,7 @@ ProcXIQueryPointer(ClientPtr client)
     rep.root_y = FP1616(pSprite->hot.y, 0);
     rep.child = None;
 
-    if (kbd)
-    {
+    if (kbd) {
         state = &kbd->key->xkbInfo->state;
         rep.mods.base_mods = state->base_mods;
         rep.mods.latched_mods = state->latched_mods;
@@ -137,10 +131,11 @@ ProcXIQueryPointer(ClientPtr client)
         rep.group.locked_group = state->locked_group;
     }
 
-    if (pDev->button)
-    {
+    if (pDev->button) {
         int i, down;
-        rep.buttons_len = bytes_to_int32(bits_to_bytes(pDev->button->numButtons));
+
+        rep.buttons_len =
+            bytes_to_int32(bits_to_bytes(pDev->button->numButtons));
         rep.length += rep.buttons_len;
         buttons_size = rep.buttons_len * 4;
         buttons = calloc(1, buttons_size);
@@ -149,30 +144,27 @@ ProcXIQueryPointer(ClientPtr client)
 
         down = pDev->button->buttonsDown;
 
-        for (i = 0; i < pDev->button->numButtons && down; i++)
-        {
-            if (BitIsOn(pDev->button->down, i))
-            {
+        for (i = 0; i < pDev->button->numButtons && down; i++) {
+            if (BitIsOn(pDev->button->down, i)) {
                 SetBit(buttons, i);
                 down--;
             }
         }
-    } else
+    }
+    else
         rep.buttons_len = 0;
 
-    if (pSprite->hot.pScreen == pWin->drawable.pScreen)
-    {
+    if (pSprite->hot.pScreen == pWin->drawable.pScreen) {
         rep.same_screen = xTrue;
         rep.win_x = FP1616(pSprite->hot.x - pWin->drawable.x, 0);
         rep.win_y = FP1616(pSprite->hot.y - pWin->drawable.y, 0);
         for (t = pSprite->win; t; t = t->parent)
-            if (t->parent == pWin)
-            {
+            if (t->parent == pWin) {
                 rep.child = t->drawable.id;
                 break;
             }
-    } else
-    {
+    }
+    else {
         rep.same_screen = xFalse;
         rep.win_x = 0;
         rep.win_y = 0;
@@ -182,8 +174,7 @@ ProcXIQueryPointer(ClientPtr client)
     if(!noPanoramiXExtension) {
         rep.root_x += FP1616(screenInfo.screens[0]->x, 0);
         rep.root_y += FP1616(screenInfo.screens[0]->y, 0);
-        if (stuff->win == rep.root)
-        {
+        if (stuff->win == rep.root) {
             rep.win_x += FP1616(screenInfo.screens[0]->x, 0);
             rep.win_y += FP1616(screenInfo.screens[0]->y, 0);
         }
@@ -207,8 +198,7 @@ ProcXIQueryPointer(ClientPtr client)
  */
 
 void
-SRepXIQueryPointer(ClientPtr client, int size,
-                   xXIQueryPointerReply * rep)
+SRepXIQueryPointer(ClientPtr client, int size, xXIQueryPointerReply * rep)
 {
     swaps(&rep->sequenceNumber);
     swapl(&rep->length);
@@ -222,4 +212,3 @@ SRepXIQueryPointer(ClientPtr client, int size,
 
     WriteToClient(client, size, (char *)rep);
 }
-
