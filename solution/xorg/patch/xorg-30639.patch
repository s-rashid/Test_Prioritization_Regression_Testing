diff --git a/GL/glx/glxdri.c b/GL/glx/glxdri.c
index db564c0..051784c 100644
--- a/GL/glx/glxdri.c
+++ b/GL/glx/glxdri.c
@@ -375,7 +375,7 @@ __glXDRIbindTexImage(__GLXcontext *baseContext,
     RegionPtr	pRegion = NULL;
     PixmapPtr	pixmap;
     int		w, h, bpp, override = 0;
-    GLenum	target, format, type;
+    GLenum	format, type;
     ScreenPtr pScreen = glxPixmap->pScreen;
     __GLXDRIscreen * const screen =
 	(__GLXDRIscreen *) __glXgetActiveScreen(pScreen->myNum);
@@ -384,11 +384,6 @@ __glXDRIbindTexImage(__GLXcontext *baseContext,
     w = pixmap->drawable.width;
     h = pixmap->drawable.height;
 
-    if (h & (h - 1) || w & (w - 1))
-	target = GL_TEXTURE_RECTANGLE_ARB;
-    else
-	target = GL_TEXTURE_2D;
-
     if (screen->texOffsetStart && screen->driScreen.setTexOffset) {
 	__GLXpixmap **texOffsetOverride = screen->texOffsetOverride;
 	int i, firstEmpty = 16, texname;
@@ -416,7 +411,7 @@ alreadyin:
 
 	glxPixmap->pDRICtx = &((__GLXDRIcontext*)baseContext)->driContext;
 
-	CALL_GetIntegerv(GET_DISPATCH(), (target == GL_TEXTURE_2D ?
+	CALL_GetIntegerv(GET_DISPATCH(), (glxPixmap->target == GL_TEXTURE_2D ?
 					  GL_TEXTURE_BINDING_2D :
 					  GL_TEXTURE_BINDING_RECTANGLE_NV,
 					  &texname));
@@ -481,7 +476,7 @@ nooverride:
 					   pixmap->drawable.y) );
 
 	CALL_TexImage2D( GET_DISPATCH(),
-			 (target,
+			 (glxPixmap->target,
 			  0,
 			  bpp == 4 ? 4 : 3,
 			  pixmap->drawable.width,
@@ -511,7 +506,7 @@ nooverride:
 					       pixmap->drawable.y + p[i].y1) );
 
 	    CALL_TexSubImage2D( GET_DISPATCH(),
-				(target,
+				(glxPixmap->target,
 				 0,
 				 p[i].x1, p[i].y1,
 				 p[i].x2 - p[i].x1, p[i].y2 - p[i].y1,
