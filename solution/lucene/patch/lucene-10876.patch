diff --git a/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java b/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
index 552801a..869046e 100644
--- a/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
+++ b/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -37,6 +37,7 @@ import org.apache.lucene.util.OpenBitSet;
 import java.io.IOException;
 import java.net.URL;
 import java.util.*;
+import java.util.concurrent.atomic.AtomicLong;
 
 import org.apache.solr.search.function.ValueSource;
 import org.slf4j.Logger;
@@ -51,6 +52,12 @@ import org.slf4j.LoggerFactory;
  * @since solr 0.9
  */
 public class SolrIndexSearcher extends IndexSearcher implements SolrInfoMBean {
+
+  // These should *only* be used for debugging or monitoring purposes
+  public static final AtomicLong numOpens = new AtomicLong();
+  public static final AtomicLong numCloses = new AtomicLong();
+
+
   private static Logger log = LoggerFactory.getLogger(SolrIndexSearcher.class);
   private final SolrCore core;
   private final IndexSchema schema;
@@ -191,6 +198,9 @@ public class SolrIndexSearcher extends IndexSearcher implements SolrInfoMBean {
     optimizer = solrConfig.filtOptEnabled ? new LuceneQueryOptimizer(solrConfig.filtOptCacheSize,solrConfig.filtOptThreshold) : null;
 
     fieldNames = r.getFieldNames(IndexReader.FieldOption.ALL);
+
+    // do this at the end since an exception in the constructor means we won't close    
+    numOpens.incrementAndGet();
   }
 
 
@@ -239,6 +249,9 @@ public class SolrIndexSearcher extends IndexSearcher implements SolrInfoMBean {
     for (SolrCache cache : cacheList) {
       cache.close();
     }
+
+    // do this at the end so it only gets done if there are no exceptions
+    numCloses.incrementAndGet();
   }
 
   /** Direct access to the IndexReader used by this searcher */
