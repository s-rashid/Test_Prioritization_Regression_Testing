diff --git a/lucene/src/java/org/apache/lucene/index/MultiTermsEnum.java b/lucene/src/java/org/apache/lucene/index/MultiTermsEnum.java
index c2a68c5..02e21b1 100644
--- a/lucene/src/java/org/apache/lucene/index/MultiTermsEnum.java
+++ b/lucene/src/java/org/apache/lucene/index/MultiTermsEnum.java
@@ -91,6 +91,13 @@ public final class MultiTermsEnum extends TermsEnum {
   }
 
   @Override
+  public void cacheCurrentTerm() throws IOException {
+    for(int i=0;i<numTop;i++) {
+      top[i].terms.cacheCurrentTerm();
+    }
+  }
+
+  @Override
   public Comparator<BytesRef> getComparator() {
     return termComp;
   }
@@ -213,7 +220,7 @@ public final class MultiTermsEnum extends TermsEnum {
     throw new UnsupportedOperationException();
   }
 
-  private final void pullTop() {
+  private void pullTop() {
     // extract all subs from the queue that have the same
     // top term
     assert numTop == 0;
@@ -226,7 +233,7 @@ public final class MultiTermsEnum extends TermsEnum {
     current = top[0].current;
   }
 
-  private final void pushTop() throws IOException {
+  private void pushTop() throws IOException {
     // call next() on each top, and put back into queue
     for(int i=0;i<numTop;i++) {
       top[i].current = top[i].terms.next();
@@ -418,7 +425,7 @@ public final class MultiTermsEnum extends TermsEnum {
     }
 
     @Override
-    protected final boolean lessThan(TermsEnumWithSlice termsA, TermsEnumWithSlice termsB) {
+    protected boolean lessThan(TermsEnumWithSlice termsA, TermsEnumWithSlice termsB) {
       final int cmp = termComp.compare(termsA.current, termsB.current);
       if (cmp != 0) {
         return cmp < 0;
