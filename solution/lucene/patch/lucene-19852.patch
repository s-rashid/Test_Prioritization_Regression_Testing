diff --git a/solr/src/test/org/apache/solr/response/TestCSVResponseWriter.java b/solr/src/test/org/apache/solr/response/TestCSVResponseWriter.java
index 3b9ecac..4cef0b6 100644
--- a/solr/src/test/org/apache/solr/response/TestCSVResponseWriter.java
+++ b/solr/src/test/org/apache/solr/response/TestCSVResponseWriter.java
@@ -22,6 +22,7 @@ import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.util.DateUtil;
 import org.apache.solr.request.SolrQueryRequest;
+import org.apache.solr.search.ReturnFields;
 import org.junit.*;
 
 import java.io.StringWriter;
@@ -128,19 +129,19 @@ public class TestCSVResponseWriter extends SolrTestCaseJ4 {
     rsp.add("response", sdl);
     QueryResponseWriter w = new CSVResponseWriter();
     
-    rsp.setReturnFields( ReturnFields.getReturnFields("id,foo_s", req) );
+    rsp.setReturnFields( new ReturnFields("id,foo_s", req) );
     StringWriter buf = new StringWriter();
     w.write(buf, req, rsp);
     assertEquals("id,foo_s\n1,hi\n2,\n", buf.toString());
 
     // try scores
-    rsp.setReturnFields( ReturnFields.getReturnFields("id,score,foo_s", req) );
+    rsp.setReturnFields( new ReturnFields("id,score,foo_s", req) );
     buf = new StringWriter();
     w.write(buf, req, rsp);
     assertEquals("id,score,foo_s\n1,2.718,hi\n2,89.83,\n", buf.toString());
 
     // get field values from docs... should be ordered and not include score unless requested
-    rsp.setReturnFields( ReturnFields.getReturnFields("*", req) );
+    rsp.setReturnFields( new ReturnFields("*", req) );
     buf = new StringWriter();
     w.write(buf, req, rsp);
     assertEquals("id,foo_i,foo_s,foo_l,foo_b,foo_f,foo_d,foo_dt,v_ss,v2_ss\n" +
@@ -150,7 +151,7 @@ public class TestCSVResponseWriter extends SolrTestCaseJ4 {
     
 
     // get field values and scores - just check that the scores are there... we don't guarantee where
-    rsp.setReturnFields( ReturnFields.getReturnFields("*,score", req) );
+    rsp.setReturnFields( new ReturnFields("*,score", req) );
     buf = new StringWriter();
     w.write(buf, req, rsp);
     String s = buf.toString();
