diff --git a/lucene/src/java/org/apache/lucene/index/DocFieldProcessor.java b/lucene/src/java/org/apache/lucene/index/DocFieldProcessor.java
index 5ca6ba2..f4ebdc6 100644
--- a/lucene/src/java/org/apache/lucene/index/DocFieldProcessor.java
+++ b/lucene/src/java/org/apache/lucene/index/DocFieldProcessor.java
@@ -79,13 +79,6 @@ final class DocFieldProcessor extends DocConsumer {
     // FreqProxTermsWriter does this with
     // FieldInfo.storePayload.
     final String fileName = IndexFileNames.segmentFileName(state.segmentName, "", IndexFileNames.FIELD_INFOS_EXTENSION);
-
-    // If this segment only has docs that hit non-aborting exceptions,
-    // then no term vectors files will have been written; therefore we
-    // need to update the fieldInfos and clear the term vectors bits
-    if (!state.hasVectors) {
-      state.fieldInfos.clearVectors();
-    }
     state.fieldInfos.write(state.directory, fileName);
   }
 
@@ -195,7 +188,7 @@ final class DocFieldProcessor extends DocConsumer {
         // needs to be more "pluggable" such that if I want
         // to have a new "thing" my Fields can do, I can
         // easily add it
-        FieldInfo fi = fieldInfos.add(fieldName, field.isIndexed(), field.isTermVectorStored(),
+        FieldInfo fi = fieldInfos.addOrUpdate(fieldName, field.isIndexed(), field.isTermVectorStored(),
                                       field.isStorePositionWithTermVector(), field.isStoreOffsetWithTermVector(),
                                       field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());
 
@@ -207,7 +200,7 @@ final class DocFieldProcessor extends DocConsumer {
         if (totalFieldCount >= fieldHash.length/2)
           rehash();
       } else {
-        fp.fieldInfo.update(field.isIndexed(), field.isTermVectorStored(),
+        fieldInfos.addOrUpdate(fp.fieldInfo.name, field.isIndexed(), field.isTermVectorStored(),
                             field.isStorePositionWithTermVector(), field.isStoreOffsetWithTermVector(),
                             field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());
       }
