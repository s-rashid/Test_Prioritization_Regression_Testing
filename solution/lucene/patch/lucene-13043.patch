diff --git a/lucene/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/src/java/org/apache/lucene/index/IndexWriter.java
index 3c9eb6a..7262c50 100644
--- a/lucene/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/src/java/org/apache/lucene/index/IndexWriter.java
@@ -1047,8 +1047,10 @@ public class IndexWriter implements Closeable {
 
       mergePolicy.close();
 
-      finishMerges(waitForMerges);
-      stopMerges = true;
+      synchronized(this) {
+        finishMerges(waitForMerges);
+        stopMerges = true;
+      }
 
       mergeScheduler.close();
 
@@ -1251,10 +1253,12 @@ public class IndexWriter implements Closeable {
           synchronized (this) {
             // If docWriter has some aborted files that were
             // never incref'd, then we clean them up here
+            deleter.checkpoint(segmentInfos, false);
             if (docWriter != null) {
               final Collection<String> files = docWriter.abortedFiles();
-              if (files != null)
+              if (files != null) {
                 deleter.deleteNewFiles(files);
+              }
             }
           }
         }
@@ -1879,7 +1883,14 @@ public class IndexWriter implements Closeable {
     }
 
     try {
-      finishMerges(false);
+      synchronized(this) {
+        finishMerges(false);
+        stopMerges = true;
+      }
+
+      if (infoStream != null ) {
+        message("rollback: done finish merges");
+      }
 
       // Must pre-close these two, in case they increment
       // changeCount so that we can then set it to false
@@ -2230,7 +2241,8 @@ public class IndexWriter implements Closeable {
       int docCount = merger.merge();                // merge 'em
       
       SegmentInfo info = new SegmentInfo(mergedName, docCount, directory,
-          false, -1, null, false, merger.hasProx(), merger.getSegmentCodecs());
+                                         false, -1, null, false, merger.hasProx(), merger.getSegmentCodecs(),
+                                         merger.hasVectors());
       setDiagnostics(info, "addIndexes(IndexReader...)");
 
       boolean useCompoundFile;
@@ -2541,8 +2553,16 @@ public class IndexWriter implements Closeable {
       return false;
     } finally {
       flushControl.clearFlushPending();
-      if (!success && infoStream != null) {
-        message("hit exception during flush");
+      if (!success) {
+        if (infoStream != null) {
+          message("hit exception during flush");
+        }
+        if (docWriter != null) {
+          final Collection<String> files = docWriter.abortedFiles();
+          if (files != null) {
+            deleter.deleteNewFiles(files);
+          }
+        }
       }
     }
   }
@@ -2928,6 +2948,7 @@ public class IndexWriter implements Closeable {
 
     boolean mergeDocStores = false;
     boolean doFlushDocStore = false;
+    boolean hasVectors = false;
     final String currentDocStoreSegment = docWriter.getDocStoreSegment();
 
     // Test each segment to be merged: check if we need to
@@ -2939,6 +2960,10 @@ public class IndexWriter implements Closeable {
       if (si.hasDeletions())
         mergeDocStores = true;
 
+      if (si.getHasVectors()) {
+        hasVectors = true;
+      }
+
       // If it has its own (private) doc stores we must
       // merge the doc stores
       if (-1 == si.getDocStoreOffset())
@@ -3014,6 +3039,7 @@ public class IndexWriter implements Closeable {
       updatePendingMerges(1, false);
     }
 
+    merge.hasVectors = hasVectors;
     merge.mergeDocStores = mergeDocStores;
 
     // Bind a new segment name here so even with
@@ -3024,8 +3050,8 @@ public class IndexWriter implements Closeable {
                                  docStoreSegment,
                                  docStoreIsCompoundFile,
                                  false,
-                                 null);
-
+                                 null,
+                                 false);
 
     Map<String,String> details = new HashMap<String,String>();
     details.put("optimize", Boolean.toString(merge.optimize));
@@ -3033,6 +3059,10 @@ public class IndexWriter implements Closeable {
     details.put("mergeDocStores", Boolean.toString(mergeDocStores));
     setDiagnostics(merge.info, "merge", details);
 
+    if (infoStream != null) {
+      message("merge seg=" + merge.info.name + " mergeDocStores=" + mergeDocStores);
+    }
+
     // Also enroll the merged segment into mergingSegments;
     // this prevents it from getting selected for a merge
     // after our merge is done but while we are building the
@@ -3252,6 +3282,7 @@ public class IndexWriter implements Closeable {
 
       // Record which codec was used to write the segment
       merge.info.setSegmentCodecs(merger.getSegmentCodecs());
+      merge.info.setHasVectors(merger.hasVectors() || merge.hasVectors);
 
       if (infoStream != null) {
         message("merge segmentCodecs=" + merger.getSegmentCodecs());
@@ -3446,7 +3477,7 @@ public class IndexWriter implements Closeable {
       // are called, deleter should know about every
       // file referenced by the current head
       // segmentInfos:
-      assert deleter.exists(fileName) : "IndexFileDeleter doesn't know about file " + fileName;
+      assert deleter.exists(fileName): "IndexFileDeleter doesn't know about file " + fileName;
     }
     return true;
   }
