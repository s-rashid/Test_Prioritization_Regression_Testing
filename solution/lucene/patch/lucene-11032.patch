diff --git a/lucene/src/test/org/apache/lucene/util/LuceneTestCase.java b/lucene/src/test/org/apache/lucene/util/LuceneTestCase.java
index 09f82a5..4dfb2de 100644
--- a/lucene/src/test/org/apache/lucene/util/LuceneTestCase.java
+++ b/lucene/src/test/org/apache/lucene/util/LuceneTestCase.java
@@ -901,104 +901,4 @@ public abstract class LuceneTestCase extends Assert {
       }
     }
   }
-  
-  /**
-   * Test runner for Lucene test classes that test Locale-sensitive behavior.
-   * <p>
-   * This class will run tests under the default Locale, but then will also run
-   * tests under all available JVM locales. This is helpful to ensure tests will
-   * not fail under a different environment.
-   * </p>
-   */
-  public static class LocalizedTestCaseRunner extends LuceneTestCaseRunner {
-    /**
-     * Before changing the default Locale, save the default Locale here so
-     * that it can be restored.
-     */
-    private final Locale defaultLocale = Locale.getDefault();
-    
-    /**
-     * The locale being used as the system default Locale
-     */
-    private Locale locale;
-    
-    private final RunListener listener = new RunListener() {
-      @Override
-      public void testFailure(Failure failure) throws Exception {
-        super.testFailure(failure);
-        String methodName = failure.getDescription().getMethodName();
-        if (locale.equals(defaultLocale))
-          System.out.println("Test failure of '" + methodName
-            + "' occurred with the default Locale " + locale);
-        else
-          System.out.println("Test failure of '" + methodName
-            + "' occurred under a different Locale " + locale);
-      }
-    };
-    
-    public LocalizedTestCaseRunner(Class<?> clazz) throws InitializationError {
-      super(clazz);
-    }
-// FIXME see LUCENE-2652
-//    @Override
-//    protected void runChild(FrameworkMethod arg0, RunNotifier arg1) {
-//      arg1.addListener(listener);
-//      locale = defaultLocale;
-//      super.runChild(arg0, arg1);
-//      
-//      for (Locale other : Locale.getAvailableLocales()) {
-//        locale = other;
-//        Locale.setDefault(locale);
-//        super.runChild(arg0, arg1);
-//      }
-//      
-//      Locale.setDefault(defaultLocale);
-//    }
-  }
-  
-  /**
-   * Test runner for Lucene test classes that run across all core codecs.
-   */
-  public static class MultiCodecTestCaseRunner extends LuceneTestCaseRunner {
-    /**
-     * Before changing the default Codec, save the default Codec here so
-     * that it can be restored.
-     */
-    private final String defaultCodec = CodecProvider.getDefaultCodec();
-    
-    /**
-     * The Codec being used as the system default
-     */
-    private String codec;
-    
-    private final RunListener listener = new RunListener() {
-      @Override
-      public void testFailure(Failure failure) throws Exception {
-        super.testFailure(failure);
-        String methodName = failure.getDescription().getMethodName();
-        System.out.println("Test failure of '" + methodName
-          + "' occurred with codec " + codec);
-      }
-    };
-    
-    public MultiCodecTestCaseRunner(Class<?> clazz) throws InitializationError {
-      super(clazz);
-    }
-    
-    @Override
-    protected void runChild(FrameworkMethod arg0, RunNotifier arg1) {
-      arg1.addListener(listener);
-      // If we're running w/ PreFlex codec we must swap in the
-      // test-only PreFlexRW codec (since core PreFlex can
-      // only read segments):
-      swapCodec(new PreFlexRWCodec());
-      for (String other : CodecProvider.CORE_CODECS) {
-        codec = other;
-        CodecProvider.setDefaultCodec(codec);
-        super.runChild(arg0, arg1);
-      }
-      CodecProvider.setDefaultCodec(defaultCodec);
-    }
-
-  }
 }
