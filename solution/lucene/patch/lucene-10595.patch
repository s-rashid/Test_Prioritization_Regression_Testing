diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer.java
index 783d7e7..bd37053 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer.java
@@ -16,8 +16,6 @@
  */
 package org.apache.solr.handler.dataimport;
 
-import org.apache.solr.SolrTestCaseJ4;
-import org.junit.Assert;
 import org.junit.Test;
 
 import java.text.SimpleDateFormat;
@@ -31,40 +29,37 @@ import java.util.*;
  * @version $Id$
  * @since solr 1.3
  */
-public class TestDateFormatTransformer extends SolrTestCaseJ4 {
+public class TestDateFormatTransformer extends AbstractDataImportHandlerTestCase {
 
   @Test
   @SuppressWarnings("unchecked")
   public void testTransformRow_SingleRow() throws Exception {
     List fields = new ArrayList();
-    fields.add(AbstractDataImportHandlerTestCase.createMap(DataImporter.COLUMN,
-            "lastModified"));
-    fields.add(AbstractDataImportHandlerTestCase.createMap(DataImporter.COLUMN,
+    fields.add(createMap(DataImporter.COLUMN, "lastModified"));
+    fields.add(createMap(DataImporter.COLUMN,
             "dateAdded", RegexTransformer.SRC_COL_NAME, "lastModified",
             DateFormatTransformer.DATE_TIME_FMT, "MM/dd/yyyy"));
 
     SimpleDateFormat format = new SimpleDateFormat("MM/dd/yyyy");
     Date now = format.parse(format.format(new Date()));
 
-    Map row = AbstractDataImportHandlerTestCase.createMap("lastModified", format
-            .format(now));
+    Map row = createMap("lastModified", format.format(now));
 
     VariableResolverImpl resolver = new VariableResolverImpl();
     resolver.addNamespace("e", row);
 
-    Context context = AbstractDataImportHandlerTestCase.getContext(null, resolver,
+    Context context = getContext(null, resolver,
             null, Context.FULL_DUMP, fields, null);
     new DateFormatTransformer().transformRow(row, context);
-    Assert.assertEquals(now, row.get("dateAdded"));
+    assertEquals(now, row.get("dateAdded"));
   }
 
   @Test
   @SuppressWarnings("unchecked")
   public void testTransformRow_MultipleRows() throws Exception {
     List fields = new ArrayList();
-    fields.add(AbstractDataImportHandlerTestCase.createMap(DataImporter.COLUMN,
-            "lastModified"));
-    fields.add(AbstractDataImportHandlerTestCase.createMap(DataImporter.COLUMN,
+    fields.add(createMap(DataImporter.COLUMN, "lastModified"));
+    fields.add(createMap(DataImporter.COLUMN,
             "dateAdded", RegexTransformer.SRC_COL_NAME, "lastModified",
             DateFormatTransformer.DATE_TIME_FMT, "MM/dd/yyyy hh:mm:ss.SSS"));
 
@@ -81,13 +76,13 @@ public class TestDateFormatTransformer extends SolrTestCaseJ4 {
     VariableResolverImpl resolver = new VariableResolverImpl();
     resolver.addNamespace("e", row);
 
-    Context context = AbstractDataImportHandlerTestCase.getContext(null, resolver,
+    Context context = getContext(null, resolver,
             null, Context.FULL_DUMP, fields, null);
     new DateFormatTransformer().transformRow(row, context);
     List output = new ArrayList();
     output.add(now1);
     output.add(now2);
-    Assert.assertEquals(output, row.get("dateAdded"));
+    assertEquals(output, row.get("dateAdded"));
   }
 
 }
