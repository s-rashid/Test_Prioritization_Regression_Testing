diff --git a/lucene/src/test/org/apache/lucene/index/TestNRTThreads.java b/lucene/src/test/org/apache/lucene/index/TestNRTThreads.java
index 444bcc6..270fbe6 100644
--- a/lucene/src/test/org/apache/lucene/index/TestNRTThreads.java
+++ b/lucene/src/test/org/apache/lucene/index/TestNRTThreads.java
@@ -405,30 +405,30 @@ public class TestNRTThreads extends LuceneTestCase {
         for(int thread=0;thread<NUM_SEARCH_THREADS;thread++) {
           searchThreads[thread] = new Thread() {
               @Override
-                public void run() {
+              public void run() {
                 try {
                   TermsEnum termsEnum = MultiFields.getTerms(s.getIndexReader(), "body").iterator();
                   int seenTermCount = 0;
                   int shift;
                   int trigger;
-                  if (totTermCount.get() == 0) {
+                  if (totTermCount.get() < 10) {
                     shift = 0;
                     trigger = 1;
                   } else {
-                    shift = random.nextInt(totTermCount.get()/10);
                     trigger = totTermCount.get()/10;
+                    shift = random.nextInt(trigger);
                   }
                   while(System.currentTimeMillis() < searchStopTime) {
                     BytesRef term = termsEnum.next();
                     if (term == null) {
-                      if (seenTermCount == 0) {
+                      if (seenTermCount < 10) {
                         break;
                       }
                       totTermCount.set(seenTermCount);
                       seenTermCount = 0;
                       trigger = totTermCount.get()/10;
                       //System.out.println("trigger " + trigger);
-                      shift = random.nextInt(totTermCount.get()/10);
+                      shift = random.nextInt(trigger);
                       termsEnum.seek(new BytesRef(""));
                       continue;
                     }
