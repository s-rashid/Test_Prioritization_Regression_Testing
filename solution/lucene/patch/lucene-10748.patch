diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta.java
index 2adcf04..9daa740 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta.java
@@ -16,10 +16,11 @@
  */
 package org.apache.solr.handler.dataimport;
 
+import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 
 import java.util.ArrayList;
-import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
 
@@ -39,27 +40,18 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
 
   private static final String DELETED_PK_QUERY = "select id from x where last_modified > NOW AND deleted='true'";
 
-  @Override
-  public String getSchemaFile() {
-    return "dataimport-schema.xml";
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    initCore("dataimport-solrconfig.xml", "dataimport-schema.xml");
   }
 
-  @Override
-  public String getSolrConfigFile() {
-    return "dataimport-solrconfig.xml";
-  }
-
-  @Override
+  @Before @Override
   public void setUp() throws Exception {
     super.setUp();
+    clearIndex();
+    assertU(commit());
   }
 
-  @Override
-  public void tearDown() throws Exception {
-    super.tearDown();
-  }
-
-
   @SuppressWarnings("unchecked")
   private void add1document() throws Exception {
     List parentRow = new ArrayList();
@@ -71,7 +63,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
     MockDataSource.setIterator("select * from y where y.A='1'", childRow
         .iterator());
 
-    super.runFullImport(dataConfig_delta);
+    runFullImport(dataConfig_delta);
 
     assertQ(req("*:* OR add1document"), "//*[@numFound='1']");
     assertQ(req("id:1"), "//*[@numFound='1']");
@@ -102,7 +94,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
     MockDataSource.setIterator("select * from y where y.A='1'", childRow
         .iterator());
 
-    super.runDeltaImport(dataConfig_delta);
+    runDeltaImport(dataConfig_delta);
     assertQ(req("*:* OR testCompositePk_DeltaImport_delete"), "//*[@numFound='0']");
   }
 
@@ -126,7 +118,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
     MockDataSource.setIterator("select * from y where y.A='1'", childRow
         .iterator());
 
-    super.runDeltaImport(dataConfig_delta);
+    runDeltaImport(dataConfig_delta);
 
     assertQ(req("*:* OR testCompositePk_DeltaImport_empty"), "//*[@numFound='1']");
     assertQ(req("id:1"), "//*[@numFound='1']");
@@ -137,7 +129,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
   
   @Test
   @SuppressWarnings("unchecked")
-  public void XtestCompositePk_DeltaImport_replace_delete() throws Exception {
+  public void testCompositePk_DeltaImport_replace_delete() throws Exception {
     add1document();
     MockDataSource.clearCache();
 
@@ -161,7 +153,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
     MockDataSource.setIterator("select * from y where y.A='1'", childRow
         .iterator());
 
-    super.runDeltaImport(dataConfig_delta);
+    runDeltaImport(dataConfig_delta);
 
     assertQ(req("*:* OR testCompositePk_DeltaImport_replace_delete"), "//*[@numFound='0']");
   }
@@ -191,7 +183,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
     MockDataSource.setIterator("select * from y where y.A='1'", childRow
         .iterator());
 
-    super.runDeltaImport(dataConfig_delta);
+    runDeltaImport(dataConfig_delta);
 
     assertQ(req("*:* OR XtestCompositePk_DeltaImport_replace_nodelete"), "//*[@numFound='1']");
     assertQ(req("id:1"), "//*[@numFound='1']");
@@ -220,7 +212,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
     MockDataSource.setIterator("select * from y where y.A='2'", childRow
         .iterator());
 
-    super.runDeltaImport(dataConfig_delta);
+    runDeltaImport(dataConfig_delta);
 
     assertQ(req("*:* OR testCompositePk_DeltaImport_add"), "//*[@numFound='2']");
     assertQ(req("id:1"), "//*[@numFound='1']");
@@ -238,7 +230,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
     MockDataSource.setIterator(DELTA_QUERY,
         Collections.EMPTY_LIST.iterator());
 
-    super.runDeltaImport(dataConfig_delta);
+    runDeltaImport(dataConfig_delta);
 
     assertQ(req("*:* OR testCompositePk_DeltaImport_nodelta"), "//*[@numFound='1']");
     assertQ(req("id:1 OR testCompositePk_DeltaImport_nodelta"), "//*[@numFound='1']");
@@ -271,7 +263,7 @@ public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCa
     MockDataSource.setIterator("select * from y where y.A='2'", childRow
         .iterator());
 
-    super.runDeltaImport(dataConfig_delta);
+    runDeltaImport(dataConfig_delta);
 
     assertQ(req("*:* OR XtestCompositePk_DeltaImport_add_delete"), "//*[@numFound='1']");
     assertQ(req("id:2"), "//*[@numFound='1']");
