diff --git a/solr/src/test/org/apache/solr/client/solrj/SolrExampleTests.java b/solr/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
index af2043e..fe39873 100644
--- a/solr/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
+++ b/solr/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
@@ -51,7 +51,6 @@ import org.apache.solr.common.util.XML;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.params.FacetParams;
-import org.junit.Ignore;
 import org.junit.Test;
 
 /**
@@ -380,7 +379,7 @@ abstract public class SolrExampleTests extends SolrJettyTestBase
   }
 
 
-  @Test @Ignore   // TODO: re-enable when new transformer syntax is implemented
+  @Test
   public void testAugmentFields() throws Exception
   {    
     SolrServer server = getSolrServer();
@@ -405,7 +404,7 @@ abstract public class SolrExampleTests extends SolrJettyTestBase
     
     SolrQuery query = new SolrQuery();
     query.setQuery( "*:*" );
-    query.set( CommonParams.FL, "id,price,_docid_,_explain:nl_,score,aaa:_value:aaa_,ten:_value:int:10_" );
+    query.set( CommonParams.FL, "id,price,[docid],[explain style=nl],score,aaa:[value v=aaa],ten:[value v=10 t=int]" );
     query.addSortField( "price", SolrQuery.ORDER.asc );
     QueryResponse rsp = server.query( query );
     
@@ -419,12 +418,12 @@ abstract public class SolrExampleTests extends SolrJettyTestBase
     assertEquals( 1.0f, out2.getFieldValue( "score" ) );
     
     // check that the docid is one bigger
-    int id1 = (Integer)out1.getFieldValue( "_docid_" );
-    int id2 = (Integer)out2.getFieldValue( "_docid_" );
+    int id1 = (Integer)out1.getFieldValue( "[docid]" );
+    int id2 = (Integer)out2.getFieldValue( "[docid]" );
     assertTrue( "should be bigger ["+id1+","+id2+"]", id2 > id1 );
     
     // The score from explain should be the same as the score
-    NamedList explain = (NamedList)out1.getFieldValue( "_explain:nl_" );
+    NamedList explain = (NamedList)out1.getFieldValue( "[explain]" );
     assertEquals( out1.get( "score"), explain.get( "value" ) );
     
     // Augmented _value_ with alias
