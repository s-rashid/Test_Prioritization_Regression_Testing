diff --git a/solr/src/test/org/apache/solr/core/MockQuerySenderListenerReqHandler.java b/solr/src/test/org/apache/solr/core/MockQuerySenderListenerReqHandler.java
index 6d4dc75..d4a27c0 100644
--- a/solr/src/test/org/apache/solr/core/MockQuerySenderListenerReqHandler.java
+++ b/solr/src/test/org/apache/solr/core/MockQuerySenderListenerReqHandler.java
@@ -19,6 +19,9 @@ package org.apache.solr.core;
 import org.apache.solr.handler.RequestHandlerBase;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.response.SolrQueryResponse;
+import org.apache.solr.common.util.NamedList;
+
+import java.util.concurrent.atomic.AtomicInteger;
 
 
 /**
@@ -29,6 +32,13 @@ public class MockQuerySenderListenerReqHandler extends RequestHandlerBase {
   public SolrQueryRequest req;
   public SolrQueryResponse rsp;
 
+  AtomicInteger initCounter = new AtomicInteger(0);
+
+  public void init(NamedList args) {
+    initCounter.incrementAndGet();
+    super.init(args);
+  }
+
   public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {
     this.req = req;
     this.rsp = rsp;
@@ -53,4 +63,11 @@ public class MockQuerySenderListenerReqHandler extends RequestHandlerBase {
     String result = null;
     return result;
   }
+
+  public NamedList<Object> getStatistics() {
+    NamedList<Object> lst = super.getStatistics();
+    lst.add("initCount", initCounter.intValue());
+    return lst;
+  }
+ 
 }
