diff --git a/solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java b/solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
index d0d094b..cb5fd07 100644
--- a/solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
@@ -22,6 +22,7 @@ import org.apache.lucene.analysis.synonym.SynonymFilter;
 import org.apache.lucene.analysis.synonym.SynonymMap;
 import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 import org.apache.solr.common.ResourceLoader;
+import org.apache.solr.common.SolrException;
 import org.apache.solr.common.util.StrUtils;
 import org.apache.solr.util.plugin.ResourceLoaderAware;
 
@@ -40,7 +41,8 @@ public class SynonymFilterFactory extends BaseTokenFilterFactory implements Reso
 
   public void inform(ResourceLoader loader) {
     String synonyms = args.get("synonyms");
-
+    if (synonyms == null)
+      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Missing required argument 'synonyms'.");
     boolean ignoreCase = getBoolean("ignoreCase", false);
     boolean expand = getBoolean("expand", true);
 
@@ -50,26 +52,24 @@ public class SynonymFilterFactory extends BaseTokenFilterFactory implements Reso
       tokFactory = loadTokenizerFactory( loader, tf, args );
     }
 
-    if (synonyms != null) {
-      List<String> wlist=null;
-      try {
-        File synonymFile = new File(synonyms);
-        if (synonymFile.exists()) {
-          wlist = loader.getLines(synonyms);
-        } else  {
-          List<String> files = StrUtils.splitFileNames(synonyms);
-          wlist = new ArrayList<String>();
-          for (String file : files) {
-            List<String> lines = loader.getLines(file.trim());
-            wlist.addAll(lines);
-          }
+    List<String> wlist=null;
+    try {
+      File synonymFile = new File(synonyms);
+      if (synonymFile.exists()) {
+        wlist = loader.getLines(synonyms);
+      } else  {
+        List<String> files = StrUtils.splitFileNames(synonyms);
+        wlist = new ArrayList<String>();
+        for (String file : files) {
+          List<String> lines = loader.getLines(file.trim());
+          wlist.addAll(lines);
         }
-      } catch (IOException e) {
-        throw new RuntimeException(e);
       }
-      synMap = new SynonymMap(ignoreCase);
-      parseRules(wlist, synMap, "=>", ",", expand,tokFactory);
+    } catch (IOException e) {
+      throw new RuntimeException(e);
     }
+    synMap = new SynonymMap(ignoreCase);
+    parseRules(wlist, synMap, "=>", ",", expand,tokFactory);
   }
 
   private SynonymMap synMap;
