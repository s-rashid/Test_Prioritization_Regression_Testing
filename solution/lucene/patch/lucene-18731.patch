diff --git a/solr/src/java/org/apache/solr/schema/SortableLongField.java b/solr/src/java/org/apache/solr/schema/SortableLongField.java
index d23fff2..f68d5e8 100644
--- a/solr/src/java/org/apache/solr/schema/SortableLongField.java
+++ b/solr/src/java/org/apache/solr/schema/SortableLongField.java
@@ -40,10 +40,13 @@ import java.io.IOException;
  * 
  * @deprecated use {@link LongField} or {@link TrieLongtField} - will be removed in 5.x
  */
+@Deprecated
 public class SortableLongField extends FieldType {
+  @Override
   protected void init(IndexSchema schema, Map<String,String> args) {
   }
 
+  @Override
   public SortField getSortField(SchemaField field,boolean reverse) {
     return getStringSort(field,reverse);
   }
@@ -53,10 +56,12 @@ public class SortableLongField extends FieldType {
     return new SortableLongFieldSource(field.name);
   }
 
+  @Override
   public String toInternal(String val) {
     return NumberUtils.long2sortableStr(val);
   }
 
+  @Override
   public String indexedToReadable(String indexedForm) {
     return NumberUtils.SortableStr2long(indexedForm);
   }
@@ -67,6 +72,7 @@ public class SortableLongField extends FieldType {
     out.write( indexedToReadable(ByteUtils.UTF8toUTF16(input)) );
   }
   
+  @Override
   public String toExternal(Fieldable f) {
     return indexedToReadable(f.stringValue());
   }
@@ -76,6 +82,7 @@ public class SortableLongField extends FieldType {
     return NumberUtils.SortableStr2long(f.stringValue(),0,5);
   }
 
+  @Override
   public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {
     String sval = f.stringValue();
     writer.writeLong(name, NumberUtils.SortableStr2long(sval,0,sval.length()));
@@ -98,41 +105,50 @@ class SortableLongFieldSource extends FieldCacheSource {
     this.defVal = defVal;
   }
 
+  @Override
   public String description() {
     return "slong(" + field + ')';
   }
 
+  @Override
   public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {
     final long def = defVal;
 
     return new StringIndexDocValues(this, readerContext, field) {
       private final BytesRef spare = new BytesRef();
 
+      @Override
       protected String toTerm(String readableValue) {
         return NumberUtils.long2sortableStr(readableValue);
       }
 
+      @Override
       public float floatVal(int doc) {
         return (float)longVal(doc);
       }
 
+      @Override
       public int intVal(int doc) {
         return (int)longVal(doc);
       }
 
+      @Override
       public long longVal(int doc) {
         int ord=termsIndex.getOrd(doc);
         return ord==0 ? def  : NumberUtils.SortableStr2long(termsIndex.lookup(ord, spare),0,5);
       }
 
+      @Override
       public double doubleVal(int doc) {
         return (double)longVal(doc);
       }
 
+      @Override
       public String strVal(int doc) {
         return Long.toString(longVal(doc));
       }
 
+      @Override
       public String toString(int doc) {
         return description() + '=' + longVal(doc);
       }
@@ -163,6 +179,7 @@ class SortableLongFieldSource extends FieldCacheSource {
     };
   }
 
+  @Override
   public boolean equals(Object o) {
     return o instanceof SortableLongFieldSource
             && super.equals(o)
@@ -170,6 +187,7 @@ class SortableLongFieldSource extends FieldCacheSource {
   }
 
   private static int hcode = SortableLongFieldSource.class.hashCode();
+  @Override
   public int hashCode() {
     return hcode + super.hashCode() + (int)defVal;
   };
