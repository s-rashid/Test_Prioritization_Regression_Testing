diff --git a/solr/src/java/org/apache/solr/response/transform/ValueAugmenterFactory.java b/solr/src/java/org/apache/solr/response/transform/ValueAugmenterFactory.java
index c2903b0..a12145f 100644
--- a/solr/src/java/org/apache/solr/response/transform/ValueAugmenterFactory.java
+++ b/solr/src/java/org/apache/solr/response/transform/ValueAugmenterFactory.java
@@ -16,6 +16,8 @@
  */
 package org.apache.solr.response.transform;
 
+import java.util.Map;
+
 import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrException;
 import org.apache.solr.common.SolrException.ErrorCode;
@@ -40,12 +42,9 @@ public class ValueAugmenterFactory extends TransformerFactory
     }
   }
 
-  public static Object getObjectFrom( String str )
+  public static Object getObjectFrom( String val, String type )
   {
-    int idx = str.indexOf( ':' );
-    if( idx > 0 ) {
-      String type = str.substring(0,idx);
-      String val = str.substring(idx+1);
+    if( type != null ) {
       try {
         if( "int".equals( type ) ) return Integer.valueOf( val );
         if( "double".equals( type ) ) return Double.valueOf( val );
@@ -57,14 +56,20 @@ public class ValueAugmenterFactory extends TransformerFactory
             "Unable to parse "+type+"="+val, ex );
       }
     }
-    return str;
+    return val;
   }
 
   @Override
-  public DocTransformer create(String field, String arg, SolrQueryRequest req) {
+  public DocTransformer create(String field, Map<String,String> args, SolrQueryRequest req) {
     Object val = value;
     if( val == null ) {
-      val = (arg==null)?defaultValue:getObjectFrom(arg);
+      String v = args.get("v");
+      if( v == null ) {
+        val = defaultValue;
+      }
+      else {
+        val = getObjectFrom(v, args.get("t"));
+      }
       if( val == null ) {
         throw new SolrException( ErrorCode.BAD_REQUEST,
             "ValueAugmenter is missing a value -- should be defined in solrconfig or inline" );
