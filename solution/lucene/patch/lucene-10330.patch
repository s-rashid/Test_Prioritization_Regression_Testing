diff --git a/modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java b/modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java
index cccd8cd..268f057 100644
--- a/modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java
+++ b/modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java
@@ -103,6 +103,11 @@ public final class ShingleFilter extends TokenFilter {
   private boolean outputUnigrams = true;
 
   /**
+   * By default, we don't override behavior of outputUnigrams.
+   */
+  private boolean outputUnigramsIfNoShingles = false;
+ 
+  /**
    * maximum shingle size (number of tokens)
    */
   private int maxShingleSize;
@@ -136,6 +141,11 @@ public final class ShingleFilter extends TokenFilter {
    * position.
    */
   private boolean isOutputHere = false;
+
+  /**
+   * true if no shingles have been output yet (for outputUnigramsIfNoShingles).
+   */
+  boolean noShingleOutput = true;
   
   private final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
   private final OffsetAttribute offsetAtt = addAttribute(OffsetAttribute.class);
@@ -212,6 +222,20 @@ public final class ShingleFilter extends TokenFilter {
   }
 
   /**
+   * <p>Shall we override the behavior of outputUnigrams==false for those
+   * times when no shingles are available (because there are fewer than
+   * minShingleSize tokens in the input stream)? (default: false.)
+   * <p>Note that if outputUnigrams==true, then unigrams are always output,
+   * regardless of whether any shingles are available.
+   *
+   * @param outputUnigramsIfNoShingles Whether or not to output a single
+   * unigram when no shingles are available.
+   */
+  public void setOutputUnigramsIfNoShingles(boolean outputUnigramsIfNoShingles) {
+    this.outputUnigramsIfNoShingles = outputUnigramsIfNoShingles;
+  }
+
+  /**
    * Set the max shingle size (default: 2)
    *
    * @param maxShingleSize max size of output shingles
@@ -292,6 +316,7 @@ public final class ShingleFilter extends TokenFilter {
         termAtt.setEmpty().append(gramBuilder);
         if (gramSize.getValue() > 1) {
           typeAtt.setType(tokenType);
+          noShingleOutput = false;
         }
         offsetAtt.setOffset(offsetAtt.startOffset(), nextToken.offsetAtt.endOffset());
         isOutputHere = true;
@@ -395,6 +420,10 @@ public final class ShingleFilter extends TokenFilter {
         }
       }
     }
+    if (outputUnigramsIfNoShingles && noShingleOutput 
+        && gramSize.minValue > 1 && inputWindow.size() < minShingleSize) {
+      gramSize.minValue = 1;
+    }
     gramSize.reset();
     isOutputHere = false;
   }
@@ -406,6 +435,11 @@ public final class ShingleFilter extends TokenFilter {
     inputWindow.clear();
     numFillerTokensToInsert = 0;
     isOutputHere = false;
+    noShingleOutput = true;    
+    if (outputUnigramsIfNoShingles && ! outputUnigrams) {
+      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles
+      gramSize.minValue = minShingleSize;
+    }
   }
