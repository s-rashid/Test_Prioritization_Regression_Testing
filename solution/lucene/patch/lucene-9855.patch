diff --git a/solr/src/java/org/apache/solr/util/SolrPluginUtils.java b/solr/src/java/org/apache/solr/util/SolrPluginUtils.java
index 03507a0..b7ce01c 100644
--- a/solr/src/java/org/apache/solr/util/SolrPluginUtils.java
+++ b/solr/src/java/org/apache/solr/util/SolrPluginUtils.java
@@ -366,7 +366,7 @@ public class SolrPluginUtils {
       String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);
       if (otherQueryS != null && otherQueryS.length() > 0) {
         DocList otherResults = doSimpleQuery
-                (otherQueryS, req.getSearcher(), req.getSchema(), 0, 10);
+                (otherQueryS, req, 0, 10);
         dbg.add("otherQuery", otherQueryS);
         NamedList<Explanation> explainO
                 = getExplanations(query, otherResults, searcher, schema);
@@ -467,26 +467,30 @@ public class SolrPluginUtils {
   }
 
   /**
-   * Executes a basic query in lucene syntax
+   * Executes a basic query
    */
   public static DocList doSimpleQuery(String sreq,
-                                      SolrIndexSearcher searcher,
-                                      IndexSchema schema,
+                                      SolrQueryRequest req,
                                       int start, int limit) throws IOException {
     List<String> commands = StrUtils.splitSmart(sreq,';');
 
     String qs = commands.size() >= 1 ? commands.get(0) : "";
-    Query query = QueryParsing.parseQuery(qs, schema);
+    try {
+    Query query = QParser.getParser(qs, null, req).getQuery();
 
     // If the first non-query, non-filter command is a simple sort on an indexed field, then
     // we can use the Lucene sort ability.
     Sort sort = null;
     if (commands.size() >= 2) {
-      sort = QueryParsing.parseSort(commands.get(1), schema);
+      sort = QueryParsing.parseSort(commands.get(1), req);
     }
 
-    DocList results = searcher.getDocList(query,(DocSet)null, sort, start, limit);
+    DocList results = req.getSearcher().getDocList(query,(DocSet)null, sort, start, limit);
     return results;
+    } catch (ParseException e) {
+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Error parsing query: " + qs);
+    }
+
   }
 
   /**
@@ -855,7 +859,7 @@ public class SolrPluginUtils {
     SolrException sortE = null;
     Sort ss = null;
     try {
-      ss = QueryParsing.parseSort(sort, req.getSchema());
+      ss = QueryParsing.parseSort(sort, req);
     } catch (SolrException e) {
       sortE = e;
     }
