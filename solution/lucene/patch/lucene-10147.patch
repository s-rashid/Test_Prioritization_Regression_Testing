diff --git a/lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java b/lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java
index c1d73d0..37e9500 100644
--- a/lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java
+++ b/lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java
@@ -202,7 +202,8 @@ public class MemoryIndex implements Serializable {
    * Sorts term entries into ascending order; also works for
    * Arrays.binarySearch() and Arrays.sort()
    */
-  private static final Comparator termComparator = new Comparator() {
+  private static final Comparator<Object> termComparator = new Comparator<Object>() {
+    @SuppressWarnings("unchecked")
     public int compare(Object o1, Object o2) {
       if (o1 instanceof Map.Entry<?,?>) o1 = ((Map.Entry<?,?>) o1).getKey();
       if (o2 instanceof Map.Entry<?,?>) o2 = ((Map.Entry<?,?>) o2).getKey();
@@ -513,6 +514,7 @@ public class MemoryIndex implements Serializable {
   /** returns a view of the given map's entries, sorted ascending by key */
   private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {
     int size = map.size();
+    @SuppressWarnings("unchecked")
     Map.Entry<K,V>[] entries = new Map.Entry[size];
     
     Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();
