diff --git a/lucene/src/java/org/apache/lucene/store/DataOutput.java b/lucene/src/java/org/apache/lucene/store/DataOutput.java
index 8a3f995..1db4d90 100644
--- a/lucene/src/java/org/apache/lucene/store/DataOutput.java
+++ b/lucene/src/java/org/apache/lucene/store/DataOutput.java
@@ -105,59 +105,6 @@ public abstract class DataOutput {
     writeBytes(utf8Result.bytes, 0, utf8Result.length);
   }
 
-  /** Writes a sub sequence of characters from s as the old
-   *  format (modified UTF-8 encoded bytes).
-   * @param s the source of the characters
-   * @param start the first character in the sequence
-   * @param length the number of characters in the sequence
-   * @deprecated -- please pre-convert to utf8 bytes
-   * instead or use {@link #writeString}
-   */
-  @Deprecated
-  public void writeChars(String s, int start, int length)
-       throws IOException {
-    final int end = start + length;
-    for (int i = start; i < end; i++) {
-      final int code = s.charAt(i);
-      if (code >= 0x01 && code <= 0x7F)
-        writeByte((byte)code);
-      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {
-        writeByte((byte)(0xC0 | (code >> 6)));
-        writeByte((byte)(0x80 | (code & 0x3F)));
-      } else {
-        writeByte((byte)(0xE0 | (code >>> 12)));
-        writeByte((byte)(0x80 | ((code >> 6) & 0x3F)));
-        writeByte((byte)(0x80 | (code & 0x3F)));
-      }
-    }
-  }
-
-  /** Writes a sub sequence of characters from char[] as
-   *  the old format (modified UTF-8 encoded bytes).
-   * @param s the source of the characters
-   * @param start the first character in the sequence
-   * @param length the number of characters in the sequence
-   * @deprecated -- please pre-convert to utf8 bytes instead or use {@link #writeString}
-   */
-  @Deprecated
-  public void writeChars(char[] s, int start, int length)
-    throws IOException {
-    final int end = start + length;
-    for (int i = start; i < end; i++) {
-      final int code = s[i];
-      if (code >= 0x01 && code <= 0x7F)
-        writeByte((byte)code);
-      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {
-        writeByte((byte)(0xC0 | (code >> 6)));
-        writeByte((byte)(0x80 | (code & 0x3F)));
-      } else {
-        writeByte((byte)(0xE0 | (code >>> 12)));
-        writeByte((byte)(0x80 | ((code >> 6) & 0x3F)));
-        writeByte((byte)(0x80 | (code & 0x3F)));
-      }
-    }
-  }
-
   private static int COPY_BUFFER_SIZE = 16384;
   private byte[] copyBuffer;
