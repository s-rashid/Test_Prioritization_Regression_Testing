diff --git a/lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.java b/lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.java
index 2faf22b..4e90db2 100644
--- a/lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.java
+++ b/lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.java
@@ -24,6 +24,7 @@ import java.util.Random;
 import org.apache.lucene.analysis.Analyzer;
 import org.apache.lucene.analysis.MockAnalyzer;
 import org.apache.lucene.document.Document;
+import org.apache.lucene.index.IndexWriter; // javadoc
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.util.LuceneTestCase;
 import org.apache.lucene.util.Version;
@@ -127,9 +128,28 @@ public class RandomIndexWriter implements Closeable {
   }
 
   public IndexReader getReader() throws IOException {
-    getReaderCalled = true;
-    if (r.nextInt(4) == 2)
+
+    return getReader(true);
+  }
+
+  private void doRandomOptimize() throws IOException {
+    final int segCount = w.getSegmentCount();
+    if (r.nextBoolean() || segCount == 0) {
+      // full optimize
       w.optimize();
+    } else {
+      // partial optimize
+      final int limit = _TestUtil.nextInt(r, 1, segCount);
+      w.optimize(limit);
+      assert w.getSegmentCount() <= limit: "limit=" + limit + " actual=" + w.getSegmentCount();
+    }
+  }
+
+  public IndexReader getReader(boolean applyDeletions) throws IOException {
+    getReaderCalled = true;
+    if (r.nextInt(4) == 2) {
+      doRandomOptimize();
+    }
     // If we are writing with PreFlexRW, force a full
     // IndexReader.open so terms are sorted in codepoint
     // order during searching:
@@ -151,7 +171,7 @@ public class RandomIndexWriter implements Closeable {
     // if someone isn't using getReader() API, we want to be sure to
     // maybeOptimize since presumably they might open a reader on the dir.
     if (getReaderCalled == false && r.nextInt(4) == 2) {
-      w.optimize();
+      doRandomOptimize();
     }
     w.close();
   }
