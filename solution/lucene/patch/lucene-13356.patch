diff --git a/lucene/src/java/org/apache/lucene/index/values/Type.java b/lucene/src/java/org/apache/lucene/index/values/Type.java
index 717741a..b02fd0a 100644
--- a/lucene/src/java/org/apache/lucene/index/values/Type.java
+++ b/lucene/src/java/org/apache/lucene/index/values/Type.java
@@ -1,4 +1,7 @@
 package org.apache.lucene.index.values;
+
+import org.apache.lucene.index.values.DocValues.SortedSource;
+
 /**
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
@@ -16,32 +19,62 @@ package org.apache.lucene.index.values;
  * limitations under the License.
  */
 
-/** Controls whether per-field values are stored into
- *  index.  This storage is non-sparse, so it's best to
- *  use this when all docs have the field, and loads all
- *  values into RAM, exposing a random access API, when
- *  loaded.
- *
- * @lucene.experimental 
+/**
+ * {@link Type} specifies the type of the {@link DocValues} for a certain field.
+ * A {@link Type} can specify the actual data type for a field, used compression
+ * schemes and high-level data-structures.
+ * 
+ * @lucene.experimental
  */
 public enum Type {
 
-  /** Integral value is stored as packed ints.  The bit
-   *  precision is fixed across the segment, and
-   *  determined by the min/max values in the field. */
+  /**
+   * Integral value is stored as packed ints. The bit precision is fixed across
+   * the segment, and determined by the min/max values in the field.
+   */
   PACKED_INTS,
+  /**
+   * 32 bit floating point value stored without modification or compression.
+   */
   SIMPLE_FLOAT_4BYTE,
+  /**
+   * 64 bit floating point value stored without modification or compression.
+   */
   SIMPLE_FLOAT_8BYTE,
 
   // TODO(simonw): -- shouldn't lucene decide/detect straight vs
   // deref, as well fixed vs var?
+  /**
+   * Fixed length straight stored byte variant
+   */
   BYTES_FIXED_STRAIGHT,
+
+  /**
+   * Fixed length dereferenced (indexed) byte variant
+   */
   BYTES_FIXED_DEREF,
+
+  /**
+   * Fixed length pre-sorted byte variant
+   * 
+   * @see SortedSource
+   */
   BYTES_FIXED_SORTED,
 
+  /**
+   * Variable length straight stored byte variant
+   */
   BYTES_VAR_STRAIGHT,
+
+  /**
+   * Variable length dereferenced (indexed) byte variant
+   */
   BYTES_VAR_DEREF,
-  BYTES_VAR_SORTED
 
-  // TODO(simonw): -- need STRING variants as well
+  /**
+   * Variable length pre-sorted byte variant
+   * 
+   * @see SortedSource
+   */
+  BYTES_VAR_SORTED
 }
