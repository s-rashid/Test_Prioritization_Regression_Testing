diff --git a/lucene/src/java/org/apache/lucene/index/MultiFields.java b/lucene/src/java/org/apache/lucene/index/MultiFields.java
index f642383..9137d60 100644
--- a/lucene/src/java/org/apache/lucene/index/MultiFields.java
+++ b/lucene/src/java/org/apache/lucene/index/MultiFields.java
@@ -25,6 +25,7 @@ import java.util.ArrayList;
 
 import org.apache.lucene.index.values.DocValues;
 import org.apache.lucene.index.values.MultiDocValues;
+import org.apache.lucene.index.values.Values;
 import org.apache.lucene.index.values.MultiDocValues.DocValuesIndex;
 import org.apache.lucene.util.ReaderUtil;
 import org.apache.lucene.util.ReaderUtil.Gather;  // for javadocs
@@ -290,19 +291,30 @@ public final class MultiFields extends Fields {
 
       // Lazy init: first time this field is requested, we
       // create & add to docValues:
-      final List<MultiDocValues.DocValuesIndex> subs2 = new ArrayList<MultiDocValues.DocValuesIndex>();
-      final List<ReaderUtil.Slice> slices2 = new ArrayList<ReaderUtil.Slice>();
-
+      final List<MultiDocValues.DocValuesIndex> docValuesIndex = new ArrayList<MultiDocValues.DocValuesIndex>();
+      int docsUpto = 0;
+      Values type = null;
       // Gather all sub-readers that share this field
       for(int i=0;i<subs.length;i++) {
-        final DocValues values = subs[i].docValues(field);
+         DocValues values = subs[i].docValues(field);
+         final int start = subSlices[i].start;
+         final int length = subSlices[i].length;
         if (values != null) {
-          subs2.add(new MultiDocValues.DocValuesIndex(values, i));
-          slices2.add(subSlices[i]);
+          if (docsUpto != start) {
+            type = values.type();
+            docValuesIndex.add(new MultiDocValues.DocValuesIndex(new MultiDocValues.DummyDocValues(start, type), docsUpto, start - docsUpto));
+          }
+          docValuesIndex.add(new MultiDocValues.DocValuesIndex(values, start, length));
+          docsUpto = start+length;
+
+        } else if (i+1 == subs.length && !docValuesIndex.isEmpty()) {
+          docValuesIndex.add(new MultiDocValues.DocValuesIndex(
+              new MultiDocValues.DummyDocValues(start, type), docsUpto, start
+                  - docsUpto));
         }
+       
       }
-      result = subs2.isEmpty()?null: new MultiDocValues(subs2.toArray(DocValuesIndex.EMPTY_ARRAY),
-                                slices2.toArray(ReaderUtil.Slice.EMPTY_ARRAY));
+      result = docValuesIndex.isEmpty()?null: new MultiDocValues(docValuesIndex.toArray(DocValuesIndex.EMPTY_ARRAY));
       docValues.put(field, result);
     } else {
       result = docValues.get(field);
