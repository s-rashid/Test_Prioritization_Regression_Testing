diff --git a/solr/src/java/org/apache/solr/response/XMLWriter.java b/solr/src/java/org/apache/solr/response/XMLWriter.java
index aa14255..54c9c35 100644
--- a/solr/src/java/org/apache/solr/response/XMLWriter.java
+++ b/solr/src/java/org/apache/solr/response/XMLWriter.java
@@ -19,6 +19,7 @@ package org.apache.solr.response;
 
 import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrDocumentList;
+import org.apache.solr.common.SolrException;
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.XML;
@@ -76,9 +77,13 @@ public final class XMLWriter extends TextResponseWriter {
   public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {
     super(writer, req, rsp);
 
-    String version = req.getParams().get("version");
+    String version = req.getParams().get(CommonParams.VERSION);
     float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);
     this.version = (int)(ver*1000);
+    if( this.version < 2200 ) {
+      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,
+          "XMLWriter does not support version: "+version );
+    }
   }
 
 
@@ -110,28 +115,6 @@ public final class XMLWriter extends TextResponseWriter {
     int sz = lst.size();
     int start=0;
 
-    // special case the response header if the version is 2.1 or less
-    if (version<=2100 && sz>0) {
-      Object header = lst.getVal(0);
-      if (header instanceof NamedList && "responseHeader".equals(lst.getName(0))) {
-        writer.write("<responseHeader>");
-        incLevel();
-        NamedList nl = (NamedList)header;
-        for (int i=0; i<nl.size(); i++) {
-          String name = nl.getName(i);
-          Object val = nl.getVal(i);
-          if ("status".equals(name) || "QTime".equals(name)) {
-            writePrim(name,null,val.toString(),false);
-          } else {
-            writeVal(name,val);
-          }
-        }
-        decLevel();
-        writer.write("</responseHeader>");
-        start=1;
-      }
-    }
-
     for (int i=start; i<sz; i++) {
       writeVal(lst.getName(i),lst.getVal(i));
     }
@@ -248,7 +231,7 @@ public final class XMLWriter extends TextResponseWriter {
       }
       if (fidx1+1 == fidx2) {
         // single field value
-        if (version>=2100 && sf.multiValued()) {
+        if (sf.multiValued()) {
           startTag("arr",fname,false);
           doIndent=false;
           sf.write(this, null, f1);
@@ -301,7 +284,7 @@ public final class XMLWriter extends TextResponseWriter {
       } else {
         // single valued... figure out if we should put <arr> tags around it anyway
         SchemaField sf = schema.getFieldOrNull(fname);
-        if (version>=2100 && sf!=null && sf.multiValued()) {
+        if (sf!=null && sf.multiValued()) {
           startTag("arr",fname,false);
           doIndent=false;
           writeVal(fname, val);
