diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper.java
index c46ddcf..432e64a 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper.java
@@ -54,6 +54,7 @@ public class EntityProcessorWrapper extends EntityProcessor {
     this.docBuilder = docBuilder;
   }
 
+  @Override
   public void init(Context context) {
     rowcache = null;
     this.context = context;
@@ -79,6 +80,7 @@ public class EntityProcessorWrapper extends EntityProcessor {
 
     String[] transArr = transClasses.split(",");
     transformers = new ArrayList<Transformer>() {
+      @Override
       public boolean add(Transformer transformer) {
         if (docBuilder != null && docBuilder.verboseDebug) {
           transformer = docBuilder.writer.getDebugLogger().wrapTransformer(transformer);
@@ -135,6 +137,7 @@ public class EntityProcessorWrapper extends EntityProcessor {
       o = clazz.newInstance();
     }
 
+    @Override
     public Object transformRow(Map<String, Object> aRow, Context context) {
       try {
         return meth.invoke(o, aRow);
@@ -223,6 +226,7 @@ public class EntityProcessorWrapper extends EntityProcessor {
             && Boolean.parseBoolean(oMap.get("$stopTransform").toString());
   }
 
+  @Override
   public Map<String, Object> nextRow() {
     if (rowcache != null) {
       return getFromRowCache();
@@ -252,6 +256,7 @@ public class EntityProcessorWrapper extends EntityProcessor {
     }
   }
 
+  @Override
   public Map<String, Object> nextModifiedRowKey() {
     Map<String, Object> row = delegate.nextModifiedRowKey();
     row = applyTransformer(row);
@@ -259,6 +264,7 @@ public class EntityProcessorWrapper extends EntityProcessor {
     return row;
   }
 
+  @Override
   public Map<String, Object> nextDeletedRowKey() {
     Map<String, Object> row = delegate.nextDeletedRowKey();
     row = applyTransformer(row);
@@ -266,10 +272,12 @@ public class EntityProcessorWrapper extends EntityProcessor {
     return row;
   }
 
+  @Override
   public Map<String, Object> nextModifiedParentRowKey() {
     return delegate.nextModifiedParentRowKey();
   }
 
+  @Override
   public void destroy() {
     delegate.destroy();
   }
