diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateTransformer.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateTransformer.java
index 05c0a5d..e279ab3 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateTransformer.java
@@ -16,8 +16,6 @@
  */
 package org.apache.solr.handler.dataimport;
 
-import org.apache.solr.SolrTestCaseJ4;
-import org.junit.Assert;
 import org.junit.Test;
 
 import java.util.ArrayList;
@@ -33,28 +31,28 @@ import java.util.Arrays;
  * @version $Id$
  * @since solr 1.3
  */
-public class TestTemplateTransformer extends SolrTestCaseJ4 {
+public class TestTemplateTransformer extends AbstractDataImportHandlerTestCase {
 
   @Test
   @SuppressWarnings("unchecked")
   public void testTransformRow() {
     List fields = new ArrayList();
-    fields.add(AbstractDataImportHandlerTestCase.createMap("column", "firstName"));
-    fields.add(AbstractDataImportHandlerTestCase.createMap("column", "lastName"));
-    fields.add(AbstractDataImportHandlerTestCase.createMap("column", "middleName"));
-    fields.add(AbstractDataImportHandlerTestCase.createMap("column", "name",
+    fields.add(createMap("column", "firstName"));
+    fields.add(createMap("column", "lastName"));
+    fields.add(createMap("column", "middleName"));
+    fields.add(createMap("column", "name",
             TemplateTransformer.TEMPLATE,
             "${e.lastName}, ${e.firstName} ${e.middleName}"));
-    fields.add(AbstractDataImportHandlerTestCase.createMap("column", "emails",
+    fields.add(createMap("column", "emails",
             TemplateTransformer.TEMPLATE,
             "${e.mail}"));
 
     // test reuse of template output in another template 
-    fields.add(AbstractDataImportHandlerTestCase.createMap("column", "mrname",
+    fields.add(createMap("column", "mrname",
             TemplateTransformer.TEMPLATE,"Mr ${e.name}"));
 
     List<String> mails = Arrays.asList(new String[]{"a@b.com", "c@d.com"});
-    Map row = AbstractDataImportHandlerTestCase.createMap(
+    Map row = createMap(
             "firstName", "Shalin",
             "middleName", "Shekhar", 
             "lastName", "Mangar",
@@ -62,15 +60,14 @@ public class TestTemplateTransformer extends SolrTestCaseJ4 {
 
     VariableResolverImpl resolver = new VariableResolverImpl();
     resolver.addNamespace("e", row);
-    Map<String, String> entityAttrs = AbstractDataImportHandlerTestCase.createMap(
-            "name", "e");
+    Map<String, String> entityAttrs = createMap("name", "e");
 
-    Context context = AbstractDataImportHandlerTestCase.getContext(null, resolver,
+    Context context = getContext(null, resolver,
             null, Context.FULL_DUMP, fields, entityAttrs);
     new TemplateTransformer().transformRow(row, context);
-    Assert.assertEquals("Mangar, Shalin Shekhar", row.get("name"));
-    Assert.assertEquals("Mr Mangar, Shalin Shekhar", row.get("mrname"));
-    Assert.assertEquals(mails,row.get("emails"));
+    assertEquals("Mangar, Shalin Shekhar", row.get("name"));
+    assertEquals("Mr Mangar, Shalin Shekhar", row.get("mrname"));
+    assertEquals(mails,row.get("emails"));
   }
 
 }
