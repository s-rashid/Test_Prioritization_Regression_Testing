diff --git a/lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier.java b/lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier.java
index bf4804e..9cfd568 100644
--- a/lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier.java
+++ b/lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier.java
@@ -22,6 +22,7 @@ import java.util.Date;
 import java.util.List;
 import java.util.ArrayList;
 
+import org.apache.lucene.search.DefaultSimilarity;
 import org.apache.lucene.search.Similarity;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.FSDirectory;
@@ -52,19 +53,21 @@ public class FieldNormModifier {
    */
   public static void main(String[] args) throws IOException {
     if (args.length < 3) {
-      System.err.println("Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...");
+      System.err.println("Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...");
       System.exit(1);
     }
 
     Similarity s = null;
-    if (!args[1].equals("-n")) {
-      try {
-        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();
-      } catch (Exception e) {
-        System.err.println("Couldn't instantiate similarity with empty constructor: " + args[1]);
-        e.printStackTrace(System.err);
-        System.exit(1);
-      }
+
+    if (args[1].equals("-d"))
+      args[1] = DefaultSimilarity.class.getName();
+
+    try {
+      s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();
+    } catch (Exception e) {
+      System.err.println("Couldn't instantiate similarity with empty constructor: " + args[1]);
+      e.printStackTrace(System.err);
+      System.exit(1);
     }
 
     Directory d = FSDirectory.open(new File(args[0]));
@@ -142,11 +145,7 @@ public class FieldNormModifier {
 
         for (int d = 0; d < termCounts.length; d++) {
           if (delDocs == null || !delDocs.get(d)) {
-            if (sim == null) {
-              subReader.setNorm(d, fieldName, Similarity.encodeNorm(1.0f));
-            } else {
-              subReader.setNorm(d, fieldName, sim.encodeNormValue(sim.lengthNorm(fieldName, termCounts[d])));
-            }
+            subReader.setNorm(d, fieldName, sim.encodeNormValue(sim.lengthNorm(fieldName, termCounts[d])));
           }
         }
       }
