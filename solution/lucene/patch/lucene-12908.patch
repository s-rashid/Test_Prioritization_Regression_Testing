diff --git a/lucene/src/test/org/apache/lucene/index/TestPayloads.java b/lucene/src/test/org/apache/lucene/index/TestPayloads.java
index e366714..ac12cf2 100644
--- a/lucene/src/test/org/apache/lucene/index/TestPayloads.java
+++ b/lucene/src/test/org/apache/lucene/index/TestPayloads.java
@@ -17,7 +17,6 @@ package org.apache.lucene.index;
  * limitations under the License.
  */
 
-import java.io.File;
 import java.io.IOException;
 import java.io.Reader;
 import java.io.UnsupportedEncodingException;
@@ -36,15 +35,14 @@ import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.index.IndexWriterConfig.OpenMode;
+import org.apache.lucene.search.DocIdSetIterator;
 import org.apache.lucene.store.Directory;
-import org.apache.lucene.store.FSDirectory;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.util.LuceneTestCase;
 import org.apache.lucene.util.UnicodeUtil;
 import org.apache.lucene.util._TestUtil;
 
-
 public class TestPayloads extends LuceneTestCase {
     
     // Simple tests to test the Payload class
@@ -154,16 +152,9 @@ public class TestPayloads extends LuceneTestCase {
 
     // Tests if payloads are correctly stored and loaded using both RamDirectory and FSDirectory
     public void testPayloadsEncoding() throws Exception {
-        // first perform the test using a RAMDirectory
         Directory dir = newDirectory();
         performTest(dir);
         dir.close();
-        // now use a FSDirectory and repeat same test
-        File dirName = _TestUtil.getTempDir("test_payloads");
-        dir = FSDirectory.open(dirName);
-        performTest(dir);
-       _TestUtil.rmDir(dirName);
-        dir.close();
     }
     
     // builds an index with payloads in the given Directory and performs
@@ -236,7 +227,7 @@ public class TestPayloads extends LuceneTestCase {
                                                     new BytesRef(terms[i].text()));
         }
         
-        while (tps[0].nextDoc() != DocsEnum.NO_MORE_DOCS) {
+        while (tps[0].nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {
             for (int i = 1; i < numTerms; i++) {
                 tps[i].nextDoc();
             }
@@ -521,7 +512,7 @@ public class TestPayloads extends LuceneTestCase {
         while (terms.next() != null) {
           String termText = terms.term().utf8ToString();
           tp = terms.docsAndPositions(delDocs, tp);
-          while(tp.nextDoc() != DocsEnum.NO_MORE_DOCS) {
+          while(tp.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {
             int freq = tp.freq();
             for (int i = 0; i < freq; i++) {
               tp.nextPosition();
