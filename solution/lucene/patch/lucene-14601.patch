diff --git a/solr/src/test/org/apache/solr/analysis/TestRussianFilters.java b/solr/src/test/org/apache/solr/analysis/TestRussianFilters.java
index 973900d..c2e6a6a 100644
--- a/solr/src/test/org/apache/solr/analysis/TestRussianFilters.java
+++ b/solr/src/test/org/apache/solr/analysis/TestRussianFilters.java
@@ -38,37 +38,4 @@ public class TestRussianFilters extends BaseTokenTestCase {
     assertTokenStreamContents(stream, new String[] {"Вместе", "с", "тем", "о",
         "силе", "электромагнитной", "100"});
   }
-  
-  /**
-   * Test RussianLowerCaseFilterFactory
-   */
-  public void testLowerCase() throws Exception {
-    Reader reader = new StringReader("Вместе с тем о силе электромагнитной 100");
-    RussianLetterTokenizerFactory factory = new RussianLetterTokenizerFactory();
-    factory.init(DEFAULT_VERSION_PARAM);
-    RussianLowerCaseFilterFactory filterFactory = new RussianLowerCaseFilterFactory();
-    filterFactory.init(DEFAULT_VERSION_PARAM);
-    Tokenizer tokenizer = factory.create(reader);
-    TokenStream stream = filterFactory.create(tokenizer);
-    assertTokenStreamContents(stream, new String[] {"вместе", "с", "тем", "о",
-        "силе", "электромагнитной", "100"});
-  }
-  
-  /**
-   * Test RussianStemFilterFactory
-   */
-  public void testStemmer() throws Exception {
-    Reader reader = new StringReader("Вместе с тем о силе электромагнитной 100");
-    RussianLetterTokenizerFactory factory = new RussianLetterTokenizerFactory();
-    factory.init(DEFAULT_VERSION_PARAM);
-    RussianLowerCaseFilterFactory caseFactory = new RussianLowerCaseFilterFactory();
-    caseFactory.init(DEFAULT_VERSION_PARAM);
-    RussianStemFilterFactory stemFactory = new RussianStemFilterFactory();
-    stemFactory.init(DEFAULT_VERSION_PARAM);
-    Tokenizer tokenizer = factory.create(reader);
-    TokenStream stream = caseFactory.create(tokenizer);
-    stream = stemFactory.create(stream);
-    assertTokenStreamContents(stream, new String[] {"вмест", "с", "тем", "о",
-        "сил", "электромагнитн", "100"});
-  }
 }
