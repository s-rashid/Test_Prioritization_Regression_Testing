diff --git a/modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemFilter.java b/modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemFilter.java
index be40832..e5461d7 100644
--- a/modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemFilter.java
+++ b/modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemFilter.java
@@ -18,13 +18,12 @@ package org.apache.lucene.analysis.de;
  */
 
 import java.io.IOException;
-import java.util.Set;
 
-import org.apache.lucene.analysis.miscellaneous.KeywordMarkerFilter; // for javadoc
 import org.apache.lucene.analysis.TokenFilter;
 import org.apache.lucene.analysis.TokenStream;
-import org.apache.lucene.analysis.tokenattributes.KeywordAttribute;
+import org.apache.lucene.analysis.miscellaneous.KeywordMarkerFilter;
 import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
+import org.apache.lucene.analysis.tokenattributes.KeywordAttribute;
 
 /**
  * A {@link TokenFilter} that stems German words. 
@@ -46,7 +45,6 @@ public final class GermanStemFilter extends TokenFilter
      * The actual token in the input stream.
      */
     private GermanStemmer stemmer = new GermanStemmer();
-    private Set<?> exclusionSet = null;
 
     private final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
     private final KeywordAttribute keywordAttr = addAttribute(KeywordAttribute.class);
@@ -61,25 +59,14 @@ public final class GermanStemFilter extends TokenFilter
     }
 
     /**
-     * Builds a GermanStemFilter that uses an exclusion table.
-     * @deprecated use {@link KeywordAttribute} with {@link KeywordMarkerFilter} instead.
-     */
-    @Deprecated
-    public GermanStemFilter( TokenStream in, Set<?> exclusionSet )
-    {
-      this( in );
-      this.exclusionSet = exclusionSet;
-    }
-
-    /**
      * @return  Returns true for next token in the stream, or false at EOS
      */
     @Override
     public boolean incrementToken() throws IOException {
       if (input.incrementToken()) {
         String term = termAtt.toString();
-        // Check the exclusion table.
-        if (!keywordAttr.isKeyword() && (exclusionSet == null || !exclusionSet.contains(term))) {
+
+        if (!keywordAttr.isKeyword()) {
           String s = stemmer.stem(term);
           // If not stemmed, don't waste the time adjusting the token.
           if ((s != null) && !s.equals(term))
@@ -100,15 +87,4 @@ public final class GermanStemFilter extends TokenFilter
         this.stemmer = stemmer;
       }
     }
-
-
-    /**
-     * Set an alternative exclusion list for this filter.
-     * @deprecated use {@link KeywordAttribute} with {@link KeywordMarkerFilter} instead.
-     */
-    @Deprecated
-    public void setExclusionSet( Set<?> exclusionSet )
-    {
-      this.exclusionSet = exclusionSet;
-    }
 }
