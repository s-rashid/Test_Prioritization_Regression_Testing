diff --git a/solr/src/java/org/apache/solr/search/DocSetHitCollector.java b/solr/src/java/org/apache/solr/search/DocSetHitCollector.java
index c0067a7..3caafa9 100644
--- a/solr/src/java/org/apache/solr/search/DocSetHitCollector.java
+++ b/solr/src/java/org/apache/solr/search/DocSetHitCollector.java
@@ -45,6 +45,7 @@ class DocSetCollector extends Collector {
     this.maxDoc = maxDoc;
     this.scratch = new int[smallSetSize];
   }
+  @Override
   public void collect(int doc) throws IOException {
     doc += base;
     // optimistically collect the first docs in an array
@@ -77,13 +78,16 @@ class DocSetCollector extends Collector {
     }
   }
 
+  @Override
   public void setScorer(Scorer scorer) throws IOException {
   }
 
+  @Override
   public void setNextReader(AtomicReaderContext context) throws IOException {
     this.base = context.docBase;
   }
 
+  @Override
   public boolean acceptsDocsOutOfOrder() {
     return false;
   }
@@ -97,6 +101,7 @@ class DocSetDelegateCollector extends DocSetCollector {
     this.collector = collector;
   }
 
+  @Override
   public void collect(int doc) throws IOException {
     collector.collect(doc);
 
@@ -120,6 +125,7 @@ class DocSetDelegateCollector extends DocSetCollector {
     pos++;
   }
 
+  @Override
   public DocSet getDocSet() {
     if (pos<=scratch.length) {
       // assumes docs were collected in sorted order!
@@ -131,10 +137,12 @@ class DocSetDelegateCollector extends DocSetCollector {
     }
   }
 
+  @Override
   public void setScorer(Scorer scorer) throws IOException {
     collector.setScorer(scorer);
   }
 
+  @Override
   public void setNextReader(AtomicReaderContext context) throws IOException {
     collector.setNextReader(context);
     this.base = context.docBase;
