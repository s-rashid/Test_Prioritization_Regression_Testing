diff --git a/lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.java b/lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.java
index acef580..6f1438a 100755
--- a/lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.java
+++ b/lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.java
@@ -18,10 +18,10 @@ package org.apache.lucene.index;
  */
 
 import java.io.IOException;
-import java.util.Random;
 
 import org.apache.lucene.analysis.MockAnalyzer;
 import org.apache.lucene.document.Document;
+import org.apache.lucene.index.codecs.CodecProvider;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.PhraseQuery;
@@ -64,7 +64,7 @@ public class TestLazyProxSkipping extends LuceneTestCase {
       
     }
     
-    private void createIndex(Random random, int numHits) throws IOException {
+    private void createIndex(int numHits) throws IOException {
         int numDocs = 500;
         
         Directory directory = new SeekCountingDirectory(new RAMDirectory());
@@ -106,8 +106,8 @@ public class TestLazyProxSkipping extends LuceneTestCase {
         return this.searcher.search(pq, null, 1000).scoreDocs;        
     }
     
-    private void performTest(Random random, int numHits) throws IOException {
-        createIndex(random, numHits);
+    private void performTest(int numHits) throws IOException {
+        createIndex(numHits);
         this.seeksCounter = 0;
         ScoreDoc[] hits = search();
         // verify that the right number of docs was found
@@ -119,9 +119,12 @@ public class TestLazyProxSkipping extends LuceneTestCase {
     }
     
     public void testLazySkipping() throws IOException {
-        // test whether only the minimum amount of seeks() are performed
-        performTest(random, 5);
-        performTest(random, 10);
+        // test whether only the minimum amount of seeks()
+        // are performed
+        if (!CodecProvider.getDefaultCodec().equals("SimpleText")) {
+          performTest(5);
+          performTest(10);
+        }
     }
     
     public void testSeek() throws IOException {
