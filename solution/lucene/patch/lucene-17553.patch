diff --git a/modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.java b/modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.java
index 8116d19..1b9bf9f 100644
--- a/modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.java
+++ b/modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.java
@@ -1,4 +1,4 @@
-/* The following code was generated by JFlex 1.5.0-SNAPSHOT on 12/4/10 7:24 PM */
+/* The following code was generated by JFlex 1.5.0-SNAPSHOT on 2/9/11 11:45 AM */
 
 package org.apache.lucene.analysis.standard;
 
@@ -26,14 +26,15 @@ WARNING: if you change ClassicTokenizerImpl.jflex and need to regenerate
 
 */
 
+import java.io.Reader;
 import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 
 
 /**
  * This class is a scanner generated by 
  * <a href="http://www.jflex.de/">JFlex</a> 1.5.0-SNAPSHOT
- * on 12/4/10 7:24 PM from the specification file
- * <tt>C:/cygwin/home/us/svn/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.jflex</tt>
+ * on 2/9/11 11:45 AM from the specification file
+ * <tt>C:/Users/rmuir/workspace/lucene-2911/modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.jflex</tt>
  */
 class ClassicTokenizerImpl implements StandardTokenizerInterface {
 
@@ -681,44 +682,44 @@ public final void getText(CharTermAttribute t) {
       zzMarkedPos = zzMarkedPosL;
 
       switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
-        case 5: 
-          { return NUM;
+        case 10: 
+          { return EMAIL;
           }
         case 11: break;
-        case 9: 
-          { return ACRONYM;
+        case 2: 
+          { return ALPHANUM;
           }
         case 12: break;
-        case 7: 
-          { return COMPANY;
+        case 4: 
+          { return HOST;
           }
         case 13: break;
-        case 10: 
-          { return EMAIL;
-          }
-        case 14: break;
         case 1: 
           { /* ignore */
           }
+        case 14: break;
+        case 8: 
+          { return ACRONYM_DEP;
+          }
         case 15: break;
-        case 6: 
-          { return APOSTROPHE;
+        case 5: 
+          { return NUM;
           }
         case 16: break;
-        case 3: 
-          { return CJ;
+        case 9: 
+          { return ACRONYM;
           }
         case 17: break;
-        case 8: 
-          { return ACRONYM_DEP;
+        case 7: 
+          { return COMPANY;
           }
         case 18: break;
-        case 2: 
-          { return ALPHANUM;
+        case 6: 
+          { return APOSTROPHE;
           }
         case 19: break;
-        case 4: 
-          { return HOST;
+        case 3: 
+          { return CJ;
           }
         case 20: break;
         default:
