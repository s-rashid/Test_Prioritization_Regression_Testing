diff --git a/solr/src/test/org/apache/solr/update/DocumentBuilderTest.java b/solr/src/test/org/apache/solr/update/DocumentBuilderTest.java
index cdbf8e1..4a4df13 100644
--- a/solr/src/test/org/apache/solr/update/DocumentBuilderTest.java
+++ b/solr/src/test/org/apache/solr/update/DocumentBuilderTest.java
@@ -67,6 +67,40 @@ public class DocumentBuilderTest extends SolrTestCaseJ4 {
   }
 
   @Test
+  public void testExceptions() 
+  {
+    SolrCore core = h.getCore();
+    
+    // make sure a null value is not indexed
+    SolrInputDocument doc = new SolrInputDocument();
+    doc.addField( "id", "123", 1.0f );
+    doc.addField( "unknown", "something", 1.0f );
+    try {
+      DocumentBuilder.toDocument( doc, core.getSchema() );
+      fail( "added an unknown field" );
+    }
+    catch( Exception ex ) {
+      assertTrue( "should have document ID", ex.getMessage().indexOf( "doc=123" ) > 0 );
+    }
+    doc.remove( "unknown" );
+    
+
+    doc.addField( "weight", "not a number", 1.0f );
+    try {
+      DocumentBuilder.toDocument( doc, core.getSchema() );
+      fail( "invalid 'float' field value" );
+    }
+    catch( Exception ex ) {
+      assertTrue( "should have document ID", ex.getMessage().indexOf( "doc=123" ) > 0 );
+      assertTrue( "cause is number format", ex.getCause() instanceof NumberFormatException );
+    }
+    
+    // now make sure it is OK
+    doc.setField( "weight", "1.34", 1.0f );
+    DocumentBuilder.toDocument( doc, core.getSchema() );
+  }
+
+  @Test
   public void testMultiField() throws Exception {
     SolrCore core = h.getCore();
