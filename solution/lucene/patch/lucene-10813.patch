diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
index 76e41be..fe1b2d2 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
@@ -16,10 +16,6 @@
  */
 package org.apache.solr.handler.dataimport;
 
-import static org.apache.solr.handler.dataimport.AbstractDataImportHandlerTestCase.createMap;
-
-import org.apache.solr.SolrTestCaseJ4;
-import org.junit.Assert;
 import org.junit.Test;
 
 import java.io.File;
@@ -39,7 +35,7 @@ import java.util.concurrent.TimeUnit;
  * @version $Id$
  * @since solr 1.3
  */
-public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
+public class TestXPathEntityProcessor extends AbstractDataImportHandlerTestCase {
   boolean simulateSlowReader;
   boolean simulateSlowResultProcessor;
   int rowsToRead = -1;
@@ -58,7 +54,7 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
     fields.add(createMap("column", "title", "xpath", "/catalog/cd/title"));
     fields.add(createMap("column", "artist", "xpath", "/catalog/cd/artist"));
     fields.add(createMap("column", "year", "xpath", "/catalog/cd/year"));
-    Context c = AbstractDataImportHandlerTestCase.getContext(null,
+    Context c = getContext(null,
             new VariableResolverImpl(), getDataSource(cdData), Context.FULL_DUMP, fields, entityAttrs);
     XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor();
     xPathEntityProcessor.init(c);
@@ -69,10 +65,10 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
         break;
       result.add(row);
     }
-    Assert.assertEquals(3, result.size());
-    Assert.assertEquals("Empire Burlesque", result.get(0).get("title"));
-    Assert.assertEquals("Bonnie Tyler", result.get(1).get("artist"));
-    Assert.assertEquals("1982", result.get(2).get("year"));
+    assertEquals(3, result.size());
+    assertEquals("Empire Burlesque", result.get(0).get("title"));
+    assertEquals("Bonnie Tyler", result.get(1).get("artist"));
+    assertEquals("1982", result.get(2).get("year"));
   }
 
   @Test
@@ -81,7 +77,7 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
             XPathEntityProcessor.FOR_EACH, "/root");
     List fields = new ArrayList();
     fields.add(createMap("column", "a", "xpath", "/root/a", DataImporter.MULTI_VALUED, "true"));
-    Context c = AbstractDataImportHandlerTestCase.getContext(null,
+    Context c = getContext(null,
             new VariableResolverImpl(), getDataSource(testXml), Context.FULL_DUMP, fields, entityAttrs);
     XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor();
     xPathEntityProcessor.init(c);
@@ -92,7 +88,7 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
         break;
       result.add(row);
     }
-    Assert.assertEquals(2, ((List)result.get(0).get("a")).size());
+    assertEquals(2, ((List)result.get(0).get("a")).size());
   }
 
   @Test
@@ -101,7 +97,7 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
             XPathEntityProcessor.FOR_EACH, "/root");
     List fields = new ArrayList();
     fields.add(createMap("column", "a", "xpath", "/root/a" ,"flatten","true"));
-    Context c = AbstractDataImportHandlerTestCase.getContext(null,
+    Context c = getContext(null,
             new VariableResolverImpl(), getDataSource(testXmlFlatten), Context.FULL_DUMP, fields, entityAttrs);
     XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor();
     xPathEntityProcessor.init(c);
@@ -112,7 +108,7 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
         break;
       result = row;
     }
-    Assert.assertEquals("1B2", result.get("a"));
+    assertEquals("1B2", result.get("a"));
   }
 
   @Test
@@ -126,7 +122,7 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
     fields.add(createMap("column", "title", "xpath", "/catalog/cd/title"));
     fields.add(createMap("column", "artist", "xpath", "/catalog/cd/artist"));
     fields.add(createMap("column", "year", "xpath", "/catalog/cd/year"));
-    Context c = AbstractDataImportHandlerTestCase.getContext(null,
+    Context c = getContext(null,
         new VariableResolverImpl(), getDataSource(cdData), Context.FULL_DUMP, fields, entityAttrs);
     XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor() {
       private int count;
@@ -180,14 +176,14 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
     
     // confirm that publisher thread stops.
     xPathEntityProcessor.publisherThread.join(1000);
-    Assert.assertEquals("Expected thread to stop", false, xPathEntityProcessor.publisherThread.isAlive());
+    assertEquals("Expected thread to stop", false, xPathEntityProcessor.publisherThread.isAlive());
     
-    Assert.assertEquals(rowsToRead < 0 ? 3 : rowsToRead, result.size());
+    assertEquals(rowsToRead < 0 ? 3 : rowsToRead, result.size());
     
     if (rowsToRead < 0) {
-      Assert.assertEquals("Empire Burlesque", result.get(0).get("title"));
-      Assert.assertEquals("Bonnie Tyler", result.get(1).get("artist"));
-      Assert.assertEquals("1982", result.get(2).get("year"));
+      assertEquals("Empire Burlesque", result.get(0).get("title"));
+      assertEquals("Bonnie Tyler", result.get(1).get("artist"));
+      assertEquals("1982", result.get(2).get("year"));
     }
   }
 
@@ -221,7 +217,7 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
     Map entityAttrs = createMap("name", "e",
             XPathEntityProcessor.USE_SOLR_ADD_SCHEMA, "true", "xsl", ""
             + new File(tmpdir, "x.xsl").getAbsolutePath(), "url", "cd.xml");
-    Context c = AbstractDataImportHandlerTestCase.getContext(null,
+    Context c = getContext(null,
             new VariableResolverImpl(), getDataSource(cdData), Context.FULL_DUMP, null, entityAttrs);
     XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor();
     xPathEntityProcessor.init(c);
@@ -232,10 +228,10 @@ public class TestXPathEntityProcessor extends SolrTestCaseJ4 {
         break;
       result.add(row);
     }
-    Assert.assertEquals(3, result.size());
-    Assert.assertEquals("Empire Burlesque", result.get(0).get("title"));
-    Assert.assertEquals("Bonnie Tyler", result.get(1).get("artist"));
-    Assert.assertEquals("1982", result.get(2).get("year"));
+    assertEquals(3, result.size());
+    assertEquals("Empire Burlesque", result.get(0).get("title"));
+    assertEquals("Bonnie Tyler", result.get(1).get("artist"));
+    assertEquals("1982", result.get(2).get("year"));
   }
 
   private DataSource<Reader> getDataSource(final String xml) {
