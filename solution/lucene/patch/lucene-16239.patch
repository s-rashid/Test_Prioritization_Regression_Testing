diff --git a/solr/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
index c87a8b8..d83c97e 100644
--- a/solr/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
@@ -19,13 +19,9 @@ package org.apache.solr.analysis;
 
 import java.io.IOException;
 import java.io.Reader;
-import java.util.ArrayList;
-import java.util.List;
 import java.util.Map;
-import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-import org.apache.lucene.analysis.Token;
 import org.apache.lucene.analysis.Tokenizer;
 import org.apache.lucene.analysis.pattern.PatternTokenizer;
 import org.apache.solr.common.SolrException;
@@ -104,65 +100,4 @@ public class PatternTokenizerFactory extends BaseTokenizerFactory
       throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, ex );
     }
   }
-  
-  /**
-   * This behaves just like String.split( ), but returns a list of Tokens
-   * rather then an array of strings
-   * NOTE: This method is not used in 1.4.
-   * @deprecated
-   */
-  @Deprecated
-  public static List<Token> split( Matcher matcher, String input )
-  {
-    int index = 0;
-    int lastNonEmptySize = Integer.MAX_VALUE;
-    ArrayList<Token> matchList = new ArrayList<Token>();
-
-    // Add segments before each match found
-    while(matcher.find()) {
-      String match = input.subSequence(index, matcher.start()).toString();
-      matchList.add( new Token( match, index, matcher.start()) );
-      index = matcher.end();
-      if( match.length() > 0 ) {
-        lastNonEmptySize = matchList.size();
-      }
-    }
-
-    // If no match is found, return the full string
-    if (index == 0) {
-      matchList.add( new Token( input, 0, input.length()) );
-    }
-    else { 
-      String match = input.subSequence(index, input.length()).toString();
-      matchList.add( new Token( match, index, input.length()) );
-      if( match.length() > 0 ) {
-        lastNonEmptySize = matchList.size();
-      }
-    }
-    
-    // Don't use trailing empty strings.  This behavior matches String.split();
-    if( lastNonEmptySize < matchList.size() ) {
-      return matchList.subList( 0, lastNonEmptySize );
-    }
-    return matchList;
-  }
-  
-  /**
-   * Create tokens from the matches in a matcher 
-   * NOTE: This method is not used in 1.4.
-   * @deprecated
-   */
-  @Deprecated
-  public static List<Token> group( Matcher matcher, String input, int group )
-  {
-    ArrayList<Token> matchList = new ArrayList<Token>();
-    while(matcher.find()) {
-      Token t = new Token( 
-        matcher.group(group), 
-        matcher.start(group), 
-        matcher.end(group) );
-      matchList.add( t );
-    }
-    return matchList;
-  }
 }
