diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java
index f0622e9..e6dd580 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java
@@ -20,7 +20,6 @@ import org.eclipse.core.resources.*;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.Path;
-import org.eclipse.core.runtime.Platform;
 import org.eclipse.core.runtime.preferences.IEclipsePreferences;
 import org.eclipse.jdt.core.*;
 import org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants;
@@ -1025,31 +1024,29 @@ public void testJdkLevelRoot() throws JavaModelException {
  * Test User Library
  */
 public void testUserLibrary() throws JavaModelException {
-	// TODO (frederic) seems that it should not run if the OS is not Windows
-	if (!Platform.getOS().equals(Platform.OS_WIN32)) return;
 
 	IClasspathEntry[] userEntries = new IClasspathEntry[2];
 
 	// Set first classpath entry
-	IPath path = new Path("d:/tmp/test.jar");
+	IPath path = new Path("/tmp/test.jar");
 	IAccessRule[] pathRules = new IAccessRule[3];
 	pathRules[0] = JavaCore.newAccessRule(new Path("**/forbidden/**"), IAccessRule.K_NON_ACCESSIBLE);
 	pathRules[1] = JavaCore.newAccessRule(new Path("**/discouraged/**"), IAccessRule.K_DISCOURAGED);
 	pathRules[2] = JavaCore.newAccessRule(new Path("**/accessible/**"), IAccessRule.K_ACCESSIBLE);
 	IClasspathAttribute[] extraAttributes = new IClasspathAttribute[2];
 	extraAttributes[0] = JavaCore.newClasspathAttribute("javadoc_location", "http://www.sample-url.org/doc/");
-	extraAttributes[1] = JavaCore.newClasspathAttribute("org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY", "d:/tmp");
+	extraAttributes[1] = JavaCore.newClasspathAttribute("org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY", "/tmp");
 	userEntries[0] = JavaCore.newLibraryEntry(path, null, null, pathRules, extraAttributes, false);
 
 	// Set second classpath entry
-	path = new Path("d:/tmp/test.jar");
+	path = new Path("/tmp/test.jar");
 	pathRules = new IAccessRule[3];
 	pathRules[0] = JavaCore.newAccessRule(new Path("/org/eclipse/forbidden/**"), IAccessRule.K_NON_ACCESSIBLE);
 	pathRules[1] = JavaCore.newAccessRule(new Path("/org/eclipse/discouraged/**"), IAccessRule.K_DISCOURAGED);
 	pathRules[2] = JavaCore.newAccessRule(new Path("/org/eclipse/accessible/**"), IAccessRule.K_ACCESSIBLE);
 	extraAttributes = new IClasspathAttribute[2];
 	extraAttributes[0] = JavaCore.newClasspathAttribute("javadoc_location", "http://www.sample-url.org/doc/");
-	extraAttributes[1] = JavaCore.newClasspathAttribute("org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY", "d:/tmp");
+	extraAttributes[1] = JavaCore.newClasspathAttribute("org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY", "/tmp");
 	userEntries[1] = JavaCore.newLibraryEntry(path, null, null, pathRules, extraAttributes, false);
 	
 	// Create user library
@@ -1064,10 +1061,10 @@ public void testUserLibrary() throws JavaModelException {
 	StringBuffer expected = new StringBuffer();
 	expected.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n");
 	expected.append("<userlibrary systemlibrary=\"false\" version=\"1\">\r\n");
-	expected.append("	<archive path=\"D:/tmp/test.jar\">\r\n");
+	expected.append("	<archive path=\"/tmp/test.jar\">\r\n");
 	expected.append("		<attributes>\r\n");
 	expected.append("			<attribute value=\"http://www.sample-url.org/doc/\" name=\"javadoc_location\"/>\r\n");
-	expected.append("			<attribute value=\"d:/tmp\" name=\"org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY\"/>\r\n");
+	expected.append("			<attribute value=\"/tmp\" name=\"org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY\"/>\r\n");
 	expected.append("		</attributes>\r\n");
 	expected.append("		<accessrules>\r\n");
 	expected.append("			<accessrule kind=\"nonaccessible\" pattern=\"**/forbidden/**\"/>\r\n");
@@ -1075,10 +1072,10 @@ public void testUserLibrary() throws JavaModelException {
 	expected.append("			<accessrule kind=\"accessible\" pattern=\"**/accessible/**\"/>\r\n");
 	expected.append("		</accessrules>\r\n");
 	expected.append("	</archive>\r\n");
-	expected.append("	<archive path=\"D:/tmp/test.jar\">\r\n");
+	expected.append("	<archive path=\"/tmp/test.jar\">\r\n");
 	expected.append("		<attributes>\r\n");
 	expected.append("			<attribute value=\"http://www.sample-url.org/doc/\" name=\"javadoc_location\"/>\r\n");
-	expected.append("			<attribute value=\"d:/tmp\" name=\"org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY\"/>\r\n");
+	expected.append("			<attribute value=\"/tmp\" name=\"org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY\"/>\r\n");
 	expected.append("		</attributes>\r\n");
 	expected.append("		<accessrules>\r\n");
 	expected.append("			<accessrule kind=\"nonaccessible\" pattern=\"/org/eclipse/forbidden/**\"/>\r\n");
@@ -1087,6 +1084,7 @@ public void testUserLibrary() throws JavaModelException {
 	expected.append("		</accessrules>\r\n");
 	expected.append("	</archive>\r\n");
 	expected.append("</userlibrary>\r\n");
-	assertEquals("Invalid library contents", expected.toString(), libraryPreference);
+	String expectedString = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(expected.toString());
+	assertEquals("Invalid library contents", expectedString, org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(libraryPreference));
 }
 }
