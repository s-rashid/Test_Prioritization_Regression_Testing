diff --git a/org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/AptUIPlugin.java b/org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/AptUIPlugin.java
new file mode 100644
index 0000000..d6a0047
--- /dev/null
+++ b/org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/AptUIPlugin.java
@@ -0,0 +1,54 @@
+package org.eclipse.jdt.apt.ui;
+
+import org.eclipse.ui.plugin.*;
+import org.eclipse.jface.resource.ImageDescriptor;
+import org.osgi.framework.BundleContext;
+
+/**
+ * The main plugin class to be used in the desktop.
+ */
+public class AptUIPlugin extends AbstractUIPlugin {
+
+	//The shared instance.
+	private static AptUIPlugin plugin;
+	
+	/**
+	 * The constructor.
+	 */
+	public AptUIPlugin() {
+		plugin = this;
+	}
+
+	/**
+	 * This method is called upon plug-in activation
+	 */
+	public void start(BundleContext context) throws Exception {
+		super.start(context);
+	}
+
+	/**
+	 * This method is called when the plug-in is stopped
+	 */
+	public void stop(BundleContext context) throws Exception {
+		super.stop(context);
+		plugin = null;
+	}
+
+	/**
+	 * Returns the shared instance.
+	 */
+	public static AptUIPlugin getDefault() {
+		return plugin;
+	}
+
+	/**
+	 * Returns an image descriptor for the image file at the given
+	 * plug-in relative path.
+	 *
+	 * @param path the path
+	 * @return the image descriptor
+	 */
+	public static ImageDescriptor getImageDescriptor(String path) {
+		return AbstractUIPlugin.imageDescriptorFromPlugin("org.eclipse.jdt.apt.ui", path);
+	}
+}
