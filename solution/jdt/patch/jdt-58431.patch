diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfPackage.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfPackage.java
index 9091628..1486784 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfPackage.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfPackage.java
@@ -33,35 +33,44 @@ public HashtableOfPackage(int size) {
 	this.valueTable = new PackageBinding[extraRoom];
 }
 public boolean containsKey(char[] key) {
-	int index = CharOperation.hashCode(key) % valueTable.length;
+	int length = keyTable.length,
+		index = CharOperation.hashCode(key) % length;
 	int keyLength = key.length;
 	char[] currentKey;
 	while ((currentKey = keyTable[index]) != null) {
 		if (currentKey.length == keyLength && CharOperation.equals(currentKey, key))
 			return true;
-		index = (index + 1) % keyTable.length;
+		if (++index == length) {
+			index = 0;
+		}
 	}
 	return false;
 }
 public PackageBinding get(char[] key) {
-	int index = CharOperation.hashCode(key) % valueTable.length;
+	int length = keyTable.length,
+		index = CharOperation.hashCode(key) % length;
 	int keyLength = key.length;
 	char[] currentKey;
 	while ((currentKey = keyTable[index]) != null) {
 		if (currentKey.length == keyLength && CharOperation.equals(currentKey, key))
 			return valueTable[index];
-		index = (index + 1) % keyTable.length;
+		if (++index == length) {
+			index = 0;
+		}
 	}
 	return null;
 }
 public PackageBinding put(char[] key, PackageBinding value) {
-	int index = CharOperation.hashCode(key) % valueTable.length;
+	int length = keyTable.length,
+		index = CharOperation.hashCode(key) % length;
 	int keyLength = key.length;
 	char[] currentKey;
 	while ((currentKey = keyTable[index]) != null) {
 		if (currentKey.length == keyLength && CharOperation.equals(currentKey, key))
 			return valueTable[index] = value;
-		index = (index + 1) % keyTable.length;
+		if (++index == length) {
+			index = 0;
+		}
 	}
 	keyTable[index] = key;
 	valueTable[index] = value;
