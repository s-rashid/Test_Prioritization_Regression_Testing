diff --git a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/JavaSourceFilePrintWriter.java b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/JavaSourceFilePrintWriter.java
index c3627df..a2aa656 100644
--- a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/JavaSourceFilePrintWriter.java
+++ b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/JavaSourceFilePrintWriter.java
@@ -13,7 +13,6 @@ package org.eclipse.jdt.apt.core.internal.env;
 
 import java.io.PrintWriter;
 import java.io.StringWriter;
-import java.io.UnsupportedEncodingException;
 
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.jdt.apt.core.AptPlugin;
@@ -21,67 +20,50 @@ import org.eclipse.jdt.apt.core.env.Phase;
 import org.eclipse.jdt.apt.core.internal.generatedfile.FileGenerationResult;
 import org.eclipse.jdt.apt.core.internal.generatedfile.GeneratedFileManager;
 import org.eclipse.jdt.core.ICompilationUnit;
-import org.eclipse.jdt.core.JavaModelException;
+
 
 public class JavaSourceFilePrintWriter extends PrintWriter {
 
-    public JavaSourceFilePrintWriter( String typeName, StringWriter sw, ProcessorEnvImpl env, String charsetName )
+    public JavaSourceFilePrintWriter( String typeName, StringWriter sw, ProcessorEnvImpl env )
     {
         super( sw );
         _sw = sw;
         _typeName = typeName;
         _env = env;
-        _charsetName = charsetName;
     }
 	
     public void close()
     {
-        try
+    	String contents = _sw.toString();
+        super.close();
+        GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager(_env.getProject());
+        Phase phase = _env.getPhase();
+	
+        if ( phase == Phase.RECONCILE )
         {
-            String contents = _sw.toString();
-            super.close();
-            GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager(_env.getProject());
-            Phase phase = _env.getPhase();
-		
-            if ( phase == Phase.RECONCILE )
-            {
-            	ICompilationUnit parentCompilationUnit = _env.getCompilationUnit();
-                FileGenerationResult result  = gfm.generateFileDuringReconcile( 
-                    parentCompilationUnit, _typeName, contents, parentCompilationUnit.getOwner(), null, null );
-				if ( result != null )
-					_env.addGeneratedFile(result.getFile(), result.isModified());
-            }
-            else if ( phase == Phase.BUILD)	
-            {
-				FileGenerationResult result = gfm.generateFileDuringBuild( _env.getFile(),  _typeName, contents, null /* progress monitor */, _charsetName );
+        	ICompilationUnit parentCompilationUnit = _env.getCompilationUnit();
+            FileGenerationResult result  = gfm.generateFileDuringReconcile( 
+                parentCompilationUnit, _typeName, contents, parentCompilationUnit.getOwner(), null, null );
+			if ( result != null )
+				_env.addGeneratedFile(result.getFile(), result.isModified());
+        }
+        else if ( phase == Phase.BUILD)	
+        {
+        	try {
+				FileGenerationResult result = gfm.generateFileDuringBuild( _env.getFile(),  _typeName, contents, null /* progress monitor */ );
 				_env.addGeneratedFile( result.getFile(), result.isModified());
 				
 				// don't set to false, we don't want to overwrite a previous iteration setting it to true
 				if ( result.getSourcePathChanged() )
 					_env.setSourcePathChanged( true );
-            }
-            else
-            {
-                assert false : "Unexpected phase value: " + phase ; //$NON-NLS-1$
-            }
+        	}
+        	catch (CoreException ce) {
+        		AptPlugin.log(ce, "Failure generating file"); //$NON-NLS-1$
+        	}
         }
-        catch ( JavaModelException jme )
+        else
         {
-            // TODO:  handle this exception in a nicer way.
-            AptPlugin.log(jme, "Unexpected failure closing the JavaSourceFilePrintWriter"); //$NON-NLS-1$
-            throw new RuntimeException( jme );
-        }
-        catch ( CoreException ce )
-        {
-            // TODO:  handle this exception
-            AptPlugin.log(ce, "Unexpected failure closing the JavaSourceFilePrintWriter"); //$NON-NLS-1$
-            throw new RuntimeException( ce );
-        }
-        catch( UnsupportedEncodingException use )
-        {
-        	AptPlugin.log(use, "Could not encode"); //$NON-NLS-1$
-        	// TODO: handle this exception
-        	throw new RuntimeException( use );
+            assert false : "Unexpected phase value: " + phase ; //$NON-NLS-1$
         }
     }
 			
@@ -89,6 +71,4 @@ public class JavaSourceFilePrintWriter extends PrintWriter {
     private StringWriter _sw;
     private String _typeName;
     private ProcessorEnvImpl _env;
-    private String _charsetName;
-	
 }
