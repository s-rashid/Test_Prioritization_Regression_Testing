diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/DoubleCache.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/DoubleCache.java
index b050f04..25ce74e 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/DoubleCache.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/DoubleCache.java
@@ -69,13 +69,34 @@ public boolean containsKey(double key) {
 	}
 	return false;
 }
-/** Gets the object associated with the specified key in the
- * hashtable.
- * @param key <CODE>double</CODE> the specified key
- * @return int the element for the key or -1 if the key is not
- *  defined in the hash table.
+/**
+ * Puts the specified element into the hashtable, using the specified
+ * key.  The element may be retrieved by doing a get() with the same key.
+ * 
+ * @param key <CODE>double</CODE> the specified key in the hashtable
+ * @param value <CODE>int</CODE> the specified element
+ * @return int value
  */
-public int get(double key) {
+public int put(double key, int value) {
+	if (elementSize == keyTable.length) {
+		// resize
+		System.arraycopy(keyTable, 0, (keyTable = new double[elementSize * 2]), 0, elementSize);
+		System.arraycopy(valueTable, 0, (valueTable = new int[elementSize * 2]), 0, elementSize);
+	}
+	keyTable[elementSize] = key;
+	valueTable[elementSize] = value;
+	elementSize++;
+	return value;
+}
+/**
+ * Puts the specified element into the hashtable, using the specified
+ * key.  The element may be retrieved by doing a get() with the same key.
+ * 
+ * @param key <CODE>double</CODE> the specified key in the hashtable
+ * @param value <CODE>int</CODE> the specified element
+ * @return int value
+ */
+public int putIfAbsent(double key, int value) {
 	if (key == 0.0) {
 		for (int i = 0, max = elementSize; i < max; i++) {
 			if (keyTable[i] == 0.0) {
@@ -94,17 +115,6 @@ public int get(double key) {
 			}
 		}
 	}
-	return -1;
-}
-/**
- * Puts the specified element into the hashtable, using the specified
- * key.  The element may be retrieved by doing a get() with the same key.
- * 
- * @param key <CODE>double</CODE> the specified key in the hashtable
- * @param value <CODE>int</CODE> the specified element
- * @return int value
- */
-public int put(double key, int value) {
 	if (elementSize == keyTable.length) {
 		// resize
 		System.arraycopy(keyTable, 0, (keyTable = new double[elementSize * 2]), 0, elementSize);
@@ -113,7 +123,7 @@ public int put(double key, int value) {
 	keyTable[elementSize] = key;
 	valueTable[elementSize] = value;
 	elementSize++;
-	return value;
+	return -value; // negative when added, assumes value is > 0
 }
 /**
  * Converts to a rather lengthy String.
