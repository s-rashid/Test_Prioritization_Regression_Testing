diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java
index 8c21a8c..7566dcc 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java
@@ -120,17 +120,24 @@ public class DoStatement extends Statement {
 		if (action != null) {
 			action.generateCode(currentScope, codeStream);
 		}
-		// generate condition
-		if (continueLabel != null) {
-			continueLabel.place();
-			condition.generateOptimizedBoolean(
-				currentScope,
-				codeStream,
-				actionLabel,
-				null,
-				true);
+		Constant cst = condition.optimizedBooleanConstant();
+		boolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;		
+		if (isConditionOptimizedFalse){
+			condition.generateCode(currentScope, codeStream, false);
+		} else {
+			// generate condition
+			if (continueLabel != null) {
+				continueLabel.place();
+				condition.generateOptimizedBoolean(
+					currentScope,
+					codeStream,
+					actionLabel,
+					null,
+					true);
+			}
 		}
-		breakLabel.place();
+		if (breakLabel.hasForwardReferences())
+			breakLabel.place();
 
 		// May loose some local variable initializations : affecting the local variable attributes
 		if (mergedInitStateIndex != -1) {
@@ -138,7 +145,6 @@ public class DoStatement extends Statement {
 			codeStream.addDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);
 		}
 		codeStream.recordPositionsFrom(pc, this.sourceStart);
-
 	}
 
 	public StringBuffer printStatement(int indent, StringBuffer output) {
