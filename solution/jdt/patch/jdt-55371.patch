diff --git a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java
index 8c07c57..6c6bcd1 100644
--- a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java
+++ b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java
@@ -12,9 +12,6 @@
 
 package org.eclipse.jdt.apt.core.internal.generatedfile;
 
-import java.util.HashSet;
-import java.util.Set;
-
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IFolder;
 import org.eclipse.core.resources.IProject;
@@ -25,7 +22,7 @@ import org.eclipse.core.resources.IResourceDelta;
 import org.eclipse.core.resources.IResourceDeltaVisitor;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.jdt.apt.core.AptPlugin;
-import org.eclipse.jdt.apt.core.util.AptConfig;
+import org.eclipse.jdt.core.IJavaProject;
 import org.eclipse.jdt.core.JavaCore;
 
 public class GeneratedResourceChangeListener implements IResourceChangeListener 
@@ -42,7 +39,6 @@ public class GeneratedResourceChangeListener implements IResourceChangeListener
 					AptPlugin.trace("[ thread= " + Thread.currentThread().getName() + " ] ---- got a pre-build event"); //$NON-NLS-1$ //$NON-NLS-2$
 				final PreBuildVisitor visitor = new PreBuildVisitor();
 				event.getDelta().accept( visitor );
-				addGeneratedSrcFolderTo(visitor.getProjectsThatNeedGenSrcFolder());
 			}
 			catch ( CoreException ce )
 			{
@@ -53,7 +49,8 @@ public class GeneratedResourceChangeListener implements IResourceChangeListener
 		else if ( event.getType() == IResourceChangeEvent.PRE_CLOSE )
 		{
 			IProject p = (IProject)event.getResource();
-			GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( p );
+			IJavaProject jp = JavaCore.create(p);
+			GeneratedFileManager gfm = AptPlugin.getAptProject(jp).getGeneratedFileManager();
 			gfm.projectClosed();
 		}
 		else if ( event.getType() == IResourceChangeEvent.PRE_DELETE )
@@ -61,27 +58,15 @@ public class GeneratedResourceChangeListener implements IResourceChangeListener
 			// TODO:  need to update projectDeleted() to delete the generated_src folder
 			// in an async thread.  The resource tree is locked here.
 			IProject p = (IProject)event.getResource();
-			GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( p );
+			IJavaProject jp = JavaCore.create(p);
+			GeneratedFileManager gfm = AptPlugin.getAptProject(jp).getGeneratedFileManager();
 			gfm.projectDeleted();
+			AptPlugin.deleteAptProject(jp);
 		}
 	}
-	
-	private void addGeneratedSrcFolderTo(final Set<IProject> projs ){
-	
-		for(IProject proj : projs ){
-			final GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager(proj);
-			if(AptConfig.isEnabled(JavaCore.create(proj)))
-				gfm.ensureGeneratedSourceFolder(null);
-		}
-
-	}
 
 	public class PreBuildVisitor implements IResourceDeltaVisitor
 	{
-		// projects that we need to add the generated source folder to.
-		private final Set<IProject> _addGenFolderTo = new HashSet<IProject>();
-		// any projects that is closed or about to be deleted
-		private final Set<IProject> _removedProjects = new HashSet<IProject>();
 		public boolean visit(IResourceDelta delta) throws CoreException 
 		{
 			IResource r = delta.getResource();
@@ -91,7 +76,8 @@ public class GeneratedResourceChangeListener implements IResourceChangeListener
 				return true;
 			
 			if( delta.getKind() == IResourceDelta.REMOVED ){
-				GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( project );
+				IJavaProject jp = JavaCore.create(project);
+				GeneratedFileManager gfm = AptPlugin.getAptProject(jp).getGeneratedFileManager();
 				if( r instanceof IFile ){
 					IFile f = (IFile)r;
 					if ( gfm.isParentFile( f ) )
@@ -106,41 +92,11 @@ public class GeneratedResourceChangeListener implements IResourceChangeListener
 				else if( r instanceof IFolder ){			
 					IFolder f = (IFolder) r;
 					if ( gfm.isGeneratedSourceFolder( f ) ){
-						// all deletion occurs before any add (adding the generated source directory)
-						if( !_removedProjects.contains(project) ){							
-							gfm.generatedSourceFolderDeleted();
-							_addGenFolderTo.add(project);
-						}
-						// if the project is already closed or in the process of being
-						// deleted, will ignore this deletion since we cannot correct 
-						// the classpath anyways.
+						gfm.generatedSourceFolderDeleted();
 					}
 				}
-				else if( r instanceof IProject ){	
-					_removedProjects.add((IProject)r);
-				}
-			}
-			else if( r instanceof IProject ){
-				final IProject proj = (IProject)delta.getResource();		
-				if( canUpdate(proj) ){
-					_addGenFolderTo.add(proj);
-				}				
-				else
-					_removedProjects.add(proj);
 			}
-
 			return true;
-		}	
-		
-		Set<IProject> getProjectsThatNeedGenSrcFolder(){
-			_addGenFolderTo.removeAll(_removedProjects);
-			return _addGenFolderTo;
-		}
-		
-		private boolean canUpdate(IProject proj)
-			throws CoreException
-		{
-			return proj.isOpen() && proj.exists() && proj.hasNature(JavaCore.NATURE_ID);
 		}
 	}
 }
