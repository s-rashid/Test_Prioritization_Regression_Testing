diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java
index e030469..1e76e30 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java
@@ -539,7 +539,8 @@ public abstract class AbstractCommentParser implements JavadocTagConstants {
 	 */
 	private boolean parseHref() throws InvalidInputException {
 		int start = this.scanner.getCurrentTokenStartPosition();
-		if (Character.toLowerCase(readChar()) == 'a') {
+		char currentChar = readChar();
+		if (currentChar == 'a' || currentChar == 'A') {
 			this.scanner.currentPosition = this.index;
 			if (readToken() == TerminalTokens.TokenNameIdentifier) {
 				consumeToken();
@@ -585,7 +586,8 @@ public abstract class AbstractCommentParser implements JavadocTagConstants {
 								consumeToken();
 								start = this.scanner.getCurrentTokenStartPosition();
 								if (readChar() == '/') {
-									if (Character.toLowerCase(readChar()) == 'a') {
+									currentChar = readChar();
+									if (currentChar == 'a' || currentChar == 'A') {
 										if (readChar() == '>') {
 											// Valid href
 											return true;
@@ -1161,9 +1163,9 @@ public abstract class AbstractCommentParser implements JavadocTagConstants {
 			idx++;
 			while (this.source[idx] == 'u')
 				idx++;
-			if (!(((c1 = Character.getNumericValue(this.source[idx++])) > 15 || c1 < 0)
-					|| ((c2 = Character.getNumericValue(this.source[idx++])) > 15 || c2 < 0)
-					|| ((c3 = Character.getNumericValue(this.source[idx++])) > 15 || c3 < 0) || ((c4 = Character.getNumericValue(this.source[idx++])) > 15 || c4 < 0))) {
+			if (!(((c1 = ScannerHelper.getNumericValue(this.source[idx++])) > 15 || c1 < 0)
+					|| ((c2 = ScannerHelper.getNumericValue(this.source[idx++])) > 15 || c2 < 0)
+					|| ((c3 = ScannerHelper.getNumericValue(this.source[idx++])) > 15 || c3 < 0) || ((c4 = ScannerHelper.getNumericValue(this.source[idx++])) > 15 || c4 < 0))) {
 				c = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);
 			}
 		}
@@ -1273,9 +1275,9 @@ public abstract class AbstractCommentParser implements JavadocTagConstants {
 			this.index++;
 			while (this.source[this.index] == 'u')
 				this.index++;
-			if (!(((c1 = Character.getNumericValue(this.source[this.index++])) > 15 || c1 < 0)
-					|| ((c2 = Character.getNumericValue(this.source[this.index++])) > 15 || c2 < 0)
-					|| ((c3 = Character.getNumericValue(this.source[this.index++])) > 15 || c3 < 0) || ((c4 = Character.getNumericValue(this.source[this.index++])) > 15 || c4 < 0))) {
+			if (!(((c1 = ScannerHelper.getNumericValue(this.source[this.index++])) > 15 || c1 < 0)
+					|| ((c2 = ScannerHelper.getNumericValue(this.source[this.index++])) > 15 || c2 < 0)
+					|| ((c3 = ScannerHelper.getNumericValue(this.source[this.index++])) > 15 || c3 < 0) || ((c4 = ScannerHelper.getNumericValue(this.source[this.index++])) > 15 || c4 < 0))) {
 				c = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);
 			} else {
 				// TODO (frederic) currently reset to previous position, perhaps signal a syntax error would be more appropriate
