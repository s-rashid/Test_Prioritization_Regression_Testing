diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/IBinaryMethod.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/IBinaryMethod.java
index dcf83da..729d819 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/IBinaryMethod.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/IBinaryMethod.java
@@ -19,6 +19,22 @@ package org.eclipse.jdt.internal.compiler.env;
 public interface IBinaryMethod extends IGenericMethod {
 
 /**
+ * Answer the runtime visible and invisible annotations for this method or null if none.
+ */
+IBinaryAnnotation[] getAnnotations();
+
+/**
+ * Return {@link ClassSignature} for a Class {@link java.lang.Class}.
+ * Return {@link org.eclipse.jdt.internal.compiler.impl.Constant} for compile-time constant of primitive type, as well as String literals.
+ * Return {@link EnumConstantSignature} if value is an enum constant.
+ * Return {@link IBinaryAnnotation} for annotation type.
+ * Return {@link Object}[] for array type.
+ * 
+ * @return default value of this annotation method
+ */
+Object getDefaultValue();
+
+/**
  * Answer the resolved names of the exception types in the
  * class file format as specified in section 4.2 of the Java 2 VM spec
  * or null if the array is empty.
@@ -28,6 +44,12 @@ public interface IBinaryMethod extends IGenericMethod {
 char[][] getExceptionTypeNames();
 
 /**
+ * Answer the receiver's signature which describes the parameter &
+ * return types as specified in section 4.4.4 of the Java 2 VM spec.
+ */
+char[] getGenericSignature();
+
+/**
  * Answer the receiver's method descriptor which describes the parameter &
  * return types as specified in section 4.4.3 of the Java 2 VM spec.
  *
@@ -38,10 +60,10 @@ char[][] getExceptionTypeNames();
 char[] getMethodDescriptor();
 
 /**
- * Answer the receiver's signature which describes the parameter &
- * return types as specified in section 4.4.4 of the Java 2 VM spec.
+ * Answer the annotations on the <code>index</code>th parameter or null if none
+ * @param index the index of the parameter of interest
  */
-char[] getGenericSignature();
+IBinaryAnnotation[] getParameterAnnotations(int index);
 
 /**
  * Answer the name of the method.
