diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java
index 4789c8a..968c017 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java
@@ -945,12 +945,14 @@ public void inlineForwardReferencesFromLabelsTargeting(BranchLabel label, int go
 	if (hasStandardLabel) {
 		for (int i = this.countLabels - 1; i >= 0; i--) {
 			BranchLabel currentLabel = labels[i];
-			if ((currentLabel.position == gotoLocation) && currentLabel.isStandardLabel()){
-				label.appendForwardReferencesFrom(currentLabel);
-				// we should remove the frame corresponding to otherLabel position in order to prevent unused stack frame
-				if (removeFrame) {
-					currentLabel.tagBits &= ~BranchLabel.USED;
-					this.removeStackFrameFor(gotoLocation);
+			if (currentLabel.position == gotoLocation) {
+				if (currentLabel.isStandardLabel()){
+					label.appendForwardReferencesFrom(currentLabel);
+					// we should remove the frame corresponding to otherLabel position in order to prevent unused stack frame
+					if (removeFrame) {
+						currentLabel.tagBits &= ~BranchLabel.USED;
+						this.removeStackFrameFor(gotoLocation);
+					}
 				}
 				/*
 				 Code required to optimized unreachable gotos.
