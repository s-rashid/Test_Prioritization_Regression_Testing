diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java
index 164f8d2..7e1f114 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java
@@ -40,7 +40,7 @@ public static Test suite() {
 static {
 //	org.eclipse.jdt.internal.core.search.BasicSearchEngine.VERBOSE = true;
 //	TESTS_PREFIX =  "testPackageDeclaration";
-//	TESTS_NAMES = new String[] { "testMethodDeclaration11" };
+//	TESTS_NAMES = new String[] { "testMethodReference17" };
 //	TESTS_NUMBERS = new int[] { 113671 };
 //	TESTS_RANGE = new int[] { 16, -1 };
 }
@@ -1551,6 +1551,19 @@ public void testMethodReference16() throws CoreException {
 		this.resultCollector);
 }
 /**
+ * Bug 111416: [search] wrong potential matches on a static method open
+ * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=111416"
+ */
+public void testMethodReference17() throws CoreException {
+	IType type = getCompilationUnit("JavaSearch/src/b111416/X.java").getType("X");
+	IMethod method = type.getMethod("open", new String[] {"QString;"});
+	resultCollector.showAccuracy = true;
+	search(method, REFERENCES, ERASURE_RULE, getJavaSearchScope(), resultCollector);
+	assertSearchResults(
+		"src/b111416/X.java void b111416.X.foo() [open(\"\")] EXACT_MATCH",
+		this.resultCollector);
+}
+/**
  * OrPattern test.
  * (regression test for bug 5862 search : too many matches on search with OrPattern)
  */
