diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java
index 4ab1904..6f420bd 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java
@@ -13,6 +13,7 @@ package org.eclipse.jdt.core.tests.model;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.jdt.core.*;
 import org.eclipse.jdt.internal.core.*;
+import org.eclipse.jdt.internal.core.util.Util;
 
 import junit.framework.Test;
 
@@ -80,7 +81,7 @@ public void setUpSuite() throws Exception {
 // All specified tests which do not belong to the class are skipped...
 static {
 //	TESTS_PREFIX = "testBug";
-//	TESTS_NAMES = new String[] { "Bug78275" };
+//	TESTS_NAMES = new String[] { "testNameWithoutJavaLikeExtension" };
 //	TESTS_NUMBERS = new int[] { 13 };
 //	TESTS_RANGE = new int[] { 16, -1 };
 }
@@ -537,6 +538,14 @@ public void testIsEnumConstant2() throws JavaModelException {
 	IField field = this.cu.getType("X").getField("f1");
 	assertTrue("X#f1 should not be an enum constant", !field.isEnumConstant());
 }
+/*
+ * Ensure that the utility method Util.#getNameWithoutJavaLikeExtension(String) works as expected
+ * (regression test for bug 107735 StringIndexOutOfBoundsException in Util.getNameWithoutJavaLikeExtension())
+ */
+public void testNameWithoutJavaLikeExtension() {
+	String name = Util.getNameWithoutJavaLikeExtension("Test.aj");
+	assertEquals("Unepected name without extension", "Test.aj", name);
+}
 /**
  * Ensures that a compilation unit that does not exist responds
  * false to #exists() and #isOpen()
