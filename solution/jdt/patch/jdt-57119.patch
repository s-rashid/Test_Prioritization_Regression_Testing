diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java
index 299cefe..fc84c15 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java
@@ -62,7 +62,7 @@ public FlowInfo analyseCode(
 		boolean valueRequired) {
 			
 		int pc = codeStream.position;
-		Label falseLabel, endifLabel;
+		BranchLabel falseLabel, endifLabel;
 		if (this.constant != Constant.NotAConstant) {
 			// inlined value
 			if (valueRequired) {
@@ -81,12 +81,12 @@ public FlowInfo analyseCode(
 							currentScope,
 							codeStream,
 							null,
-							(falseLabel = new Label(codeStream)),
+							(falseLabel = new BranchLabel(codeStream)),
 							valueRequired);
 						if (valueRequired) {
 							codeStream.iconst_0();
 							if (falseLabel.hasForwardReferences()) {
-								codeStream.goto_(endifLabel = new Label(codeStream));
+								codeStream.goto_(endifLabel = new BranchLabel(codeStream));
 								codeStream.decrStackSize(1);
 								falseLabel.place();
 								codeStream.iconst_1();
@@ -169,8 +169,8 @@ public FlowInfo analyseCode(
 	public void generateOptimizedBoolean(
 		BlockScope currentScope,
 		CodeStream codeStream,
-		Label trueLabel,
-		Label falseLabel,
+		BranchLabel trueLabel,
+		BranchLabel falseLabel,
 		boolean valueRequired) {
 
 		if ((this.constant != Constant.NotAConstant) && (this.constant.typeID() == T_boolean)) {
