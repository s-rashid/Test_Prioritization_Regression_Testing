diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java
index 2b78e93..b4c759f 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java
@@ -950,20 +950,21 @@ public class ClasspathEntry implements IClasspathEntry {
 	}
 	
 	private String[] getMessageTemplates() {
+		JavaModelManager manager = JavaModelManager.getJavaModelManager();
 		String [] result = new String[AccessRuleSet.MESSAGE_TEMPLATES_LENGTH];
 		if (this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) { // can be remote source entry when reconciling
-			result[0] = Messages.bind(
+			result[0] = manager.intern(Messages.bind(
 				org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_project,
-				new String[] {"{0}", getPath().segment(0)});  //$NON-NLS-1$
-			result[1] = Messages.bind(
+				new String[] {"{0}", getPath().segment(0)}));  //$NON-NLS-1$
+			result[1] = manager.intern(Messages.bind(
 					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_constructor_project,
-					new String[] {"{0}", getPath().segment(0)});  //$NON-NLS-1$
-			result[2] = Messages.bind(
+					new String[] {"{0}", getPath().segment(0)}));  //$NON-NLS-1$
+			result[2] = manager.intern(Messages.bind(
 					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_method_project,
-					new String[] {"{0}", "{1}", getPath().segment(0)});  //$NON-NLS-1$ //$NON-NLS-2$
-			result[3] = Messages.bind(
+					new String[] {"{0}", "{1}", getPath().segment(0)}));  //$NON-NLS-1$ //$NON-NLS-2$
+			result[3] = manager.intern(Messages.bind(
 					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_field_project,
-					new String[] {"{0}", "{1}", getPath().segment(0)});  //$NON-NLS-1$ //$NON-NLS-2$
+					new String[] {"{0}", "{1}", getPath().segment(0)}));  //$NON-NLS-1$ //$NON-NLS-2$
 		} else {
 			IPath libPath = getPath();
 			Object target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), libPath, false);
@@ -972,18 +973,18 @@ public class ClasspathEntry implements IClasspathEntry {
 				pathString = libPath.toOSString();
 			else
 				pathString = libPath.makeRelative().toString();
-			result[0] = Messages.bind(
+			result[0] = manager.intern(Messages.bind(
 				org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_library,
-				new String[] {"{0}", pathString}); //$NON-NLS-1$ 
-			result[1] = Messages.bind(
+				new String[] {"{0}", pathString})); //$NON-NLS-1$ 
+			result[1] = manager.intern(Messages.bind(
 					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_constructor_library,
-					new String[] {"{0}", pathString}); //$NON-NLS-1$ 
-			result[2] = Messages.bind(
+					new String[] {"{0}", pathString})); //$NON-NLS-1$ 
+			result[2] = manager.intern(Messages.bind(
 					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_method_library,
-					new String[] {"{0}", "{1}", pathString}); //$NON-NLS-1$ //$NON-NLS-2$ 
-			result[3] = Messages.bind(
+					new String[] {"{0}", "{1}", pathString})); //$NON-NLS-1$ //$NON-NLS-2$ 
+			result[3] = manager.intern(Messages.bind(
 					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_field_library,
-					new String[] {"{0}", "{1}", pathString}); //$NON-NLS-1$ //$NON-NLS-2$ 
+					new String[] {"{0}", "{1}", pathString})); //$NON-NLS-1$ //$NON-NLS-2$ 
 		}
 		return result;
 	}
