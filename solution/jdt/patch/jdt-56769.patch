diff --git a/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java b/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java
index b4096df..ade06f1 100644
--- a/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java
+++ b/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java
@@ -462,12 +462,6 @@ public class TestingEnvironment {
 	 * Return all problems with the specified element.
 	 */
 	public Problem[] getProblemsFor(IPath path){
-		return getProblemsFor(path, false);
-	}
-	/**
-	 * Return all problems with the specified element.
-	 */
-	public Problem[] getProblemsFor(IPath path, boolean storeRange){
 		IResource resource;
 		if(path.equals(getWorkspaceRootPath())){
 			resource = getWorkspace().getRoot();
@@ -485,15 +479,15 @@ public class TestingEnvironment {
 			ArrayList problems = new ArrayList();
 			IMarker[] markers = resource.findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);
 			for (int i = 0; i < markers.length; i++)
-				problems.add(new Problem(markers[i], storeRange));
+				problems.add(new Problem(markers[i]));
 
 			markers = resource.findMarkers(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);
 			for (int i = 0; i < markers.length; i++)
-				problems.add(new Problem(markers[i], storeRange));
+				problems.add(new Problem(markers[i]));
 			
 			markers = resource.findMarkers(IJavaModelMarker.TASK_MARKER, true, IResource.DEPTH_INFINITE);
 			for (int i = 0; i < markers.length; i++)
-				problems.add(new Problem(markers[i], storeRange));
+				problems.add(new Problem(markers[i]));
 
 			Problem[] result = new Problem[problems.size()];
 			problems.toArray(result);
