diff --git a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java
index f6d2b27..fefd831 100644
--- a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java
+++ b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java
@@ -693,7 +693,7 @@ public class VarargsTest extends AbstractComparableTest {
 			"2. WARNING in X.java (at line 2)\n" + 
 			"	class Y extends X { void count(int[] values) {} }\n" + 
 			"	                         ^^^^^^^^^^^^^^^^^^^\n" + 
-			"Varargs methods should only override other varargs methods unlike Y.count(int[]) and X.count(int...)\n" + 
+			"Varargs methods should only override or be overridden by other varargs methods unlike Y.count(int[]) and X.count(int...)\n" + 
 			"----------\n" + 
 			"3. WARNING in X.java (at line 3)\n" + 
 			"	class Z extends Y { void count(int... values) {} }\n" + 
@@ -703,7 +703,7 @@ public class VarargsTest extends AbstractComparableTest {
 			"4. WARNING in X.java (at line 3)\n" + 
 			"	class Z extends Y { void count(int... values) {} }\n" + 
 			"	                         ^^^^^^^^^^^^^^^^^^^^\n" + 
-			"Varargs methods should only override other varargs methods unlike Z.count(int...) and Y.count(int[])\n" + 
+			"Varargs methods should only override or be overridden by other varargs methods unlike Z.count(int...) and Y.count(int[])\n" + 
 			"----------\n");
 	}
