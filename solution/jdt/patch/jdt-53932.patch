diff --git a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceField.java b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceField.java
index d7fbac3..61590a1 100644
--- a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceField.java
+++ b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceField.java
@@ -10,10 +10,10 @@
  *******************************************************************************/
 package org.eclipse.jdt.core.tests.compiler.parser;
 
-import org.eclipse.jdt.internal.compiler.env.IConstants;
+import org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants;
 import org.eclipse.jdt.internal.compiler.env.ISourceField;
 
-public class SourceField implements ISourceField, IConstants {
+public class SourceField implements ISourceField {
 	protected int modifiers;
 	protected char[] typeName;
 	protected char[] name;
@@ -44,21 +44,21 @@ public String displayModifiers() {
 
 	if (this.modifiers == 0)
 		return null;
-	if ((this.modifiers & AccPublic) != 0)
+	if ((this.modifiers & ClassFileConstants.AccPublic) != 0)
 		buffer.append("public ");
-	if ((this.modifiers & AccProtected) != 0)
+	if ((this.modifiers & ClassFileConstants.AccProtected) != 0)
 		buffer.append("protected ");
-	if ((this.modifiers & AccPrivate) != 0)
+	if ((this.modifiers & ClassFileConstants.AccPrivate) != 0)
 		buffer.append("private ");
-	if ((this.modifiers & AccFinal) != 0)
+	if ((this.modifiers & ClassFileConstants.AccFinal) != 0)
 		buffer.append("final ");
-	if ((this.modifiers & AccStatic) != 0)
+	if ((this.modifiers & ClassFileConstants.AccStatic) != 0)
 		buffer.append("static ");
-	if ((this.modifiers & AccAbstract) != 0)
+	if ((this.modifiers & ClassFileConstants.AccAbstract) != 0)
 		buffer.append("abstract ");
-	if ((this.modifiers & AccNative) != 0)
+	if ((this.modifiers & ClassFileConstants.AccNative) != 0)
 		buffer.append("native ");
-	if ((this.modifiers & AccSynchronized) != 0)
+	if ((this.modifiers & ClassFileConstants.AccSynchronized) != 0)
 		buffer.append("synchronized ");
 	return buffer.toString();
 }
