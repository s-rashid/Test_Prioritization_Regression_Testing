diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java
index 0f0c5de..aa58154 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java
@@ -576,6 +576,25 @@ public FlowInfo copy() {
 }
 
 /**
+ * Discard definite inits and potential inits from this, then return this.
+ * The returned flow info only holds null related information. 
+ * @return this flow info, minus definite inits and potential inits
+ */
+public UnconditionalFlowInfo discardInitializationInfo() {
+	if (this == DEAD_END) {
+		return this;
+	}
+	this.definiteInits =
+		this.potentialInits = 0;
+	if (this.extra != null) {
+		for (int i = 0, length = this.extra[0].length; i < length; i++) {
+			this.extra[0][i] = this.extra[1][i] = 0;
+		}
+	}
+	return this;
+}
+
+/**
  * Remove local variables information from this flow info and return this.
  * @return this, deprived from any local variable information
  */
@@ -1510,24 +1529,6 @@ static int numberOfEnclosingFields(ReferenceBinding type){
 	return count;
 }
 
-/**
- * Erase definite inits and potential inits from this, then return this. 
- * @return this flow info, minus definite inits and potential inits
- */
-public UnconditionalFlowInfo nullInfo() {
-	if (this == DEAD_END) {
-		return this;
-	}
-	this.definiteInits =
-		this.potentialInits = 0;
-	if (this.extra != null) {
-		for (int i = 0, length = this.extra[0].length; i < length; i++) {
-			this.extra[0][i] = this.extra[1][i] = 0;
-		}
-	}
-	return this;
-}
-
 public UnconditionalFlowInfo nullInfoLessUnconditionalCopy() {
 	if (this == DEAD_END) {
 		return this;
