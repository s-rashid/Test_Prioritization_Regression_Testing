diff --git a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java
index 249090f..b42b833 100644
--- a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java
+++ b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java
@@ -41,46 +41,33 @@ public class AptProject {
 	}
 	
 	/**
+	 * This method should be called whenever compilation begins, to perform
+	 * initialization and verify configuration.
+	 */
+	public void compilationStarted() {
+		_gfm.compilationStarted();
+	}
+	
+	/**
 	 * This method should be called whenever project preferences are
-	 * changed by the user.  It is safe to call it on every change; 
-	 * irrelevant changes will be efficiently ignored.  This may cause
-	 * the classpath and generated source folder to change, so this
-	 * should <em>not</em> be called from a resource change listener,
-	 * preference change listener, or other context where resources 
-	 * may be locked.
+	 * changed by the user.  This may cause the classpath and generated 
+	 * source folder to change, so this should <em>not</em> be called 
+	 * from a context where resources may be locked, e.g., within
+	 * certain resource change listeners.
 	 * @param key a preference key such as @see AptPreferenceConstants#APT_ENABLED
 	 * @param oldValue the old value, or null if unknown
 	 * @param newValue the new value, which will be ignored if it is null
 	 */
-	public void handlePreferenceChange(String key, String oldValue, String newValue) {
-		if (newValue == null) {
-			// Null is used to indicate this preference has
-			// been removed, as the project has been deleted.
-			// We do nothing.
-			return;
-		}
-		if (newValue.equals(oldValue)) {
-			// Nothing has changed
-			return;
-		}
-		
+	public void preferenceChanged(String key) {
 		if (AptPreferenceConstants.APT_GENSRCDIR.equals(key)) {
-			_gsfm.changeFolderName(oldValue, newValue);
+			_gsfm.folderNamePreferenceChanged();
 		}
 		else if(AptPreferenceConstants.APT_ENABLED.equals(key) ){
-			_gsfm.setEnabled(Boolean.parseBoolean(newValue));
+			_gsfm.enabledPreferenceChanged();
 		}
 	}
 
 	/**
-	 * This method should be called whenever compilation begins, to perform
-	 * initialization and verify configuration.
-	 */
-	public void compilationStarted() {
-		_gfm.compilationStarted();
-	}
-	
-	/**
 	 * Invoked whenever a project is cleaned.  This will remove any state kept about
 	 * generated files for the given project.  If the deleteFiles flag is specified, 
 	 * then the contents of the generated source folder will be deleted. 
@@ -135,5 +122,5 @@ public class AptProject {
 	{
 		_gfm.clearAllMaps();
 	}
-	
+
 }
