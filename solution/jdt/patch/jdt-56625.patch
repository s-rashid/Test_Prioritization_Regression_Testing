diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java
index fc424d6..deb9f63 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java
@@ -12,6 +12,7 @@ package org.eclipse.jdt.internal.core;
 
 import org.eclipse.jdt.core.IJavaElement;
 import org.eclipse.jdt.core.IJavaElementDelta;
+import org.eclipse.jdt.core.IJavaProject;
 import org.eclipse.jdt.core.JavaModelException;
 
 /**
@@ -26,23 +27,27 @@ public class DiscardWorkingCopyOperation extends JavaModelOperation {
 	protected void executeOperation() throws JavaModelException {
 		CompilationUnit workingCopy = getWorkingCopy();
 		
-		int useCount = JavaModelManager.getJavaModelManager().discardPerWorkingCopyInfo(workingCopy);
+		JavaModelManager manager = JavaModelManager.getJavaModelManager();
+		int useCount = manager.discardPerWorkingCopyInfo(workingCopy);
 		if (useCount == 0) {
+			IJavaProject javaProject = workingCopy.getJavaProject();
+			if (ExternalJavaProject.EXTERNAL_PROJECT_NAME.equals(javaProject.getElementName()))
+				manager.removePerProjectInfo((JavaProject) javaProject);
 			if (!workingCopy.isPrimary()) {
 				// report removed java delta for a non-primary working copy
-				JavaElementDelta delta = new JavaElementDelta(this.getJavaModel());
+				JavaElementDelta delta = new JavaElementDelta(getJavaModel());
 				delta.removed(workingCopy);
 				addDelta(delta);
 				removeReconcileDelta(workingCopy);
 			} else {
 				if (workingCopy.getResource().isAccessible()) {
 					// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy
-					JavaElementDelta delta = new JavaElementDelta(this.getJavaModel());
+					JavaElementDelta delta = new JavaElementDelta(getJavaModel());
 					delta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
 					addDelta(delta);
 				} else {
 					// report a REMOVED delta
-					JavaElementDelta delta = new JavaElementDelta(this.getJavaModel());
+					JavaElementDelta delta = new JavaElementDelta(getJavaModel());
 					delta.removed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
 					addDelta(delta);
 				}
