diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java
index 597c47d..d4a6b76 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java
@@ -904,6 +904,9 @@ public int getNextToken() throws InvalidInputException {
 					if (this.currentPosition > this.eofPosition)
 						return TokenNameEOF;
 				}
+				//little trick to get out in the middle of a source compuation
+				if (this.currentPosition > this.eofPosition)
+					return TokenNameEOF;
 				if (checkIfUnicode) {
 					isWhiteSpace = jumpOverUnicodeWhiteSpace();
 					offset = this.currentPosition - offset;
@@ -954,12 +957,7 @@ public int getNextToken() throws InvalidInputException {
 					this.withoutUnicodePtr = 0;
 				}
 			}
-			//little trick to get out in the middle of a source compuation
-			if (this.currentPosition > this.eofPosition)
-				return TokenNameEOF;
-
 			// ---------Identify the next token-------------
-
 			switch (this.currentCharacter) {
 				case '@' :
 /*					if (this.sourceLevel >= ClassFileConstants.JDK1_5) {
@@ -2421,11 +2419,6 @@ public void resetTo(int begin, int end) {
 	}
 	this.commentPtr = -1; // reset comment stack
 	this.foundTaskCount = 0;
-	
-//	// if resetTo is used with being > than end.
-//	if (begin > this.eofPosition) {
-//		begin = this.eofPosition;
-//	}
 }
 
 public final void scanEscapeCharacter() throws InvalidInputException {
