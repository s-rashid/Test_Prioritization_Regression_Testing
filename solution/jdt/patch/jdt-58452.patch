diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/WeakHashSet.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/WeakHashSet.java
index a2d00d4..5906c16 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/WeakHashSet.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/WeakHashSet.java
@@ -65,14 +65,17 @@ public class WeakHashSet {
 	 */
 	public Object add(Object obj) {
 		cleanupGarbageCollectedValues();
-		int index = (obj.hashCode() & 0x7FFFFFFF) % this.values.length;
+		int valuesLength = this.values.length,
+			index = (obj.hashCode() & 0x7FFFFFFF) % valuesLength;
 		HashableWeakReference currentValue;
 		while ((currentValue = this.values[index]) != null) {
 			Object referent;
 			if (obj.equals(referent = currentValue.get())) {
 				return referent;
 			}
-			index = (index + 1) % this.values.length;
+			if (++index == valuesLength) {
+				index = 0;
+			}
 		}
 		this.values[index] = new HashableWeakReference(obj, this.referenceQueue);
 
@@ -93,7 +96,9 @@ public class WeakHashSet {
 			if (obj.equals(currentValue.get())) {
 				return;
 			}
-			index = (index + 1) % valuesLength;
+			if (++index == valuesLength) {
+				index = 0;
+			}
 		}
 		this.values[index] = value;
 
@@ -121,7 +126,9 @@ public class WeakHashSet {
 					this.elementSize--;
 					break;
 				}
-				index = (index + 1) % valuesLength;
+				if (++index == valuesLength) {
+					index = 0;
+				}
 			}
 		}
 	}
@@ -144,7 +151,9 @@ public class WeakHashSet {
 			if (obj.equals(referent = currentValue.get())) {
 				return referent;
 			}
-			index = (index + 1) % valuesLength;
+			if (++index == valuesLength) {
+				index = 0;
+			}
 		}
 		return null;
 	}
@@ -179,7 +188,9 @@ public class WeakHashSet {
 				rehash();
 				return referent;
 			}
-			index = (index + 1) % valuesLength;
+			if (++index == valuesLength) {
+				index = 0;
+			}
 		}
 		return null;
 	}
