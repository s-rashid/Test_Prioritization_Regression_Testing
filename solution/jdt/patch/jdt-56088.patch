diff --git a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ExecutableUtil.java b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ExecutableUtil.java
index d4a082c..eb0eb0a 100644
--- a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ExecutableUtil.java
+++ b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ExecutableUtil.java
@@ -54,7 +54,7 @@ class ExecutableUtil {
 			// Synthetic methods will have no ast node
 			if (methodAstNode == null)
 				return Collections.emptyList();
-	    	@SuppressWarnings("unchecked") //$NON-NLS-1$
+	    	@SuppressWarnings("unchecked")
 	    	final List<TypeParameter> typeParams = methodAstNode.typeParameters();
 	    	final List<TypeParameterDeclaration> result = new ArrayList<TypeParameterDeclaration>();
 	    	for(TypeParameter typeParam : typeParams){
@@ -117,7 +117,7 @@ class ExecutableUtil {
 			if (methodAstNode == null)
 				return Collections.emptyList();
 			
-	    	@SuppressWarnings("unchecked") //$NON-NLS-1$
+	    	@SuppressWarnings("unchecked") 
 	    	final List<SingleVariableDeclaration> params = methodAstNode.parameters();
 	    	if( params == null || params.size() == 0 )
 	    		return Collections.emptyList();  
@@ -177,7 +177,7 @@ class ExecutableUtil {
 			if (methodAstNode == null) 
 				return Collections.emptyList();
 			
-	    	@SuppressWarnings("unchecked") //$NON-NLS-1$
+	    	@SuppressWarnings("unchecked") 
 	    	final List<Name> exceptions = methodAstNode.thrownExceptions();
 	    	if(exceptions == null || exceptions.size() == 0 )
 	    		return Collections.emptyList();
