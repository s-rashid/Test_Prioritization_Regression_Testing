diff --git a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FileSystemUtil.java b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FileSystemUtil.java
index ae30a68..7db5f1b 100644
--- a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FileSystemUtil.java
+++ b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FileSystemUtil.java
@@ -10,14 +10,24 @@
  *******************************************************************************/
 package org.eclipse.jdt.apt.core.internal.util;
 
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
 import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
 
 /**
  *  Simple utility class to encapsulate an mkdirs() that avoids a timing issue
  *  in the jdk.  
  */
-public class FileSystemUtil
+public final class FileSystemUtil
 {
+	private FileSystemUtil() {}
+	
     public static void mkdirs( File parent )
     {
         if ( parent == null )
@@ -33,4 +43,31 @@ public class FileSystemUtil
             }
         }
     }
+    
+    public static String getContentsOfFile(IFile file) throws IOException, CoreException {
+    	InputStream in = file.getContents(true);
+    	try {
+    		ByteArrayOutputStream out = new ByteArrayOutputStream();
+    		byte[] buffer = new byte[512];
+    		int len;
+    		while ((len = in.read(buffer)) > 0) {
+    			out.write(buffer, 0, len);
+    		}
+    		out.close();
+    		String s = new String(out.toByteArray(), "UTF8");
+    		return s;
+    	}
+    	finally {
+    		try {in.close();} catch (IOException ioe) {}
+    	}
+    }
+    
+    public static void writeStringToFile(IFile file, String contents) throws IOException, CoreException {
+    	byte[] data = contents.getBytes("UTF8");
+    	ByteArrayInputStream input = new ByteArrayInputStream(data);
+    	if (file.exists()) {
+    		file.setContents(input, IResource.FORCE, null);
+    	}
+    	file.create(input, IResource.FORCE, null);
+    }
 }
