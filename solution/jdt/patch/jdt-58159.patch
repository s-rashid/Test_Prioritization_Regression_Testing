diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java
index e5f4fa3..ef6d87b 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java
@@ -249,11 +249,13 @@ public class CastExpression extends Expression {
 				if (binding.isVarargs()) {
 					int paramLength = binding.parameters.length;
 				   if (paramLength == argumentLength) {
-						int varargIndex = paramLength - 1;
-						ArrayBinding varargType = (ArrayBinding) binding.parameters[varargIndex];
-						TypeBinding lastArgType = alternateArgumentTypes[varargIndex];
-						if (varargType.dimensions == lastArgType.dimensions() && varargType.leafComponentType != lastArgType.leafComponentType())
-								return;
+						int varargsIndex = paramLength - 1;
+						ArrayBinding varargsType = (ArrayBinding) binding.parameters[varargsIndex];
+						TypeBinding lastArgType = alternateArgumentTypes[varargsIndex];
+						// originalType may be compatible already, but cast mandated to clarify between varargs/non-varargs call
+						if (!lastArgType.isCompatibleWith(varargsType.elementsType()))
+							return;
+							return;
 				   }
 				}
 				for (int i = 0; i < argumentLength; i++) {
