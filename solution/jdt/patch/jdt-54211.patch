diff --git a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistOptions.java b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistOptions.java
index 5e8d5ec..ac52588 100644
--- a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistOptions.java
+++ b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistOptions.java
@@ -42,6 +42,8 @@ public class AssistOptions {
 		"org.eclipse.jdt.core.codeComplete.forbiddenReferenceCheck"; 	//$NON-NLS-1$
 	public static final String OPTION_PerformDiscouragedReferenceCheck =
 		"org.eclipse.jdt.core.codeComplete.discouragedReferenceCheck"; 	//$NON-NLS-1$
+	public static final String OPTION_CamelCaseMatch =
+		"org.eclipse.jdt.core.codeComplete.camelCaseMatch"; 	//$NON-NLS-1$
 	
 	public static final String ENABLED = "enabled"; //$NON-NLS-1$
 	public static final String DISABLED = "disabled"; //$NON-NLS-1$
@@ -50,6 +52,7 @@ public class AssistOptions {
 	public boolean checkForbiddenReference = false;
 	public boolean checkDiscouragedReference = false;
 	public boolean forceImplicitQualification = false;
+	public boolean camelCaseMatch = true;
 	public char[][] fieldPrefixes = null;
 	public char[][] staticFieldPrefixes = null;
 	public char[][] localPrefixes = null;
@@ -186,5 +189,12 @@ public class AssistOptions {
 				this.checkDiscouragedReference = false;
 			}
 		}
+		if ((optionValue = optionsMap.get(OPTION_CamelCaseMatch)) != null) {
+			if (ENABLED.equals(optionValue)) {
+				this.camelCaseMatch = true;
+			} else if (DISABLED.equals(optionValue)) {
+				this.camelCaseMatch = false;
+			}
+		}
 	}
 }
