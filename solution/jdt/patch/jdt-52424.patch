diff --git a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/env/EnvironmentFactory.java b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/env/EnvironmentFactory.java
index 650250c..858a0bf 100644
--- a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/env/EnvironmentFactory.java
+++ b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/env/EnvironmentFactory.java
@@ -12,22 +12,40 @@
 
 package org.eclipse.jdt.apt.core.env;
 
-import org.eclipse.jdt.apt.core.internal.env.ProcessorEnvImpl;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv;
 import org.eclipse.jdt.core.ICompilationUnit;
 import org.eclipse.jdt.core.IJavaProject;
+import org.eclipse.jdt.core.dom.ASTNode;
+import org.eclipse.jdt.core.dom.CompilationUnit;
 
 import com.sun.mirror.apt.AnnotationProcessorEnvironment;
 
 public class EnvironmentFactory {
 
 	/**
-	 *  @param compilationUnit the working copy for which the Environment object is to be created
-	 *  @param javaProject the java project that the working copy is in. 
-	 *  @return the created environment.
+	 * Return a processor environment for use outside of building or reconciling.
+	 * Note that this environment does <b>NOT</b> support the Filer or Messager API,
+	 * as it is to be used to perform type system navigation, not building.<p>
+	 * 
+	 * If either getFiler() or getMessager() are called, this environment
+	 * will throw an UnsupportedOperationException.
+	 * 
+	 * @param compilationUnit the working copy for which the Environment object is to be created
+	 * @param javaProject the java project that the working copy is in. 
+	 * @return the created environment.
 	 */
-
 	public static AnnotationProcessorEnvironment getEnvironment(ICompilationUnit compilationUnit, IJavaProject javaProject )
 	{
-		return ProcessorEnvImpl.newProcessorEnvironmentForReconcile( compilationUnit, javaProject );
+		//return ProcessorEnvImpl.newProcessorEnvironmentForReconcile( compilationUnit, javaProject );
+		String unitName =  compilationUnit.getResource().getProjectRelativePath().toString();
+		ASTNode node = BaseProcessorEnv.createDietAST( unitName, javaProject, compilationUnit, null );
+       	BaseProcessorEnv env = new BaseProcessorEnv(
+       			(CompilationUnit)node,
+       			(IFile)compilationUnit.getResource(),
+       			javaProject,
+       			Phase.OTHER
+       			);
+       	return env;
 	}
 }
