diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CategorizedProblem.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CategorizedProblem.java
index 844c9c9..2b3dc49 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CategorizedProblem.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CategorizedProblem.java
@@ -103,10 +103,8 @@ public abstract int getCategoryID();
 
 /**
  * Returns the marker type associated to this problem, if it gets persisted into a marker by the JavaBuilder
- * Standard Java problems are associated to marker type "org.eclipse.jdt.core.problem"), standard tasks 
- * are associated to marker type "org.eclipse.jdt.core.task".
+ * Standard Java problems are associated to marker type "org.eclipse.jdt.core.problem").
  * Note: problem markers are expected to extend "org.eclipse.core.resources.problemmarker" marker type.
- * Note: tasks are expected to extend "org.eclipse.core.resources.taskmarker" marker type.
  * @return the type of the marker which would be associated to the problem
  */
 public abstract String getMarkerType();
@@ -117,7 +115,8 @@ public abstract String getMarkerType();
  * markers. By default, no EXTRA attributes is persisted, and a categorized problem only persists the following attributes:
  * <ul>
  * <li>	{@link IMarker#MESSAGE} -&gt; {@link IProblem#getMessage()}</li>
- * <li>	{@link IMarker#SEVERITY} -&gt; {@link IMarker#SEVERITY_ERROR}/{@link IMarker#SEVERITY_WARNING}</li>
+ * <li>	{@link IMarker#SEVERITY} -&gt; {@link IMarker#SEVERITY_ERROR} /{@link IMarker#SEVERITY_WARNING} 
+ *         according to {@link IProblem#isError()}</li>
  * <li>	{@link IJavaModelMarker#ID} -&gt; {@link IProblem#getID()}</li>
  * <li>	{@link IMarker#CHAR_START}  -&gt; {@link IProblem#getSourceStart()}</li>
  * <li>	{@link IMarker#CHAR_END}  -&gt; {@link IProblem#getSourceEnd()}</li>
@@ -125,18 +124,7 @@ public abstract String getMarkerType();
  * <li>	{@link IJavaModelMarker#ARGUMENTS}  -&gt; some <code>String[]</code> used to compute quickfixes </li>
  * <li>	{@link IJavaModelMarker#CATEGORY_ID}  -&gt; {@link CategorizedProblem#getCategoryID()}</li>
  * </ul>
- * whereas a categorized task persists the following attributes (problems and tasks are differenciated by their
- * associated marker type, {@link CategorizedProblem#getMarkerType()}) :
- * <ul>
- * <li>	{@link IMarker#MESSAGE} -&gt; {@link IProblem#getMessage()}</li>
- * <li>	{@link IMarker#PRIORITY} -&gt; {@link IMarker#PRIORITY_HIGH}/{@link IMarker#PRIORITY_NORMAL}/{@link IMarker#PRIORITY_LOW}</li>
- * <li>	{@link IJavaModelMarker#ID} -&gt; {@link IProblem#getID()}</li>
- * <li>	{@link IMarker#CHAR_START}  -&gt; {@link IProblem#getSourceStart()}</li>
- * <li>	{@link IMarker#CHAR_END}  -&gt; {@link IProblem#getSourceEnd()}</li>
- * <li>	{@link IMarker#LINE_NUMBER}  -&gt; {@link IProblem#getSourceLineNumber()}</li>
- * <li>	{@link IMarker#USER_EDITABLE}  -&gt; {@link Boolean#FALSE}</li>
  * </ul>
-
  * The names must be eligible for marker creation, as defined by {@link IMarker#setAttributes(String[], Object[])}, 
  * and there must be as many names as values according to {@link #getExtraMarkerAttributeValues()}.
  * Note that extra marker attributes will be inserted after default ones (as described in {@link CategorizedProblem#getMarkerType()},
