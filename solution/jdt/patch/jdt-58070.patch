diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java
index e171dee..26b5d92 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java
@@ -10,9 +10,6 @@
  *******************************************************************************/
 package org.eclipse.jdt.internal.core.search.indexing;
 
-import java.util.Locale;
-import java.util.Map;
-
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.IPath;
@@ -20,9 +17,8 @@ import org.eclipse.core.runtime.Path;
 import org.eclipse.jdt.core.JavaCore;
 import org.eclipse.jdt.core.search.SearchDocument;
 import org.eclipse.jdt.internal.compiler.SourceElementParser;
-import org.eclipse.jdt.internal.compiler.impl.CompilerOptions;
-import org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;
 import org.eclipse.jdt.internal.compiler.util.SuffixConstants;
+import org.eclipse.jdt.internal.core.JavaModelManager;
 import org.eclipse.jdt.internal.core.jdom.CompilationUnit;
 import org.eclipse.jdt.internal.core.search.processing.JobManager;
 
@@ -41,8 +37,6 @@ import org.eclipse.jdt.internal.core.search.processing.JobManager;
  */
 public class SourceIndexer extends AbstractIndexer implements SuffixConstants {
 	
-	protected DefaultProblemFactory problemFactory= new DefaultProblemFactory(Locale.getDefault());
-	
 	public SourceIndexer(SearchDocument document) {
 		super(document);
 	}
@@ -51,22 +45,13 @@ public class SourceIndexer extends AbstractIndexer implements SuffixConstants {
 		SourceIndexerRequestor requestor = new SourceIndexerRequestor(this);
 		String documentPath = this.document.getPath();
 		IPath path = new Path(documentPath);
-		IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(path.segment(0));
-		Map options = JavaCore.create(project).getOptions(true);
-		// disable task tags to speed up parsing
-		options.put(JavaCore.COMPILER_TASK_TAGS, ""); //$NON-NLS-1$
-		SourceElementParser parser = new SourceElementParser(
-			requestor, 
-			this.problemFactory, 
-			new CompilerOptions(options), 
-			true, // index local declarations
-			true, // optimize string literals
-			false); // do not use source javadoc parser to speed up parsing
-		parser.reportOnlyOneSyntaxError = true;
-	
-		// Always check javadoc while indexing
-		parser.javadocParser.checkDocComment = true;
-		parser.javadocParser.reportProblems = false;
+		SourceElementParser parser = this.document.parser;
+		if (parser == null) {
+			IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(path.segment(0));
+			parser = JavaModelManager.getJavaModelManager().indexManager.getSourceElementParser(JavaCore.create(project), requestor);
+		} else {
+			parser.requestor = requestor;
+		}
 		
 		// Launch the parser
 		char[] source = null;
