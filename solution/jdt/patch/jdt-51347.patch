diff --git a/org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessorFactory.java b/org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessorFactory.java
new file mode 100644
index 0000000..af939df
--- /dev/null
+++ b/org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessorFactory.java
@@ -0,0 +1,45 @@
+/*******************************************************************************
+ * Copyright (c) 2005 BEA Systems, Inc.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *    tyeung@bea.com - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.jdt.apt.tests.annotations.valueconversion;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Set;
+
+import com.sun.mirror.apt.AnnotationProcessor;
+import com.sun.mirror.apt.AnnotationProcessorEnvironment;
+import com.sun.mirror.apt.AnnotationProcessorFactory;
+import com.sun.mirror.declaration.AnnotationTypeDeclaration;
+
+public class ValueConversionProcessorFactory implements 
+	AnnotationProcessorFactory{
+
+	public Collection<String> supportedOptions() {
+		return Collections.emptyList();
+	}
+
+	public Collection<String> supportedAnnotationTypes() {
+		return annotations;
+	}
+
+	public AnnotationProcessor getProcessorFor(
+			Set<AnnotationTypeDeclaration> atds,
+			AnnotationProcessorEnvironment env) 
+	{
+		return new ValueConversionProcessor( env );
+	}
+	
+	private static ArrayList<String> annotations = new ArrayList<String>();	
+	{
+		annotations.add("sample.Test.Annotation");		
+	}
+}
