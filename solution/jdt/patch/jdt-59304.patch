diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java
index 7750448..2f047ab 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java
@@ -11,7 +11,6 @@
 package org.eclipse.jdt.core.tests.model;
 
 import org.eclipse.jdt.core.*;
-import org.eclipse.jdt.core.ICompilationUnit;
 
 import junit.framework.*;
 
@@ -2236,4 +2235,22 @@ public void test0100() throws JavaModelException {
 		elements
 	);
 }
+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=99645
+public void test0101() throws JavaModelException {
+	IClassFile cu = getClassFile("Resolve", "class-folder", "test0101", "Test.class");
+
+	String str = cu.getSource();
+	int start = str.indexOf("T field;");
+	int length = "T".length();
+	IJavaElement[] elements = cu.codeSelect(start, length);
+	assertElementsEqual(
+			"Unexpected elements",
+			"<T> [in Test [in Test.class [in test0101 [in class-folder [in Resolve]]]]]",
+			elements
+	);
+	
+	ISourceRange nameRange = ((ITypeParameter)elements[0]).getNameRange();
+	assertEquals("Offset is not correct" , str.indexOf("T>"), nameRange.getOffset());
+	assertEquals("Length is not correct" , "T".length(), nameRange.getLength());
+}
 }
