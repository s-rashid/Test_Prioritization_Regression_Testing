diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java
index 4e97dcb..057e6bc 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java
@@ -108,10 +108,17 @@ public void cleanUpIndexes() {
 
 	if (indexStates != null) {
 		Object[] keys = indexStates.keyTable;
+		int keysLength = keys.length;
+		int updates = 0;
+		String locations[] = new String[keysLength];
 		for (int i = 0, l = keys.length; i < l; i++) {
 			String key = (String) keys[i];
-			if (key != null && !knownPaths.containsKey(key))
-				updateIndexState(key, null);
+			if (key != null && !knownPaths.containsKey(key)) {
+				locations[updates++] = key;
+			}
+		}
+		if (updates > 0) {
+			removeIndexesState(locations);
 		}
 	}
 
@@ -630,6 +637,23 @@ private char[] readIndexState() {
 		return new char[0];
 	}
 }
+private synchronized void removeIndexesState(String[] locations) {
+	getIndexStates(); // ensure the states are initialized
+	int length = locations.length;
+	boolean changed = false;
+	for (int i=0; i<length; i++) {
+		if (locations[i] == null) continue;
+		if ((indexStates.removeKey(locations[i]) != null)) {
+			changed = true;
+			if (VERBOSE) {
+				Util.verbose("-> index state updated to: ? for: "+locations[i]); //$NON-NLS-1$
+			}
+		}
+	}
+	if (!changed) return;
+
+	writeSavedIndexNamesFile();
+}
 private synchronized void updateIndexState(String indexLocation, Integer indexState) {
 	getIndexStates(); // ensure the states are initialized
 	if (indexState != null) {
@@ -640,6 +664,18 @@ private synchronized void updateIndexState(String indexLocation, Integer indexSt
 		indexStates.removeKey(indexLocation);
 	}
 
+	writeSavedIndexNamesFile();
+
+	if (VERBOSE) {
+		String state = "?"; //$NON-NLS-1$
+		if (indexState == SAVED_STATE) state = "SAVED"; //$NON-NLS-1$
+		else if (indexState == UPDATING_STATE) state = "UPDATING"; //$NON-NLS-1$
+		else if (indexState == UNKNOWN_STATE) state = "UNKNOWN"; //$NON-NLS-1$
+		else if (indexState == REBUILDING_STATE) state = "REBUILDING"; //$NON-NLS-1$
+		Util.verbose("-> index state updated to: " + state + " for: "+indexLocation); //$NON-NLS-1$ //$NON-NLS-2$
+	}
+}
+private void writeSavedIndexNamesFile() {
 	BufferedWriter writer = null;
 	try {
 		writer = new BufferedWriter(new FileWriter(savedIndexNamesFile));
@@ -663,13 +699,5 @@ private synchronized void updateIndexState(String indexLocation, Integer indexSt
 			}
 		}
 	}
-	if (VERBOSE) {
-		String state = "?"; //$NON-NLS-1$
-		if (indexState == SAVED_STATE) state = "SAVED"; //$NON-NLS-1$
-		else if (indexState == UPDATING_STATE) state = "UPDATING"; //$NON-NLS-1$
-		else if (indexState == UNKNOWN_STATE) state = "UNKNOWN"; //$NON-NLS-1$
-		else if (indexState == REBUILDING_STATE) state = "REBUILDING"; //$NON-NLS-1$
-		Util.verbose("-> index state updated to: " + state + " for: "+indexLocation); //$NON-NLS-1$ //$NON-NLS-2$
-	}
 }
 }
