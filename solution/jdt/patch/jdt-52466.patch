diff --git a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java
index b3d6ae4..4170983 100644
--- a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java
+++ b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java
@@ -316,29 +316,12 @@ public abstract class Engine implements ITypeRequestor {
 	}
 	
 	public static char[] getTypeSignature(TypeBinding typeBinding) {
-		if(typeBinding.isLocalType()) {
-			LocalTypeBinding localTypeBinding = (LocalTypeBinding)typeBinding;
-			if(localTypeBinding.isAnonymousType()) {
-				typeBinding = localTypeBinding.superclass();
-			} else {
-				localTypeBinding.setConstantPoolName(typeBinding.sourceName());
-			}
-		}
 		return typeBinding.signature();
 	}
 	public static char[] getSignature(Binding binding) {
 		char[] result = null;
 		if ((binding.kind() & Binding.TYPE) != 0) {
 			TypeBinding typeBinding = (TypeBinding)binding;
-			if(typeBinding.isLocalType()) {
-				LocalTypeBinding localTypeBinding = (LocalTypeBinding)typeBinding;
-				if(localTypeBinding.isAnonymousType()) {
-					typeBinding = localTypeBinding.superclass();
-				} else {
-					// TODO (david) this code is not necessary any longer (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=99686)
-					localTypeBinding.setConstantPoolName(typeBinding.sourceName());
-				}
-			}
 			result = typeBinding.genericTypeSignature();
 		} else if ((binding.kind() & Binding.METHOD) != 0) {
 			MethodBinding methodBinding = (MethodBinding)binding;
