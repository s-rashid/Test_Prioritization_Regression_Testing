diff --git a/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java b/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java
index 0a61944..164ee95 100644
--- a/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java
+++ b/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java
@@ -106,14 +106,14 @@ public class BuildpathTests extends BuilderTests {
 		expectingOnlyProblemsFor(new IPath[] {project2Path, project3Path});
 		expectingOnlySpecificProblemsFor(project2Path,
 			new Problem[] {
-				new Problem("", "The project cannot be built until build path errors are resolved", project2Path, -1, -1, -1), //$NON-NLS-1$ //$NON-NLS-2$
-				new Problem("Build path", "Project CP2 is missing required Java project: 'CP1'", project2Path, -1, -1, -1) //$NON-NLS-1$ //$NON-NLS-2$
+				new Problem("", "The project cannot be built until build path errors are resolved", project2Path, -1, -1, CategorizedProblem.CAT_BUILDPATH), //$NON-NLS-1$ //$NON-NLS-2$
+				new Problem("Build path", "Project CP2 is missing required Java project: 'CP1'", project2Path, -1, -1, CategorizedProblem.CAT_BUILDPATH) //$NON-NLS-1$ //$NON-NLS-2$
 			}
 		);
 		expectingOnlySpecificProblemsFor(project3Path,
 			new Problem[] {
-				new Problem("", "The project cannot be built until build path errors are resolved", project3Path, -1, -1, -1), //$NON-NLS-1$ //$NON-NLS-2$
-				new Problem("Build path", "Project CP3 is missing required library: '/CP1/temp.jar'", project3Path, -1, -1, -1) //$NON-NLS-1$ //$NON-NLS-2$
+				new Problem("", "The project cannot be built until build path errors are resolved", project3Path, -1, -1, CategorizedProblem.CAT_BUILDPATH), //$NON-NLS-1$ //$NON-NLS-2$
+				new Problem("Build path", "Project CP3 is missing required library: '/CP1/temp.jar'", project3Path, -1, -1, CategorizedProblem.CAT_BUILDPATH) //$NON-NLS-1$ //$NON-NLS-2$
 			}
 		);
 
@@ -132,10 +132,10 @@ public class BuildpathTests extends BuilderTests {
 		incrementalBuild();
 		expectingOnlyProblemsFor(new IPath[] {project2Path, project3Path});
 		expectingOnlySpecificProblemFor(project2Path,
-			new Problem("Build path", "Project CP2 is missing required Java project: 'CP1'", project2Path, -1, -1, -1) //$NON-NLS-1$ //$NON-NLS-2$
+			new Problem("Build path", "Project CP2 is missing required Java project: 'CP1'", project2Path, -1, -1, CategorizedProblem.CAT_BUILDPATH) //$NON-NLS-1$ //$NON-NLS-2$
 		);
 		expectingOnlySpecificProblemFor(project3Path,
-			new Problem("Build path", "Project CP3 is missing required library: '/CP1/temp.jar'", project3Path, -1, -1, -1) //$NON-NLS-1$ //$NON-NLS-2$
+			new Problem("Build path", "Project CP3 is missing required library: '/CP1/temp.jar'", project3Path, -1, -1, CategorizedProblem.CAT_BUILDPATH) //$NON-NLS-1$ //$NON-NLS-2$
 		);
 
 		env.openProject(project1Path);
@@ -354,7 +354,7 @@ public class BuildpathTests extends BuilderTests {
 		expectingOnlyProblemsFor(new IPath[] {projectPath, classTest1});
 		expectingOnlySpecificProblemsFor(projectPath,
 			new Problem[] {
-				new Problem("", "The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try building this project", projectPath, -1, -1, -1), //$NON-NLS-1$ //$NON-NLS-2$
+				new Problem("", "The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try building this project", projectPath, -1, -1, CategorizedProblem.CAT_BUILDPATH), //$NON-NLS-1$ //$NON-NLS-2$
 				new Problem("p1", "The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files", classTest1, 0, 1, CategorizedProblem.CAT_BUILDPATH) //$NON-NLS-1$ //$NON-NLS-2$
 			}
 		);
@@ -392,7 +392,7 @@ public class BuildpathTests extends BuilderTests {
 		fullBuild();
 		expectingSpecificProblemFor(
 			projectPath,
-			new Problem("", "The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try building this project", projectPath, -1, -1, -1)); //$NON-NLS-1$ //$NON-NLS-2$
+			new Problem("", "The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try building this project", projectPath, -1, -1, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$
 		
 		Problem[] prob1 = env.getProblemsFor(classTest1);
 		Problem[] prob2 = env.getProblemsFor(classTest2);
@@ -440,8 +440,8 @@ public class BuildpathTests extends BuilderTests {
 		expectingOnlyProblemsFor(project2Path);
 		expectingOnlySpecificProblemsFor(project2Path,
 			new Problem[] {
-				new Problem("", "The project cannot be built until build path errors are resolved", project2Path, -1, -1, -1), //$NON-NLS-1$ //$NON-NLS-2$
-				new Problem("Build path", "Project MP2 is missing required Java project: 'MP1'", project2Path, -1, -1, -1) //$NON-NLS-1$ //$NON-NLS-2$
+				new Problem("", "The project cannot be built until build path errors are resolved", project2Path, -1, -1, CategorizedProblem.CAT_BUILDPATH), //$NON-NLS-1$ //$NON-NLS-2$
+				new Problem("Build path", "Project MP2 is missing required Java project: 'MP1'", project2Path, -1, -1, CategorizedProblem.CAT_BUILDPATH) //$NON-NLS-1$ //$NON-NLS-2$
 			}
 		);
 
@@ -462,7 +462,7 @@ public class BuildpathTests extends BuilderTests {
 		incrementalBuild();
 		expectingOnlyProblemsFor(project2Path);
 		expectingOnlySpecificProblemFor(project2Path,
-			new Problem("Build path", "Project MP2 is missing required Java project: 'MP1'", project2Path, -1, -1, -1) //$NON-NLS-1$ //$NON-NLS-2$
+			new Problem("Build path", "Project MP2 is missing required Java project: 'MP1'", project2Path, -1, -1, CategorizedProblem.CAT_BUILDPATH) //$NON-NLS-1$ //$NON-NLS-2$
 		);
 
 		project1Path = env.addProject("MP1"); //$NON-NLS-1$
