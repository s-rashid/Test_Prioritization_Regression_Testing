diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java
index fa53857..a94391a 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java
@@ -206,7 +206,7 @@ public class QualifiedAllocationExpression extends AllocationExpression {
 		
 		if (enclosingInstance != null) {
 			if (enclosingInstance instanceof CastExpression) {
-				enclosingInstance.bits |= IgnoreNeedForCastCheckMASK; // will check later on
+				enclosingInstance.bits |= DisableUnnecessaryCastCheck; // will check later on
 				enclosingInstanceContainsCast = true;
 			}
 			if ((enclosingInstanceType = enclosingInstance.resolveType(scope)) == null){
@@ -283,7 +283,7 @@ public class QualifiedAllocationExpression extends AllocationExpression {
 			for (int i = 0; i < length; i++) {
 				Expression argument = this.arguments[i];
 				if (argument instanceof CastExpression) {
-					argument.bits |= IgnoreNeedForCastCheckMASK; // will check later on
+					argument.bits |= DisableUnnecessaryCastCheck; // will check later on
 					argsContainCast = true;
 				}
 				if ((argumentTypes[i] = argument.resolveType(scope)) == null){
