diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java
index 82c7f42..4f0f7c0 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java
@@ -4061,6 +4061,7 @@ public class ASTConverterTest extends ConverterTestSetup {
 		ITypeBinding typeBinding = typeDeclaration.resolveBinding();
 		assertNotNull("Binding not null", typeBinding); //$NON-NLS-1$
 		IMethodBinding[] methods = typeBinding.getDeclaredMethods();
+		assertNotNull("No methods", methods);
 		assertEquals("methods.length != 4", 4, methods.length); //$NON-NLS-1$
 		List bodyDeclarations = typeDeclaration.bodyDeclarations();
 		assertEquals("body declaration size != 3", 3, bodyDeclarations.size()); //$NON-NLS-1$
@@ -4072,7 +4073,17 @@ public class ASTConverterTest extends ConverterTestSetup {
 		IBinding binding = simpleName.resolveBinding();
 		assertNotNull("No binding", binding); //$NON-NLS-1$
 		assertEquals("wrong name", binding.getName(), simpleName.getIdentifier()); //$NON-NLS-1$
-		assertTrue("Canonical method binding", methodBinding1 == methods[1]); //$NON-NLS-1$
+		// search method foo
+		IMethodBinding methodBinding = null;
+		loop: for (int i = 0, max = methods.length; i < max; i++) {
+			IMethodBinding currentMethod = methods[i];
+			if ("foo".equals(currentMethod.getName())) {
+				methodBinding = currentMethod;
+				break loop;
+			}
+		}
+		assertNotNull("Cannot be null", methodBinding);
+		assertTrue("Canonical method binding", methodBinding1 == methodBinding); //$NON-NLS-1$
 		assertTrue("declaring class is canonical", typeBinding == methodBinding1.getDeclaringClass()); //$NON-NLS-1$
 		ITypeBinding[] exceptionTypes = methodBinding1.getExceptionTypes();
 		assertNotNull("No exception types", exceptionTypes); //$NON-NLS-1$
@@ -4090,7 +4101,16 @@ public class ASTConverterTest extends ConverterTestSetup {
 		MethodDeclaration method2 = (MethodDeclaration) bodyDeclarations.get(1);
 		IMethodBinding methodBinding2 = method2.resolveBinding();
 		assertNotNull("No method binding for main", methodBinding2); //$NON-NLS-1$
-		assertTrue("Canonical method binding", methodBinding2 == methods[2]); //$NON-NLS-1$
+		methodBinding = null;
+		loop: for (int i = 0, max = methods.length; i < max; i++) {
+			IMethodBinding currentMethod = methods[i];
+			if ("main".equals(currentMethod.getName())) {
+				methodBinding = currentMethod;
+				break loop;
+			}
+		}
+		assertNotNull("Cannot be null", methodBinding);
+		assertTrue("Canonical method binding", methodBinding2 == methodBinding); //$NON-NLS-1$
 		assertTrue("declaring class is canonical", typeBinding == methodBinding2.getDeclaringClass()); //$NON-NLS-1$
 		ITypeBinding[] exceptionTypes2 = methodBinding2.getExceptionTypes();
 		assertNotNull("No exception types", exceptionTypes2); //$NON-NLS-1$
@@ -4107,7 +4127,16 @@ public class ASTConverterTest extends ConverterTestSetup {
 		MethodDeclaration method3 = (MethodDeclaration) bodyDeclarations.get(2);
 		IMethodBinding methodBinding3 = method3.resolveBinding();
 		assertNotNull("No method binding for main", methodBinding3); //$NON-NLS-1$
-		assertTrue("Canonical method binding", methodBinding3 == methods[3]); //$NON-NLS-1$
+		methodBinding = null;
+		loop: for (int i = 0, max = methods.length; i < max; i++) {
+			IMethodBinding currentMethod = methods[i];
+			if ("bar".equals(currentMethod.getName())) {
+				methodBinding = currentMethod;
+				break loop;
+			}
+		}		
+		assertNotNull("Cannot be null", methodBinding);
+		assertTrue("Canonical method binding", methodBinding3 == methodBinding); //$NON-NLS-1$
 		assertTrue("declaring class is canonical", typeBinding == methodBinding3.getDeclaringClass()); //$NON-NLS-1$
 		ITypeBinding[] exceptionTypes3 = methodBinding3.getExceptionTypes();
 		assertNotNull("No exception types", exceptionTypes3); //$NON-NLS-1$
