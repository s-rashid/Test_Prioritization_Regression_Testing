diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java
index 9525d9e..33826a3 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java
@@ -304,15 +304,15 @@ public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream
 	}
 	if (valueRequired) {
 		if (isStatic) {
-			if ((this.codegenBinding.type == LongBinding)
-				|| (this.codegenBinding.type == DoubleBinding)) {
+			if ((this.codegenBinding.type == TypeBinding.LONG)
+				|| (this.codegenBinding.type == TypeBinding.DOUBLE)) {
 				codeStream.dup2();
 			} else {
 				codeStream.dup();
 			}
 		} else { // Stack:  [owner][old field value]  ---> [old field value][owner][old field value]
-			if ((this.codegenBinding.type == LongBinding)
-				|| (this.codegenBinding.type == DoubleBinding)) {
+			if ((this.codegenBinding.type == TypeBinding.LONG)
+				|| (this.codegenBinding.type == TypeBinding.DOUBLE)) {
 				codeStream.dup2_x1();
 			} else {
 				codeStream.dup_x1();
@@ -435,28 +435,28 @@ public TypeBinding postConversionType(Scope scope) {
 	int runtimeType = (this.implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4;
 	switch (runtimeType) {
 		case T_boolean :
-			convertedType = BooleanBinding;
+			convertedType = TypeBinding.BOOLEAN;
 			break;
 		case T_byte :
-			convertedType = ByteBinding;
+			convertedType = TypeBinding.BYTE;
 			break;
 		case T_short :
-			convertedType = ShortBinding;
+			convertedType = TypeBinding.SHORT;
 			break;
 		case T_char :
-			convertedType = CharBinding;
+			convertedType = TypeBinding.CHAR;
 			break;
 		case T_int :
-			convertedType = IntBinding;
+			convertedType = TypeBinding.INT;
 			break;
 		case T_float :
-			convertedType = FloatBinding;
+			convertedType = TypeBinding.FLOAT;
 			break;
 		case T_long :
-			convertedType = LongBinding;
+			convertedType = TypeBinding.LONG;
 			break;
 		case T_double :
-			convertedType = DoubleBinding;
+			convertedType = TypeBinding.DOUBLE;
 			break;
 		default :
 	}
