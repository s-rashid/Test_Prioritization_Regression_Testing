diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java
index aa6b341..8057240 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java
@@ -34,6 +34,7 @@ import org.eclipse.jdt.core.dom.CompilationUnit;
 import org.eclipse.jdt.core.dom.IBinding;
 import org.eclipse.jdt.core.dom.IMethodBinding;
 import org.eclipse.jdt.core.dom.ITypeBinding;
+import org.eclipse.jdt.core.dom.IVariableBinding;
 import org.eclipse.jdt.core.dom.MethodDeclaration;
 import org.eclipse.jdt.core.dom.MethodInvocation;
 import org.eclipse.jdt.core.dom.PackageDeclaration;
@@ -331,6 +332,16 @@ public class AbstractASTTests extends ModifyingResourceTests {
 		return markerInfos;
 	}
 
+	protected IVariableBinding[] createVariableBindings(String[] pathAndSources, String[] bindingKeys) throws JavaModelException {
+		WorkingCopyOwner owner = new WorkingCopyOwner() {};
+		this.workingCopies = createWorkingCopies(pathAndSources, owner);
+		IBinding[] bindings = resolveBindings(bindingKeys, getJavaProject("P"), owner);
+		int length = bindings.length;
+		IVariableBinding[] result = new IVariableBinding[length];
+		System.arraycopy(bindings, 0, result, 0, length);
+		return result;
+	}
+
 	protected IMethodBinding[] createMethodBindings(String[] pathAndSources, String[] bindingKeys) throws JavaModelException {
 		return createMethodBindings(pathAndSources, bindingKeys, getJavaProject("P"));
 	}
