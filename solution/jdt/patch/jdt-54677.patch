diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
index 9cc56f0..59ce62f 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
@@ -25,6 +25,7 @@ package org.eclipse.jdt.internal.compiler;
  *
  * Any (parsing) problem encountered is also provided.
  */
+import org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants;
 import org.eclipse.jdt.internal.compiler.env.*;
 
 import org.eclipse.jdt.internal.compiler.impl.*;
@@ -93,7 +94,7 @@ public void checkComment() {
 		break nextComment;
 	}
 	if (deprecated) {
-		checkAndSetModifiers(AccDeprecated);
+		checkAndSetModifiers(ClassFileConstants.AccDeprecated);
 	}
 	// modify the modifier source start to point at the first comment
 	if (commentPtr >= 0) {
@@ -683,7 +684,7 @@ protected void consumeInterfaceHeaderName1() {
 	intPtr--;
 	int declSourceStart = intStack[intPtr--];
 	typeDecl.modifiersSourceStart = intStack[intPtr--];
-	typeDecl.modifiers = this.intStack[this.intPtr--] | AccInterface;
+	typeDecl.modifiers = this.intStack[this.intPtr--] | ClassFileConstants.AccInterface;
 	if (typeDecl.declarationSourceStart > declSourceStart) {
 		typeDecl.declarationSourceStart = declSourceStart;
 	}
@@ -973,7 +974,7 @@ protected void consumeSingleStaticImportDeclarationName() {
 		CharOperation.concatWith(importReference.getImportName(), '.'),
 		importReference.sourceStart,
 		false,
-		AccStatic);
+		ClassFileConstants.AccStatic);
 }
 /*
  *
@@ -994,7 +995,7 @@ protected void consumeSingleTypeImportDeclarationName() {
 		CharOperation.concatWith(importReference.getImportName(), '.'),
 		importReference.sourceStart,
 		false,
-		AccDefault);
+		ClassFileConstants.AccDefault);
 }
 protected void consumeStaticImportOnDemandDeclarationName() {
 	// SingleTypeImportDeclarationName ::= 'import' 'static' Name '.' '*'
@@ -1011,7 +1012,7 @@ protected void consumeStaticImportOnDemandDeclarationName() {
 		CharOperation.concatWith(importReference.getImportName(), '.'),
 		importReference.sourceStart,
 		true,
-		AccStatic);
+		ClassFileConstants.AccStatic);
 }
 /*
  *
@@ -1027,7 +1028,7 @@ protected void consumeStaticInitializer() {
 		initializer.declarationSourceStart,
 		initializer.declarationSourceEnd,
 		intArrayStack[intArrayPtr--],
-		AccStatic, 
+		ClassFileConstants.AccStatic, 
 		intStack[intPtr--], 
 		initializer.block.sourceStart,
 		initializer.declarationSourceEnd);
@@ -1062,7 +1063,7 @@ protected void consumeTypeImportOnDemandDeclarationName() {
 		CharOperation.concatWith(importReference.getImportName(), '.'), 
 		importReference.sourceStart,
 		true,
-		AccDefault);
+		ClassFileConstants.AccDefault);
 }
 /*
  * Flush javadocs defined prior to a given positions.
