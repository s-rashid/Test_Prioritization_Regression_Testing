diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
index d6c473e..e242292 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
@@ -14,7 +14,6 @@ import org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants;
 import org.eclipse.jdt.internal.compiler.env.*;
 
 import org.eclipse.jdt.internal.compiler.impl.*;
-import org.eclipse.jdt.internal.compiler.lookup.ExtraCompilerModifiers;
 import org.eclipse.jdt.core.compiler.*;
 import org.eclipse.jdt.internal.compiler.ast.*;
 import org.eclipse.jdt.internal.compiler.parser.*;
@@ -63,8 +62,6 @@ public void checkComment() {
 	/* persisting javadoc positions */
 	pushOnIntArrayStack(this.getJavaDocPositions());
 	boolean deprecated = false;
-	boolean notNull = false;
-	boolean nullable = false;
 	int lastCommentIndex = -1;
 	int commentPtr = scanner.commentPtr;
 
@@ -81,19 +78,11 @@ public void checkComment() {
 		}
 		deprecated =
 			this.javadocParser.checkDeprecation(lastCommentIndex);
-		notNull = this.javadocParser.notNull;
-		nullable = this.javadocParser.nullable;
 		break nextComment;
 	}
 	if (deprecated) {
 		checkAndSetModifiers(ClassFileConstants.AccDeprecated);
 	}
-	if (notNull) {
-		checkAndSetModifiers(ExtraCompilerModifiers.AccNotNull);
-	}
-	if (nullable) { // no else on purpose
-		checkAndSetModifiers(ExtraCompilerModifiers.AccNullable);
-	}
 	// modify the modifier source start to point at the first comment
 	if (commentPtr >= 0) {
 		declarationSourceStart = scanner.commentStarts[0];
