diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java
index 8f24e21..230eb28 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java
@@ -14,6 +14,10 @@ import org.eclipse.core.runtime.CoreException;
 import org.eclipse.jdt.core.*;
 import org.eclipse.jdt.core.compiler.IProblem;
 import org.eclipse.jdt.core.dom.*;
+import org.eclipse.jdt.core.search.IJavaSearchConstants;
+import org.eclipse.jdt.core.search.IJavaSearchScope;
+import org.eclipse.jdt.core.search.SearchEngine;
+import org.eclipse.jdt.core.tests.model.AbstractJavaSearchTests;
 
 import junit.framework.Test;
 
@@ -103,6 +107,10 @@ public class ASTModelBridgeTests extends AbstractASTTests {
 				"    }/*end*/\n" +
 				"  }\n" +
 				"}",
+				"p/ABC.java",
+				"package p;\n" +
+				"public class ABC {\n" +
+				"}",
 				"Z.java",
 				"public class Z {\n" +
 				"  /*start*/class Member {\n" +
@@ -290,6 +298,47 @@ public class ASTModelBridgeTests extends AbstractASTTests {
 	}
 	
 	/*
+	 * Ensures that the IJavaElement of an IBinding representing a type coming from a class file is correct
+	 * after searching for references to this type.
+	 * (regression test for bug 136016 [refactoring] CCE during Use Supertype refactoring)
+	 */
+	public void testBinaryType2() throws CoreException {
+		IClassFile classFile = getClassFile("P", "lib.jar", "p", "ABC.class"); // class with no references
+		
+		// ensure classfile is open
+		classFile.open(null);
+		
+		//search for references to p.ABC after adding references in exactly 1 file
+		try {
+			createFile(
+				"/P/src/Test.java",
+				"import p.ABC;\n" +
+				"public class Test extends ABC {\n" +
+				"}"
+				);
+			IJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {getPackageFragmentRoot("/P/src")});
+			search(classFile.getType(), IJavaSearchConstants.REFERENCES, scope, new AbstractJavaSearchTests.JavaSearchResultCollector());
+		} finally {
+			deleteFile("/P/src/Test.java");
+		}
+		
+		String source = classFile.getSource();
+		MarkerInfo markerInfo = new MarkerInfo(source);
+		markerInfo.astStarts = new int[] {source.indexOf("public")};
+		markerInfo.astEnds = new int[] {source.lastIndexOf('}') + 1};
+		ASTNode node = buildAST(markerInfo, classFile);
+		IBinding binding = ((TypeDeclaration) node).resolveBinding();
+		assertNotNull("No binding", binding);
+		IJavaElement element = binding.getJavaElement();
+		assertElementEquals(
+			"Unexpected Java element",
+			"ABC [in ABC.class [in p [in lib.jar [in P]]]]",
+			element
+		);
+		assertTrue("Element should exist", element.exists());
+	}
+	
+	/*
 	 * Ensures that the IJavaElement for a binary member type coming from an anoumous class file is correct.
 	 * (regression test for bug 100636 [model] Can't find overriden methods of protected nonstatic inner class.)
 	 */
