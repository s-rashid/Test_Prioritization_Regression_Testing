diff --git a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java
index 57c3ad9..ac7ea5a 100644
--- a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java
+++ b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java
@@ -678,11 +678,14 @@ public final class CompletionEngine
 			}
 			
 			if(!field.isLocalVariable && field.modifiers == CompilerModifiers.AccDefault) {
-				if(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {
-					findMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);
-				}
-				if(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {
-					proposeNewMethod(this.completionToken, scope.enclosingSourceType());
+				SourceTypeBinding enclosingType = scope.enclosingSourceType();
+				if(!enclosingType.isAnnotationType()) {
+					if(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {
+						findMethods(this.completionToken,null,enclosingType,scope,new ObjectVector(),false,false,true,null,null,false,false,true);
+					}
+					if(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {
+						proposeNewMethod(this.completionToken, enclosingType);
+					}
 				}
 			}
 		} else {
@@ -698,11 +701,14 @@ public final class CompletionEngine
 				}
 			
 				if(method.modifiers == CompilerModifiers.AccDefault) {
-					if(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {
-						findMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);
-					}
-					if(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {
-						proposeNewMethod(this.completionToken, scope.enclosingSourceType());
+					SourceTypeBinding enclosingType = scope.enclosingSourceType();
+					if(!enclosingType.isAnnotationType()) {
+						if(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {
+							findMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);
+						}
+						if(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {
+							proposeNewMethod(this.completionToken, scope.enclosingSourceType());
+						}
 					}
 				}
 			} else {
