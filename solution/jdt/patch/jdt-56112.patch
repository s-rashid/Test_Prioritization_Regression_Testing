diff --git a/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java b/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java
index f855814..eb70a24 100644
--- a/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java
+++ b/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java
@@ -128,16 +128,22 @@ public class ParticipantBuildTests extends Tests {
 		expectingNoProblems();
 	}
 
-	public void testProcessAnnotationReferences() throws JavaModelException {
+	public void testProcessAnnotationQualifiedReferences() throws JavaModelException {
 		IPath projectPath = env.addProject("Project", "1.5"); //$NON-NLS-1$ //$NON-NLS-2$
 		env.addExternalJars(projectPath, Util.getJavaClassLibs());
 		env.removePackageFragmentRoot(projectPath, ""); //$NON-NLS-1$
 		IPath root = env.addPackageFragmentRoot(projectPath, "src"); //$NON-NLS-1$
 		env.setOutputFolder(projectPath, "bin"); //$NON-NLS-1$
 
-		env.addClass(root, "", "Test", //$NON-NLS-1$ //$NON-NLS-2$
+		env.addClass(root, "p1", "Test", //$NON-NLS-1$ //$NON-NLS-2$
+			"package p1;\n" + //$NON-NLS-1$
 			"@GeneratedAnnotation\n" + //$NON-NLS-1$
-			"public class Test {}\n" //$NON-NLS-1$
+			"public class Test { public void method() { p1.p2.GeneratedType.method(); } }\n" //$NON-NLS-1$
+			);
+
+		env.addClass(root, "p1", "GeneratedAnnotation", //$NON-NLS-1$ //$NON-NLS-2$
+			"package p1;\n" + //$NON-NLS-1$
+			"@interface GeneratedAnnotation{}\n" //$NON-NLS-1$
 			);
 
 		// install compilationParticipant
@@ -148,10 +154,13 @@ public class ParticipantBuildTests extends Tests {
 			public void processAnnotations(ICompilationParticipantResult[] files) {
 				// want to add a gen'ed source file that is referenced from the initial file to see if its recompiled
 				ICompilationParticipantResult result = files[0];
-				IFile genedType = result.getFile().getParent().getFile(new Path("GeneratedAnnotation.java")); //$NON-NLS-1$
+				IFile genedType = result.getFile().getProject().getFile(new Path("src/p1/p2/GeneratedType.java")); //$NON-NLS-1$
 				if (genedType.exists()) return;
 				try {
-					genedType.create(new ByteArrayInputStream("@interface GeneratedAnnotation {}".getBytes()), true, null); //$NON-NLS-1$
+					IFolder folder = (IFolder) genedType.getParent();
+					if(!folder.exists())
+						folder.create(true, true, null);				
+					genedType.create(new ByteArrayInputStream("package p1.p2; public class GeneratedType { public static void method(){} }".getBytes()), true, null); //$NON-NLS-1$
 				} catch (CoreException e) {
 					e.printStackTrace();
 				}
@@ -163,7 +172,7 @@ public class ParticipantBuildTests extends Tests {
 		expectingNoProblems();
 	}
 
-	public void testProcessAnnotationReferences2() throws JavaModelException {
+	public void testProcessAnnotationReferences() throws JavaModelException {
 		IPath projectPath = env.addProject("Project", "1.5"); //$NON-NLS-1$ //$NON-NLS-2$
 		env.addExternalJars(projectPath, Util.getJavaClassLibs());
 		env.removePackageFragmentRoot(projectPath, ""); //$NON-NLS-1$
@@ -172,11 +181,7 @@ public class ParticipantBuildTests extends Tests {
 
 		env.addClass(root, "", "Test", //$NON-NLS-1$ //$NON-NLS-2$
 			"@GeneratedAnnotation\n" + //$NON-NLS-1$
-			"public class Test extends p.GeneratedType {}\n" //$NON-NLS-1$
-			);
-
-		env.addClass(root, "", "GeneratedAnnotation", //$NON-NLS-1$ //$NON-NLS-2$
-			"@interface GeneratedAnnotation{}\n"
+			"public class Test {}\n" //$NON-NLS-1$
 			);
 
 		// install compilationParticipant
@@ -187,15 +192,10 @@ public class ParticipantBuildTests extends Tests {
 			public void processAnnotations(ICompilationParticipantResult[] files) {
 				// want to add a gen'ed source file that is referenced from the initial file to see if its recompiled
 				ICompilationParticipantResult result = files[0];
-				if (!"Test.java".equals(result.getFile().getName())) return; //$NON-NLS-1$
-				IFile genedType = null;
+				IFile genedType = result.getFile().getParent().getFile(new Path("GeneratedAnnotation.java")); //$NON-NLS-1$
+				if (genedType.exists()) return;
 				try {
-					IFolder genedFolder = result.getFile().getParent().getFolder(new Path("p"));
-					if (!genedFolder.exists())
-						genedFolder.create(true, false, null);
-					genedType = genedFolder.getFile(new Path("GeneratedType.java")); //$NON-NLS-1$
-					if (genedType.exists()) return;
-					genedType.create(new ByteArrayInputStream("package p; public class GeneratedType {}".getBytes()), true, null); //$NON-NLS-1$
+					genedType.create(new ByteArrayInputStream("@interface GeneratedAnnotation {}".getBytes()), true, null); //$NON-NLS-1$
 				} catch (CoreException e) {
 					e.printStackTrace();
 				}
