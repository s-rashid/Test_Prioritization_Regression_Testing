diff --git a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java
index 5a07f9d..b438449 100644
--- a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java
+++ b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java
@@ -2004,7 +2004,7 @@ public class EnumTest extends AbstractComparableTest {
 			""
 		);
 		String expectedOutput = 
-			"  // Method descriptor #16 (Ljava/lang/String;I)V\n" + 
+			"  // Method descriptor #18 (Ljava/lang/String;I)V\n" + 
 			"  // Stack: 3, Locals: 3\n" + 
 			"  private X(String arg, int arg);\n" + 
 			"    0  aload_0 [this]\n" + 
@@ -2628,7 +2628,7 @@ public class EnumTest extends AbstractComparableTest {
 		}
 		
 		String expectedOutput = 
-			"  // Method descriptor #18 (Ljava/lang/String;I)V\n" + 
+			"  // Method descriptor #20 (Ljava/lang/String;I)V\n" + 
 			"  // Stack: 3, Locals: 3\n" + 
 			"  private X(String arg, int arg);\n"; 
 			
@@ -2889,7 +2889,7 @@ public class EnumTest extends AbstractComparableTest {
 			"    0  aload_0 [this]\n" + 
 			"    1  aload_1\n" + 
 			"    2  iload_2\n" + 
-			"    3  invokespecial java.lang.Enum(java.lang.String, int) [11]\n" + 
+			"    3  invokespecial java.lang.Enum(java.lang.String, int) [10]\n" + 
 			"    6  return\n" + 
 			"      Line numbers:\n" + 
 			"        [pc: 0, line: 1]\n" + 
@@ -2899,7 +2899,7 @@ public class EnumTest extends AbstractComparableTest {
 			"  // Method descriptor #17 ()[LX;\n" + 
 			"  // Stack: 5, Locals: 3\n" + 
 			"  public static final X[] values();\n" + 
-			"     0  getstatic X.ENUM$VALUES : X[] [19]\n" + 
+			"     0  getstatic X.ENUM$VALUES : X[] [18]\n" + 
 			"     3  dup\n" + 
 			"     4  astore_0\n" + 
 			"     5  iconst_0\n" + 
@@ -2907,12 +2907,12 @@ public class EnumTest extends AbstractComparableTest {
 			"     7  arraylength\n" + 
 			"     8  dup\n" + 
 			"     9  istore_1\n" + 
-			"    10  anewarray X [2]\n" + 
+			"    10  anewarray X [1]\n" + 
 			"    13  dup\n" + 
 			"    14  astore_2\n" + 
 			"    15  iconst_0\n" + 
 			"    16  iload_1\n" + 
-			"    17  invokestatic java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int) : void  [25]\n" + 
+			"    17  invokestatic java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int) : void [20]\n" + 
 			"    20  aload_2\n" + 
 			"    21  areturn\n" + 
 			"      Line numbers:\n" + 
@@ -2921,7 +2921,7 @@ public class EnumTest extends AbstractComparableTest {
 			"  // Method descriptor #27 (Ljava/lang/String;)LX;\n" + 
 			"  // Stack: 3, Locals: 4\n" + 
 			"  public static final X valueOf(String arg);\n" + 
-			"     0  getstatic X.ENUM$VALUES : X[] [19]\n" + 
+			"     0  getstatic X.ENUM$VALUES : X[] [18]\n" + 
 			"     3  dup\n" + 
 			"     4  astore_1\n" + 
 			"     5  arraylength\n" + 
@@ -2933,18 +2933,18 @@ public class EnumTest extends AbstractComparableTest {
 			"    13  aaload\n" + 
 			"    14  dup\n" + 
 			"    15  astore_3\n" + 
-			"    16  invokevirtual X.name() : java.lang.String  [31]\n" + 
-			"    19  invokevirtual java.lang.String.equals(java.lang.Object) : boolean  [37]\n" + 
+			"    16  invokevirtual X.name() : java.lang.String [28]\n" + 
+			"    19  invokevirtual java.lang.String.equals(java.lang.Object) : boolean [32]\n" + 
 			"    22  ifeq 27\n" + 
 			"    25  aload_3\n" + 
 			"    26  areturn\n" + 
 			"    27  iinc 2 -1\n" + 
 			"    30  iload_2\n" + 
 			"    31  ifge 10\n" + 
-			"    34  new java.lang.IllegalArgumentException [39]\n" + 
+			"    34  new java.lang.IllegalArgumentException [38]\n" + 
 			"    37  dup\n" + 
 			"    38  aload_0\n" + 
-			"    39  invokespecial java.lang.IllegalArgumentException(java.lang.String) [42]\n" + 
+			"    39  invokespecial java.lang.IllegalArgumentException(java.lang.String) [40]\n" + 
 			"    42  athrow\n" + 
 			"      Line numbers:\n" + 
 			"        [pc: 0, line: 1]\n" +
