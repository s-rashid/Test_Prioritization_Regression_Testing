diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/core/IJavaElement.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/core/IJavaElement.java
index 6e86fd2..8f306c5 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/core/IJavaElement.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/core/IJavaElement.java
@@ -162,31 +162,37 @@ public interface IJavaElement extends IAdaptable {
 	/**
 	 * <p>Returns the Javadoc as an html source if this element has an attached javadoc,
 	 * null otherwise.</p> 
-	 * <p>This should be used only for binary elements. Source elements will always return null.
-	 * The encoding used to read the javadoc is the one defined by the content type of the
-	 * file. If none is defined, then the specified encoding will be used as the default encoding.</p>
+	 * <p>This should be used only for binary elements. Source elements will always return null.</p>
+	 * <p>The encoding used to read the javadoc is the one defined by the content type of the
+	 * file. If none is defined, then the project's encoding of this java element is used. If the project's 
+	 * encoding cannot be retrieved, then the platform encoding is used.</p>
 	 * <p>In case of the javadoc doesn't exist for this element, null is returned.</p>
 	 * 
 	 * <p>The html is extracted from the attached javadoc and provided as is. No
 	 * transformation or validation is done.</p>
 	 *
-	 * <p>If the default encoding is set to null, the default encoding of the project is used. If
-	 * the default encoding of the project is not supported, then the platform encoding is used.</p>
-	 * 
 	 * <p>NOTE: This API is subject to change before the 3.2 release.</p>
 	 * 
 	 * @param monitor the given progress monitor
-	 * @param defaultEncoding the given default encoding
 	 * @exception JavaModelException if:<ul>
 	 *  <li>this element does not exist</li>
-	 *  <li>retrieving the attached javadoc fails (timed-out, invalid URL, ...)
+	 *  <li>retrieving the attached javadoc fails (timed-out, invalid URL, ...)</li>
 	 *  <li>the format of the javadoc doesn't match expected standards (different anchors,...)</li>
 	 *  </ul>
 	 * @return the extracted javadoc from the attached javadoc, null if none
 	 * @see IClasspathAttribute#JAVADOC_LOCATION_ATTRIBUTE_NAME
 	 * @since 3.2
 	 */
-	String getAttachedJavadoc(IProgressMonitor monitor, String defaultEncoding) throws JavaModelException;	
+	String getAttachedJavadoc(IProgressMonitor monitor) throws JavaModelException;		
+
+	/**
+	 * @param monitor
+	 * @param encoding
+	 * @return the attached javadoc
+	 * @throws JavaModelException
+	 * @deprecated Use #{@link #getAttachedJavadoc(IProgressMonitor) getAttachedJavadoc(IProgressMonitor)} instead
+	 */
+	String getAttachedJavadoc(IProgressMonitor monitor, String encoding) throws JavaModelException;
 
 	/**
 	 * Returns the resource that corresponds directly to this element,
