diff --git a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java
index 9b10e24..1f4c350 100644
--- a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java
+++ b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java
@@ -34,6 +34,7 @@ package org.eclipse.jdt.internal.codeassist.select;
 import org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;
 import org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;
 import org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;
+import org.eclipse.jdt.internal.compiler.lookup.Binding;
 import org.eclipse.jdt.internal.compiler.lookup.BlockScope;
 import org.eclipse.jdt.internal.compiler.lookup.ProblemReasons;
 import org.eclipse.jdt.internal.compiler.lookup.TypeBinding;
@@ -71,7 +72,7 @@ public class SelectionOnQualifiedAllocationExpression extends QualifiedAllocatio
 		// if selecting a type for an anonymous type creation, we have to
 		// find its target super constructor (if extending a class) or its target 
 		// super interface (if extending an interface)
-		if (anonymousType.binding.superInterfaces == NoSuperInterfaces) {
+		if (anonymousType.binding.superInterfaces == Binding.NO_SUPERINTERFACES) {
 			// find the constructor binding inside the super constructor call
 			ConstructorDeclaration constructor = (ConstructorDeclaration) anonymousType.declarationOf(binding.original());
 			throw new SelectionNodeFound(constructor.constructorCall.binding);
