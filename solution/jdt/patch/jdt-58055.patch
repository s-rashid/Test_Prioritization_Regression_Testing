diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java
index 88fb902..0c64000 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java
@@ -1959,6 +1959,8 @@ public final void jumpOverMethodBody() {
 								case ScannerHelper.C_DIGIT :
 									scanNumber(false);
 									break NextToken;
+								default:
+									break NextToken;
 							}
 						}
 						boolean isJavaIdStart;
@@ -1970,15 +1972,11 @@ public final void jumpOverMethodBody() {
 							char low = (char) getNextChar();
 							if (low < LOW_SURROGATE_MIN_VALUE || low > LOW_SURROGATE_MAX_VALUE) {
 								// illegal low surrogate
-								throw new InvalidInputException(INVALID_LOW_SURROGATE);
+								break NextToken;
 							}
 							isJavaIdStart = ScannerHelper.isJavaIdentifierStart(c, low);
-						}
-						else if (c >= LOW_SURROGATE_MIN_VALUE && c <= LOW_SURROGATE_MAX_VALUE) {
-							if (this.complianceLevel < ClassFileConstants.JDK1_5) {
-								throw new InvalidInputException(INVALID_UNICODE_ESCAPE);
-							}
-							throw new InvalidInputException(INVALID_HIGH_SURROGATE);
+						} else if (c >= LOW_SURROGATE_MIN_VALUE && c <= LOW_SURROGATE_MAX_VALUE) {
+							break NextToken;
 						} else {
 							isJavaIdStart = Character.isJavaIdentifierStart(c);
 						}
@@ -1986,10 +1984,10 @@ public final void jumpOverMethodBody() {
 							scanIdentifierOrKeyword();
 							break NextToken;
 						}
-						if (ScannerHelper.isDigit(this.currentCharacter)) {
-							scanNumber(false);
-							break NextToken;
-						}						
+//						if (ScannerHelper.isDigit(this.currentCharacter)) {
+//							scanNumber(false);
+//							break NextToken;
+//						}						
 					} catch (InvalidInputException ex) {
 						// ignore
 					}
