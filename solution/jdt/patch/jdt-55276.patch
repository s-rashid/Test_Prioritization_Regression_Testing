diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/core/IJavaProject.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/core/IJavaProject.java
index 3105a69..fa19900 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/core/IJavaProject.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/core/IJavaProject.java
@@ -18,7 +18,6 @@ package org.eclipse.jdt.core;
 
 import java.util.Map;
 
-import org.eclipse.core.resources.IContainer;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.IProgressMonitor;
@@ -59,18 +58,6 @@ import org.eclipse.jdt.core.eval.IEvaluationContext;
 public interface IJavaProject extends IParent, IJavaElement, IOpenable {
 
 	/**
-	 * Returns the output folders that will be cleaned by the next Clean operation.
-	 * The result is null if the project's output folders are shared with other tools and
-	 * the option JavaCore.CORE_JAVA_BUILD_CLEAN_OUTPUT_FOLDER is false.
-	 * 
-	 * @return different groups of output folders to be cleaned, currently:
-	 * the first array contains the output folders which are cleaned entirely, and
-	 * the second array contains the output folders in which only the .class files are cleaned.
-	 * @since 3.2
-	 */
-	IContainer[][] computeCleanedFolders();
-
-	/**
 	 * Decodes the classpath entry that has been encoded in the given string
 	 * in the context of this project.
 	 * Returns null if the encoded entry is malformed.
