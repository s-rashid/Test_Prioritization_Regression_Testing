diff --git a/org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptPreferencePage.java b/org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptPreferencePage.java
index b04f56d..592bfff 100644
--- a/org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptPreferencePage.java
+++ b/org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptPreferencePage.java
@@ -11,26 +11,17 @@
 
 package org.eclipse.jdt.apt.ui.internal.preferences;
 
-import org.eclipse.core.resources.IProject;
-import org.eclipse.core.runtime.IAdaptable;
 import org.eclipse.jdt.apt.ui.AptUIPlugin;
-import org.eclipse.jdt.internal.ui.IJavaHelpContextIds;
-import org.eclipse.jdt.internal.ui.preferences.PropertyAndPreferencePage;
 import org.eclipse.swt.widgets.Composite;
-import org.eclipse.swt.widgets.Control;
-import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.preferences.IWorkbenchPreferenceContainer;
 
 /*
  * The page to configure the naming style options.
  */
-public class AptPreferencePage extends PropertyAndPreferencePage {
+public class AptPreferencePage extends BasePreferencePage {
 
-	public static final String PREF_ID= "org.eclipse.jdt.apt.ui.preferences.aptPreferences"; //$NON-NLS-1$
-	public static final String PROP_ID= "org.eclipse.jdt.apt.ui.propertyPages.aptPreferences"; //$NON-NLS-1$
-
-	
-	private AptConfigurationBlock fConfigurationBlock;
+	private static final String PREF_ID= "org.eclipse.jdt.apt.ui.preferences.aptPreferences"; //$NON-NLS-1$
+	private static final String PROP_ID= "org.eclipse.jdt.apt.ui.propertyPages.aptPreferences"; //$NON-NLS-1$
 
 	public AptPreferencePage() {
 		setPreferenceStore(AptUIPlugin.getDefault().getPreferenceStore());
@@ -45,21 +36,13 @@ public class AptPreferencePage extends PropertyAndPreferencePage {
 	 */
 	public void createControl(Composite parent) {
 		IWorkbenchPreferenceContainer container= (IWorkbenchPreferenceContainer) getContainer();
-		fConfigurationBlock= new AptConfigurationBlock(getNewStatusChangedListener(), getProject(), container);
+		setConfigurationBlock(new AptConfigurationBlock(getNewStatusChangedListener(), getProject(), container));
 		
 		super.createControl(parent);
 		//TODO: enable Help
 		//PlatformUI.getWorkbench().getHelpSystem().setHelp(parent, IJavaHelpContextIds.ORGANIZE_IMPORTS_PREFERENCE_PAGE);
 	}
 
-	protected Control createPreferenceContent(Composite composite) {
-		return fConfigurationBlock.createContents(composite);
-	}
-	
-	protected boolean hasProjectSpecificOptions(IProject project) {
-		return fConfigurationBlock.hasProjectSpecificOptions(project);
-	}
-	
 	/* (non-Javadoc)
 	 * @see org.eclipse.jdt.internal.ui.preferences.PropertyAndPreferencePage#getPreferencePageID()
 	 */
@@ -74,62 +57,6 @@ public class AptPreferencePage extends PropertyAndPreferencePage {
 		return PROP_ID;
 	}
 	
-	/* (non-Javadoc)
-	 * @see org.eclipse.jface.dialogs.DialogPage#dispose()
-	 */
-	public void dispose() {
-		if (fConfigurationBlock != null) {
-			fConfigurationBlock.dispose();
-		}
-		super.dispose();
-	}
-	
-	/* (non-Javadoc)
-	 * @see org.eclipse.jdt.internal.ui.preferences.PropertyAndPreferencePage#enableProjectSpecificSettings(boolean)
-	 */
-	protected void enableProjectSpecificSettings(boolean useProjectSpecificSettings) {
-		if (fConfigurationBlock != null) {
-			fConfigurationBlock.useProjectSpecificSettings(useProjectSpecificSettings);
-		}
-		super.enableProjectSpecificSettings(useProjectSpecificSettings);
-	}
-	
-	/*
-	 * @see org.eclipse.jface.preference.IPreferencePage#performDefaults()
-	 */
-	protected void performDefaults() {
-		super.performDefaults();
-		if (fConfigurationBlock != null) {
-			fConfigurationBlock.performDefaults();
-		}
-	}
-
-	/*
-	 * @see org.eclipse.jface.preference.IPreferencePage#performOk()
-	 */
-	public boolean performOk() {
-		if (fConfigurationBlock != null && !fConfigurationBlock.performOk()) {
-			return false;
-		}	
-		return super.performOk();
-	}
-	
-	/*
-	 * @see org.eclipse.jface.preference.IPreferencePage#performApply()
-	 */
-	public void performApply() {
-		if (fConfigurationBlock != null) {
-			fConfigurationBlock.performApply();
-		}
-	}
-	
-	/* (non-Javadoc)
-	 * @see org.eclipse.jdt.internal.ui.preferences.PropertyAndPreferencePage#setElement(org.eclipse.core.runtime.IAdaptable)
-	 */
-	public void setElement(IAdaptable element) {
-		super.setElement(element);
-		setDescription(null); // no description for property page
-	}
 	
 
 }
