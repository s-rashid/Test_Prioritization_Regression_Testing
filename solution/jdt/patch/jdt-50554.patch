diff --git a/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java b/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java
index aee2f09..dd9c8e8 100644
--- a/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java
+++ b/org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java
@@ -12,6 +12,7 @@ package org.eclipse.jdt.core.tests.builder;
 
 import junit.framework.*;
 import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.jdt.core.JavaModelException;
 import org.eclipse.jdt.core.tests.util.AbstractCompilerTest;
 import org.eclipse.jdt.core.tests.util.Util;
@@ -235,6 +236,57 @@ public class DependencyTests extends Tests {
 		expectingNoProblems();
 	}
 
+	public void testExternalJarChanged() throws CoreException, java.io.IOException {
+		IPath projectPath = env.addProject("Project"); //$NON-NLS-1$
+		env.addExternalJars(projectPath, Util.getJavaClassLibs());
+
+		IPath root = env.getPackageFragmentRootPath(projectPath, ""); //$NON-NLS-1$
+		IPath classTest = env.addClass(root, "p", "X", //$NON-NLS-1$ //$NON-NLS-2$
+			"package p;\n"+ //$NON-NLS-1$
+			"public class X {\n" + //$NON-NLS-1$
+			"  void foo() {\n" + //$NON-NLS-1$
+			"    new q.Y().bar();\n" + //$NON-NLS-1$
+			"  }\n" + //$NON-NLS-1$
+			"}" //$NON-NLS-1$
+		);
+		String externalJar = Util.getOutputDirectory() + java.io.File.separator + "test.jar"; //$NON-NLS-1$
+		Util.createJar(
+			new String[] {
+				"q/Y.java", //$NON-NLS-1$
+				"package q;\n" + //$NON-NLS-1$
+				"public class Y {\n" + //$NON-NLS-1$
+				"}" //$NON-NLS-1$
+			},
+			new java.util.HashMap(),
+			externalJar
+		);
+		env.addExternalJar(projectPath, externalJar);
+
+		// build -> expecting problems
+		fullBuild();
+		expectingProblemsFor(classTest);
+
+		// fix jar
+		Util.createJar(
+			new String[] {
+				"q/Y.java", //$NON-NLS-1$
+				"package q;\n" + //$NON-NLS-1$
+				"public class Y {\n" + //$NON-NLS-1$
+				"  public void bar() {\n" + //$NON-NLS-1$
+				"  }\n" + //$NON-NLS-1$
+				"}" //$NON-NLS-1$
+			},
+			new java.util.HashMap(),
+			externalJar
+		);
+		// add new class to trigger an incremental build
+		env.getProject(projectPath).touch(null);
+
+		// incremental build should notice jar file has changed & do a full build
+		incrementalBuild();
+		expectingNoProblems();
+	}
+
 	public void testFieldDeleting() throws JavaModelException {
 		IPath projectPath = env.addProject("Project"); //$NON-NLS-1$
 		env.addExternalJars(projectPath, Util.getJavaClassLibs());
