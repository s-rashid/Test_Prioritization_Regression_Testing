diff --git a/org.eclipse.jdt.core/scripts/GenerateBuildScript.java b/org.eclipse.jdt.core/scripts/GenerateBuildScript.java
index ea42020..06b1398 100644
--- a/org.eclipse.jdt.core/scripts/GenerateBuildScript.java
+++ b/org.eclipse.jdt.core/scripts/GenerateBuildScript.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 import java.io.BufferedWriter;
 import java.io.File;
+import java.io.FileFilter;
 import java.io.FileWriter;
 import java.io.IOException;
 import java.io.Writer;
@@ -17,48 +18,48 @@ import java.util.ArrayList;
 
 public class GenerateBuildScript {
 
-	private static final String LINE_SEPARATOR = System.getProperty("line.separator");
+	private static final String LINE_SEPARATOR = System.getProperty("line.separator"); //$NON-NLS-1$
 	private static final String HEADER=
-		"<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + LINE_SEPARATOR +
-		"<project name=\"export-executable\" default=\"build_executable\">" +LINE_SEPARATOR +
-		"    <target name=\"build_executable\">" + LINE_SEPARATOR +
-		"        <echo message=\"compiling resources   -> .o\"/>" + LINE_SEPARATOR;
+		"<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"<project name=\"export-executable\" default=\"build_executable\">" +LINE_SEPARATOR + //$NON-NLS-1$
+		"    <target name=\"build_executable\">" + LINE_SEPARATOR; //$NON-NLS-1$
 		
+	private static final String SOURCE_FILES =
+		"	    <echo message=\"compiling sources      -> .o\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"        <apply failonerror=\"true\" executable=\"${gcc-path}/bin/gcj.exe\" dest=\"${bin}\" parallel=\"false\">" + LINE_SEPARATOR + //$NON-NLS-1$
+		"  			 <arg value=\"--verbose\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"--classpath=${bin}\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-O2\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-c\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-fassume-compiled\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-march=pentium4\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-mfpmath=sse\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <srcfile/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-o\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <targetfile/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <fileset dir=\"${bin}\" includes=\"**/*.java\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <mapper type=\"glob\" from=\"*.java\" to=\"*.o\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"        </apply>" + LINE_SEPARATOR + LINE_SEPARATOR; //$NON-NLS-1$
 	private static final String FOOTER =
-		"	    <echo message=\"compiling sources      -> .o\"/>" + LINE_SEPARATOR +
-		"        <apply failonerror=\"true\" executable=\"${gcc-path}/bin/gcj.exe\" dest=\"${work}\" parallel=\"false\">" + LINE_SEPARATOR +
-		"  			 <arg value=\"--verbose\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"--classpath=${work}\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"-O2\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"-c\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"-fassume-compiled\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"-march=pentium4\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"-mfpmath=sse\"/>" + LINE_SEPARATOR +
-		"            <srcfile/>" + LINE_SEPARATOR +
-		"            <arg value=\"-o\"/>" + LINE_SEPARATOR +
-		"            <targetfile/>" + LINE_SEPARATOR +
-		"            <fileset dir=\"${work}\" includes=\"**/*.java\"/>" + LINE_SEPARATOR +
-		"            <mapper type=\"glob\" from=\"*.java\" to=\"*.o\"/>" + LINE_SEPARATOR +
-		"        </apply>" + LINE_SEPARATOR + LINE_SEPARATOR +
-		"        <echo message=\"linking .o -> ${binaryname}\"/>" + LINE_SEPARATOR +
-		"        <apply failonerror=\"true\" executable=\"${gcc-path}/bin/gcj.exe\" parallel=\"true\">" + LINE_SEPARATOR +
-		"        	<arg value=\"--verbose\"/>" + LINE_SEPARATOR +
-		"            <arg line =\"-o ${dest}${binaryname}.exe\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"-fassume-compiled\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"-march=pentium4\"/>" + LINE_SEPARATOR +
-		"            <arg value=\"-mfpmath=sse\"/>" + LINE_SEPARATOR +
-		"            <arg line=\"--main=org.eclipse.jdt.internal.compiler.batch.Main\"/>" + LINE_SEPARATOR +
-		"            <fileset dir=\"${work}\" includes=\"**/*.o\"/>" + LINE_SEPARATOR +
-		"       </apply>" + LINE_SEPARATOR +
-		"    </target>" + LINE_SEPARATOR +
-		"</project>" + LINE_SEPARATOR;
+		"        <echo message=\"linking .o -> ${binaryname}\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"        <apply failonerror=\"true\" executable=\"${gcc-path}/bin/gcj.exe\" parallel=\"true\">" + LINE_SEPARATOR + //$NON-NLS-1$
+		"        	<arg value=\"--verbose\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg line =\"-o ${dest}/${binaryname}.exe\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-fassume-compiled\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-march=pentium4\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-mfpmath=sse\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg line=\"--main=org.eclipse.jdt.internal.compiler.batch.Main\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <fileset dir=\"${bin}\" includes=\"**/*.o\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"       </apply>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"    </target>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"</project>" + LINE_SEPARATOR; //$NON-NLS-1$
 
-	private static void collectAllPropertiesFiles(File root, ArrayList collector) {
-		File[] files = root.listFiles();
+	private static void collectAllFiles(File root, ArrayList collector, FileFilter fileFilter) {
+		File[] files = root.listFiles(fileFilter);
 		for (int i = 0; i < files.length; i++) {
 			if (files[i].isDirectory()) {
-				collectAllPropertiesFiles(files[i], collector);
-			} else if (files[i].getName().endsWith(".rsc") || files[i].getName().endsWith(".properties")) { //$NON-NLS-1$
+				collectAllFiles(files[i], collector, fileFilter);
+			} else {
 				String newElement = files[i].getAbsolutePath();
 				newElement = newElement.replace('\\', '/');
 				collector.add(newElement);
@@ -67,18 +68,46 @@ public class GenerateBuildScript {
 	}
 
 	private static void dumpAllProperties(Writer writer, File sourceDir, ArrayList collector) throws IOException {
+		writer.write("        <echo message=\"compiling resources   -> .o\"/>" + LINE_SEPARATOR); //$NON-NLS-1$
 		for (int i = 0, max = collector.size(); i < max; i++) {
 			String absolutePath = (String) collector.get(i);
 			String fileName = absolutePath.substring(sourceDir.getAbsolutePath().length() + 1); 
-			writer.write("  		<exec dir=\"${work}\" executable=\"${gcc-path}/bin/gcj.exe\">" + LINE_SEPARATOR);
-			writer.write("  		  <arg line=\"--resource ");
-			writer.write(fileName + " " + fileName + " -c -o " + getObjectName(fileName) + "\"/>" + LINE_SEPARATOR);
-			writer.write("  		</exec>" + LINE_SEPARATOR);
+			writer.write("  		<exec dir=\"${bin}\" executable=\"${gcc-path}/bin/gcj.exe\">" + LINE_SEPARATOR); //$NON-NLS-1$
+			writer.write("  		  <arg line=\"--resource "); //$NON-NLS-1$
+			writer.write(fileName + " " + fileName + " -c -o " + getObjectName(fileName) + "\"/>" + LINE_SEPARATOR); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+			writer.write("  		</exec>" + LINE_SEPARATOR); //$NON-NLS-1$
 		}
 	}
 
+	private static void dumpAllClassFiles(Writer writer, File sourceDir, ArrayList collector) throws IOException {
+		writer.write("        <echo message=\"compiling class files   -> .o\"/>" + LINE_SEPARATOR); //$NON-NLS-1$
+//		for (int i = 0, max = collector.size(); i < max; i++) {
+//			String absolutePath = (String) collector.get(i);
+//			String fileName = absolutePath.substring(sourceDir.getAbsolutePath().length() + 1);
+//			writer.write("  		<exec dir=\"${bin}\" executable=\"${gcc-path}/bin/gcj.exe\">" + LINE_SEPARATOR); //$NON-NLS-1$
+//			writer.write("  		  <arg line=\""); //$NON-NLS-1$
+//			writer.write(fileName + " -c -o " + getObjectName(fileName) + "\"/>" + LINE_SEPARATOR); //$NON-NLS-1$ //$NON-NLS-2$
+//			writer.write("  		</exec>" + LINE_SEPARATOR); //$NON-NLS-1$
+//		}
+		writer.write(
+		"        <apply failonerror=\"true\" executable=\"${gcc-path}/bin/gcj.exe\" dest=\"${bin}\" parallel=\"false\">" + LINE_SEPARATOR + //$NON-NLS-1$
+		"  			 <arg value=\"--verbose\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"--classpath=${bin}\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-O2\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-c\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-fassume-compiled\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-march=pentium4\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-mfpmath=sse\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <srcfile/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <arg value=\"-o\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <targetfile/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <fileset dir=\"${bin}\" includes=\"**/*.class\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"            <mapper type=\"glob\" from=\"*.class\" to=\"*.o\"/>" + LINE_SEPARATOR + //$NON-NLS-1$
+		"        </apply>" + LINE_SEPARATOR + LINE_SEPARATOR); //$NON-NLS-1$
+	}
+
 	private static String getObjectName(String fileName) {
-		return fileName.substring(0, fileName.lastIndexOf('.')) + ".o";
+		return fileName.substring(0, fileName.lastIndexOf('.')) + ".o"; //$NON-NLS-1$
 	}
 			
 	public static void main(String[] args) {
@@ -91,8 +120,23 @@ public class GenerateBuildScript {
 			File sourceDir = new File(args[1]);
 			if (sourceDir.exists()) { 
 				ArrayList collector = new ArrayList();
-				collectAllPropertiesFiles(sourceDir, collector);
+				collectAllFiles(sourceDir, collector, new FileFilter() {
+					public boolean accept(File pathname) {
+						String fileName = pathname.getAbsolutePath();
+						return pathname.isDirectory() || fileName.endsWith(".rsc") || fileName.endsWith(".properties"); //$NON-NLS-1$ //$NON-NLS-2$
+					}
+				});
 				dumpAllProperties(writer, sourceDir, collector);
+				collector = new ArrayList();
+				collectAllFiles(sourceDir, collector, new FileFilter() {
+					public boolean accept(File pathname) {
+						String fileName = pathname.getAbsolutePath();
+						return pathname.isDirectory() || fileName.endsWith(".class"); //$NON-NLS-1$
+					}
+				});
+				dumpAllClassFiles(writer, sourceDir, collector);				
+				
+//				writer.write(SOURCE_FILES);
 			}
 			writer.write(FOOTER);
 			writer.flush();
