diff --git a/org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java b/org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java
index dfd2dde..57ce46e 100644
--- a/org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java
+++ b/org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java
@@ -28,7 +28,6 @@ import org.apache.tools.ant.Project;
 import org.apache.tools.ant.taskdefs.Javac;
 import org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter;
 import org.apache.tools.ant.types.Commandline;
-import org.apache.tools.ant.types.FileSet;
 import org.apache.tools.ant.types.Path;
 import org.apache.tools.ant.types.Commandline.Argument;
 import org.apache.tools.ant.util.JavaEnvUtils;
@@ -125,7 +124,10 @@ public class JDTCompilerAdapter extends DefaultCompilerAdapter {
          * It is emulated using the classpath. We add extdirs entries after the 
          * bootclasspath.
          */
-        addExtdirs(this.extdirs, classpath);
+        if (this.extdirs != null) {
+			cmd.createArgument().setValue("-extdirs"); //$NON-NLS-1$
+			cmd.createArgument().setPath(this.extdirs);        	
+        }
 
 		/*
 		 * The java runtime is already handled, so we simply want to retrieve the
@@ -544,32 +546,4 @@ public class JDTCompilerAdapter extends DefaultCompilerAdapter {
 
 		attributes.log(niceSourceList.toString(), Project.MSG_VERBOSE);
 	}
-    /**
-     * Emulation of extdirs feature in java >= 1.2.
-     * This method adds all files in the given
-     * directories (but not in sub-directories!) to the classpath,
-     * so that you don't have to specify them all one by one.
-     * @param extDirs - Path to append files to
-     */
-    private void addExtdirs(Path extDirs, Path classpath) {
-        if (extDirs == null) {
-            String extProp = System.getProperty("java.ext.dirs"); //$NON-NLS-1$
-            if (extProp != null) {
-                extDirs = new Path(classpath.getProject(), extProp);
-            } else {
-                return;
-            }
-        }
-
-        String[] dirs = extDirs.list();
-        for (int i = 0; i < dirs.length; i++) {
-            File dir = classpath.getProject().resolveFile(dirs[i]);
-            if (dir.exists() && dir.isDirectory()) {
-                FileSet fs = new FileSet();
-                fs.setDir(dir);
-                fs.setIncludes("*.zip,*.jar"); //$NON-NLS-1$
-                classpath.addFileset(fs);
-            }
-        }
-    }
 }
